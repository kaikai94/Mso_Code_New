; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	E:\GitHub\Mso_Code\4DyuchiNET_Latest\read_memory_handle.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?OnRead@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z ; CReadMemoryHandle::OnRead
PUBLIC	?OnReadC@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z ; CReadMemoryHandle::OnReadC
PUBLIC	?InitializeMemory@CReadMemoryHandle@@QAEXXZ	; CReadMemoryHandle::InitializeMemory
PUBLIC	?ResetMemory@CReadMemoryHandle@@QAEXXZ		; CReadMemoryHandle::ResetMemory
PUBLIC	??0CReadMemoryHandle@@QAE@XZ			; CReadMemoryHandle::CReadMemoryHandle
PUBLIC	??1CReadMemoryHandle@@QAE@XZ			; CReadMemoryHandle::~CReadMemoryHandle
EXTRN	_memcpy:PROC
; Function compile flags: /Odspy
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CReadMemoryHandle@@QAE@XZ PROC			; CReadMemoryHandle::~CReadMemoryHandle
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\read_memory_handle.cpp
; Line 173
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 175
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
??1CReadMemoryHandle@@QAE@XZ ENDP			; CReadMemoryHandle::~CReadMemoryHandle
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CReadMemoryHandle@@QAE@XZ PROC			; CReadMemoryHandle::CReadMemoryHandle
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\read_memory_handle.cpp
; Line 4
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 60 18 00	 and	 DWORD PTR [eax+24], 0
; Line 6
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 20 00	 and	 DWORD PTR [eax], 0
; Line 7
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 48 04 ff	 or	 DWORD PTR [eax+4], -1
; Line 8
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; Line 9
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	83 60 0c 00	 and	 DWORD PTR [eax+12], 0
; Line 10
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	83 60 10 00	 and	 DWORD PTR [eax+16], 0
; Line 11
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 60 14 00	 and	 DWORD PTR [eax+20], 0
; Line 12
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??0CReadMemoryHandle@@QAE@XZ ENDP			; CReadMemoryHandle::CReadMemoryHandle
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetMemory@CReadMemoryHandle@@QAEXXZ PROC		; CReadMemoryHandle::ResetMemory
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\read_memory_handle.cpp
; Line 162
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 163
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 10 64	 cmp	 DWORD PTR [eax+16], 100	; 00000064H
  0000e	73 48		 jae	 SHORT $LN2@ResetMemor
; Line 165
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  00019	2b 41 14	 sub	 eax, DWORD PTR [ecx+20]
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	89 41 10	 mov	 DWORD PTR [ecx+16], eax
; Line 166
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	ff 70 14	 push	 DWORD PTR [eax+20]
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	ff 70 0c	 push	 DWORD PTR [eax+12]
  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	ff 30		 push	 DWORD PTR [eax]
  00033	e8 00 00 00 00	 call	 _memcpy
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 167
  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00043	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
; Line 168
  00046	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	03 41 14	 add	 eax, DWORD PTR [ecx+20]
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN2@ResetMemor:
; Line 170
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?ResetMemory@CReadMemoryHandle@@QAEXXZ ENDP		; CReadMemoryHandle::ResetMemory
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InitializeMemory@CReadMemoryHandle@@QAEXXZ PROC	; CReadMemoryHandle::InitializeMemory
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\read_memory_handle.cpp
; Line 15
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 16
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 60 1c 00	 and	 DWORD PTR [eax+28], 0
; Line 17
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00016	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00022	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 18
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0002e	89 48 10	 mov	 DWORD PTR [eax+16], ecx
; Line 19
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 60 14 00	 and	 DWORD PTR [eax+20], 0
; Line 20
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?InitializeMemory@CReadMemoryHandle@@QAEXXZ ENDP	; CReadMemoryHandle::InitializeMemory
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_size$ = -16						; size = 4
_count$ = -12						; size = 4
_dwLength$ = -8						; size = 4
_this$ = -4						; size = 4
_dwSize$ = 8						; size = 4
_pBuf$ = 12						; size = 4
_dwBufNum$ = 16						; size = 4
_pdwTotalMsgBytes$ = 20					; size = 4
_pdwTotalMsgNum$ = 24					; size = 4
?OnReadC@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z PROC ; CReadMemoryHandle::OnReadC
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\read_memory_handle.cpp
; Line 110
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 118
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0000f	03 45 08	 add	 eax, DWORD PTR _dwSize$[ebp]
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
; Line 119
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001e	03 45 08	 add	 eax, DWORD PTR _dwSize$[ebp]
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 120
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  0002d	03 45 08	 add	 eax, DWORD PTR _dwSize$[ebp]
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	89 41 14	 mov	 DWORD PTR [ecx+20], eax
; Line 121
  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0003c	2b 45 08	 sub	 eax, DWORD PTR _dwSize$[ebp]
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	89 41 10	 mov	 DWORD PTR [ecx+16], eax
; Line 122
  00045	83 65 f8 00	 and	 DWORD PTR _dwLength$[ebp], 0
; Line 123
  00049	83 65 f4 00	 and	 DWORD PTR _count$[ebp], 0
; Line 124
  0004d	83 65 f0 00	 and	 DWORD PTR _size$[ebp], 0
; Line 126
  00051	8b 45 14	 mov	 eax, DWORD PTR _pdwTotalMsgBytes$[ebp]
  00054	83 20 00	 and	 DWORD PTR [eax], 0
; Line 127
  00057	8b 45 18	 mov	 eax, DWORD PTR _pdwTotalMsgNum$[ebp]
  0005a	83 20 00	 and	 DWORD PTR [eax], 0
$lb_loop$5:
; Line 132
  0005d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00060	83 78 14 03	 cmp	 DWORD PTR [eax+20], 3
  00064	73 05		 jae	 SHORT $LN2@OnReadC
; Line 133
  00066	e9 8b 00 00 00	 jmp	 $LN3@OnReadC
$LN2@OnReadC:
; Line 136
  0006b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00071	0f b7 00	 movzx	 eax, WORD PTR [eax]
  00074	89 45 f8	 mov	 DWORD PTR _dwLength$[ebp], eax
; Line 138
  00077	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  0007d	48		 dec	 eax
  0007e	48		 dec	 eax
  0007f	3b 45 f8	 cmp	 eax, DWORD PTR _dwLength$[ebp]
  00082	73 02		 jae	 SHORT $LN1@OnReadC
; Line 139
  00084	eb 70		 jmp	 SHORT $LN3@OnReadC
$LN1@OnReadC:
; Line 141
  00086	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00089	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0008c	40		 inc	 eax
  0008d	40		 inc	 eax
  0008e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 143
  00094	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  00097	8b 4d 0c	 mov	 ecx, DWORD PTR _pBuf$[ebp]
  0009a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0009d	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  000a0	89 54 c1 04	 mov	 DWORD PTR [ecx+eax*8+4], edx
; Line 144
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  000a7	8b 4d 0c	 mov	 ecx, DWORD PTR _pBuf$[ebp]
  000aa	8b 55 f8	 mov	 edx, DWORD PTR _dwLength$[ebp]
  000ad	89 14 c1	 mov	 DWORD PTR [ecx+eax*8], edx
; Line 146
  000b0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000b6	03 45 f8	 add	 eax, DWORD PTR _dwLength$[ebp]
  000b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 148
  000bf	8b 45 14	 mov	 eax, DWORD PTR _pdwTotalMsgBytes$[ebp]
  000c2	8b 00		 mov	 eax, DWORD PTR [eax]
  000c4	03 45 f8	 add	 eax, DWORD PTR _dwLength$[ebp]
  000c7	8b 4d 14	 mov	 ecx, DWORD PTR _pdwTotalMsgBytes$[ebp]
  000ca	89 01		 mov	 DWORD PTR [ecx], eax
; Line 149
  000cc	8b 45 18	 mov	 eax, DWORD PTR _pdwTotalMsgNum$[ebp]
  000cf	8b 00		 mov	 eax, DWORD PTR [eax]
  000d1	40		 inc	 eax
  000d2	8b 4d 18	 mov	 ecx, DWORD PTR _pdwTotalMsgNum$[ebp]
  000d5	89 01		 mov	 DWORD PTR [ecx], eax
; Line 150
  000d7	8b 45 f8	 mov	 eax, DWORD PTR _dwLength$[ebp]
  000da	40		 inc	 eax
  000db	40		 inc	 eax
  000dc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000df	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  000e2	2b c8		 sub	 ecx, eax
  000e4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e7	89 48 14	 mov	 DWORD PTR [eax+20], ecx
; Line 154
  000ea	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  000ed	40		 inc	 eax
  000ee	89 45 f4	 mov	 DWORD PTR _count$[ebp], eax
; Line 156
  000f1	e9 67 ff ff ff	 jmp	 $lb_loop$5
$LN3@OnReadC:
; Line 158
  000f6	8b e5		 mov	 esp, ebp
  000f8	5d		 pop	 ebp
  000f9	c2 14 00	 ret	 20			; 00000014H
?OnReadC@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z ENDP ; CReadMemoryHandle::OnReadC
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_const64$ = -12						; size = 8
_this$ = -4						; size = 4
_dwSize$ = 8						; size = 4
_pBuf$ = 12						; size = 4
_dwBufNum$ = 16						; size = 4
_pdwTotalMsgBytes$ = 20					; size = 4
_pdwTotalMsgNum$ = 24					; size = 4
?OnRead@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z PROC ; CReadMemoryHandle::OnRead
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\read_memory_handle.cpp
; Line 23
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 35
  0000c	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _const64$[ebp], 1
  00013	83 65 f8 00	 and	 DWORD PTR _const64$[ebp+4], 0
; Line 39
  00017	0f ef c0	 pxor	 mm0, mm0
; Line 40
  0001a	0f 6f 4d f4	 movq	 mm1, MMWORD PTR _const64$[ebp]
; Line 41
  0001e	0f 6e 55 0c	 movd	 mm2, DWORD PTR _pBuf$[ebp]
; Line 43
  00022	8b 5d fc	 mov	 ebx, DWORD PTR _this$[ebp]
; Line 44
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _dwSize$[ebp]
; Line 45
  00028	01 4b 08	 add	 DWORD PTR [ebx+8], ecx
; Line 46
  0002b	33 d2		 xor	 edx, edx
; Line 47
  0002d	29 4b 10	 sub	 DWORD PTR [ebx+16], ecx
; Line 48
  00030	33 c0		 xor	 eax, eax
; Line 49
  00032	01 4b 14	 add	 DWORD PTR [ebx+20], ecx
; Line 50
  00035	ba 02 00 00 00	 mov	 edx, 2
$lb_dispatch$3:
; Line 55
  0003a	8b 4d 10	 mov	 ecx, DWORD PTR _dwBufNum$[ebp]
; Line 56
  0003d	0b c9		 or	 ecx, ecx
; Line 57
  0003f	74 3e		 je	 SHORT $lb_end$4
; Line 59
  00041	8b 4b 14	 mov	 ecx, DWORD PTR [ebx+20]
; Line 60
  00044	3b ca		 cmp	 ecx, edx
; Line 62
  00046	76 37		 jbe	 SHORT $lb_end$4
$lb_read_length$5:
; Line 65
  00048	2b ca		 sub	 ecx, edx
; Line 66
  0004a	8b 73 0c	 mov	 esi, DWORD PTR [ebx+12]
; Line 67
  0004d	0f b7 3e	 movzx	 edi, WORD PTR [esi]
; Line 69
  00050	3b cf		 cmp	 ecx, edi
; Line 70
  00052	72 2b		 jb	 SHORT $lb_end$4
; Line 72
  00054	03 f2		 add	 esi, edx
; Line 73
  00056	c1 e2 02	 shl	 edx, 2
$lb_read_msg$6:
; Line 76
  00059	8b cf		 mov	 ecx, edi
; Line 77
  0005b	0f 7e d7	 movd	 edi, mm2
; Line 79
  0005e	89 0f		 mov	 DWORD PTR [edi], ecx
; Line 80
  00060	89 77 04	 mov	 DWORD PTR [edi+4], esi
; Line 82
  00063	03 f1		 add	 esi, ecx
; Line 83
  00065	03 fa		 add	 edi, edx
; Line 84
  00067	0f 6e d7	 movd	 mm2, edi
; Line 87
  0006a	c1 ea 02	 shr	 edx, 2
; Line 88
  0006d	03 c1		 add	 eax, ecx
; Line 89
  0006f	03 ca		 add	 ecx, edx
; Line 90
  00071	29 4b 14	 sub	 DWORD PTR [ebx+20], ecx
; Line 91
  00074	89 73 0c	 mov	 DWORD PTR [ebx+12], esi
; Line 93
  00077	0f fe c1	 paddd	 mm0, mm1
; Line 94
  0007a	ff 4d 10	 dec	 DWORD PTR _dwBufNum$[ebp]
; Line 95
  0007d	eb bb		 jmp	 SHORT $lb_dispatch$3
$lb_end$4:
; Line 100
  0007f	8b 7d 14	 mov	 edi, DWORD PTR _pdwTotalMsgBytes$[ebp]
; Line 101
  00082	89 07		 mov	 DWORD PTR [edi], eax
; Line 102
  00084	8b 75 18	 mov	 esi, DWORD PTR _pdwTotalMsgNum$[ebp]
; Line 103
  00087	0f 7e 06	 movd	 DWORD PTR [esi], mm0
; Line 104
  0008a	0f 77		 emms
; Line 107
  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c2 14 00	 ret	 20			; 00000014H
?OnRead@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z ENDP ; CReadMemoryHandle::OnRead
_TEXT	ENDS
END
