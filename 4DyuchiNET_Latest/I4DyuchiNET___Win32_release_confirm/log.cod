; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	E:\GitHub\Mso_Code\4DyuchiNET_Latest\log.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_pLogManager@@3PAVCLogManager@@A		; g_pLogManager
_BSS	SEGMENT
?g_pLogManager@@3PAVCLogManager@@A DD 01H DUP (?)	; g_pLogManager
_BSS	ENDS
CONST	SEGMENT
$SG90841 DB	'wt', 00H
	ORG $+1
$SG90857 DB	'at', 00H
	ORG $+1
$SG90864 DB	'%8u : %s ', 0aH, 00H
CONST	ENDS
PUBLIC	?Initialize@CLogManager@@QAEHPADK@Z		; CLogManager::Initialize
PUBLIC	?WriteLog@CLogManager@@QAEHPADK@Z		; CLogManager::WriteLog
PUBLIC	?Flush@CLogManager@@QAEHXZ			; CLogManager::Flush
PUBLIC	??0CLogManager@@QAE@XZ				; CLogManager::CLogManager
PUBLIC	??1CLogManager@@QAE@XZ				; CLogManager::~CLogManager
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	_fopen_s:PROC
EXTRN	_fprintf:PROC
EXTRN	_memcpy:PROC
; Function compile flags: /Odspy
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
??1CLogManager@@QAE@XZ PROC				; CLogManager::~CLogManager
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\log.cpp
; Line 93
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 94
  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0000f	74 08		 je	 SHORT $LN2@CLogManage
; Line 95
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?Flush@CLogManager@@QAEHXZ ; CLogManager::Flush
$LN2@CLogManage:
; Line 97
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001f	74 17		 je	 SHORT $LN1@CLogManage
; Line 99
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 00		 mov	 eax, DWORD PTR [eax]
  00026	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  00029	ff 75 f8	 push	 DWORD PTR $T1[ebp]
  0002c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00031	59		 pop	 ecx
; Line 100
  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	83 20 00	 and	 DWORD PTR [eax], 0
$LN1@CLogManage:
; Line 102
  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	83 c0 14	 add	 eax, 20			; 00000014H
  0003e	50		 push	 eax
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
; Line 103
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??1CLogManager@@QAE@XZ ENDP				; CLogManager::~CLogManager
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CLogManager@@QAE@XZ PROC				; CLogManager::CLogManager
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\log.cpp
; Line 6
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 7
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 20 00	 and	 DWORD PTR [eax], 0
; Line 8
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00010	83 60 04 00	 and	 DWORD PTR [eax+4], 0
; Line 9
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; Line 10
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 60 0c 00	 and	 DWORD PTR [eax+12], 0
; Line 11
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	83 60 10 00	 and	 DWORD PTR [eax+16], 0
; Line 12
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??0CLogManager@@QAE@XZ ENDP				; CLogManager::CLogManager
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_dwLen$ = -20						; size = 4
_fp$ = -16						; size = 4
_i$1 = -12						; size = 4
_pRead$ = -8						; size = 4
_this$ = -4						; size = 4
?Flush@CLogManager@@QAEHXZ PROC				; CLogManager::Flush
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\log.cpp
; Line 63
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; File e:\github\mso_code\4dyuchinet_latest\log.h
; Line 20
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 14	 add	 eax, 20			; 00000014H
  0000f	50		 push	 eax
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; File e:\github\mso_code\4dyuchinet_latest\log.cpp
; Line 69
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 00		 mov	 eax, DWORD PTR [eax]
  0001b	89 45 f8	 mov	 DWORD PTR _pRead$[ebp], eax
; Line 71
  0001e	68 00 00 00 00	 push	 OFFSET $SG90857
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 2c	 add	 eax, 44			; 0000002cH
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 _fopen
  0002f	59		 pop	 ecx
  00030	59		 pop	 ecx
  00031	89 45 f0	 mov	 DWORD PTR _fp$[ebp], eax
; Line 72
  00034	83 7d f0 00	 cmp	 DWORD PTR _fp$[ebp], 0
  00038	75 07		 jne	 SHORT $LN4@Flush
; Line 73
  0003a	33 c0		 xor	 eax, eax
  0003c	e9 81 00 00 00	 jmp	 $LN5@Flush
$LN4@Flush:
; Line 75
  00041	83 65 f4 00	 and	 DWORD PTR _i$1[ebp], 0
  00045	eb 07		 jmp	 SHORT $LN3@Flush
$LN2@Flush:
  00047	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0004a	40		 inc	 eax
  0004b	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN3@Flush:
  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 4d f4	 mov	 ecx, DWORD PTR _i$1[ebp]
  00054	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00057	73 42		 jae	 SHORT $LN1@Flush
; Line 77
  00059	8b 45 f8	 mov	 eax, DWORD PTR _pRead$[ebp]
  0005c	8b 00		 mov	 eax, DWORD PTR [eax]
  0005e	89 45 ec	 mov	 DWORD PTR _dwLen$[ebp], eax
; Line 79
  00061	8b 45 f8	 mov	 eax, DWORD PTR _pRead$[ebp]
  00064	83 c0 04	 add	 eax, 4
  00067	89 45 f8	 mov	 DWORD PTR _pRead$[ebp], eax
; Line 80
  0006a	ff 75 f8	 push	 DWORD PTR _pRead$[ebp]
  0006d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00070	ff 70 10	 push	 DWORD PTR [eax+16]
  00073	68 00 00 00 00	 push	 OFFSET $SG90864
  00078	ff 75 f0	 push	 DWORD PTR _fp$[ebp]
  0007b	e8 00 00 00 00	 call	 _fprintf
  00080	83 c4 10	 add	 esp, 16			; 00000010H
; Line 81
  00083	8b 45 f8	 mov	 eax, DWORD PTR _pRead$[ebp]
  00086	03 45 ec	 add	 eax, DWORD PTR _dwLen$[ebp]
  00089	89 45 f8	 mov	 DWORD PTR _pRead$[ebp], eax
; Line 82
  0008c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00092	40		 inc	 eax
  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	89 41 10	 mov	 DWORD PTR [ecx+16], eax
; Line 83
  00099	eb ac		 jmp	 SHORT $LN2@Flush
$LN1@Flush:
; Line 84
  0009b	ff 75 f0	 push	 DWORD PTR _fp$[ebp]
  0009e	e8 00 00 00 00	 call	 _fclose
  000a3	59		 pop	 ecx
; Line 85
  000a4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a7	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; Line 86
  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	83 60 04 00	 and	 DWORD PTR [eax+4], 0
; File e:\github\mso_code\4dyuchinet_latest\log.h
; Line 21
  000b2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b5	83 c0 14	 add	 eax, 20			; 00000014H
  000b8	50		 push	 eax
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
; File e:\github\mso_code\4dyuchinet_latest\log.cpp
; Line 90
  000bf	33 c0		 xor	 eax, eax
  000c1	40		 inc	 eax
$LN5@Flush:
; Line 91
  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
?Flush@CLogManager@@QAEHXZ ENDP				; CLogManager::Flush
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_pWrite$ = -8						; size = 4
_this$ = -4						; size = 4
_pMsg$ = 8						; size = 4
_dwLen$ = 12						; size = 4
?WriteLog@CLogManager@@QAEHPADK@Z PROC			; CLogManager::WriteLog
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\log.cpp
; Line 35
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 37
  00008	81 7d 0c 00 04
	00 00		 cmp	 DWORD PTR _dwLen$[ebp], 1024 ; 00000400H
  0000f	72 07		 jb	 SHORT $LN2@WriteLog
; Line 38
  00011	33 c0		 xor	 eax, eax
  00013	e9 94 00 00 00	 jmp	 $LN3@WriteLog
$LN2@WriteLog:
; File e:\github\mso_code\4dyuchinet_latest\log.h
; Line 20
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 c0 14	 add	 eax, 20			; 00000014H
  0001e	50		 push	 eax
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; File e:\github\mso_code\4dyuchinet_latest\log.cpp
; Line 43
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR _dwLen$[ebp]
  0002e	8d 44 08 05	 lea	 eax, DWORD PTR [eax+ecx+5]
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	3b 41 0c	 cmp	 eax, DWORD PTR [ecx+12]
  00038	72 08		 jb	 SHORT $LN1@WriteLog
; Line 44
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?Flush@CLogManager@@QAEHXZ ; CLogManager::Flush
$LN1@WriteLog:
; Line 46
  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 00		 mov	 eax, DWORD PTR [eax]
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	03 41 08	 add	 eax, DWORD PTR [ecx+8]
  0004d	89 45 f8	 mov	 DWORD PTR _pWrite$[ebp], eax
; Line 48
  00050	8b 45 0c	 mov	 eax, DWORD PTR _dwLen$[ebp]
  00053	40		 inc	 eax
  00054	8b 4d f8	 mov	 ecx, DWORD PTR _pWrite$[ebp]
  00057	89 01		 mov	 DWORD PTR [ecx], eax
; Line 49
  00059	8b 45 f8	 mov	 eax, DWORD PTR _pWrite$[ebp]
  0005c	83 c0 04	 add	 eax, 4
  0005f	89 45 f8	 mov	 DWORD PTR _pWrite$[ebp], eax
; Line 50
  00062	ff 75 0c	 push	 DWORD PTR _dwLen$[ebp]
  00065	ff 75 08	 push	 DWORD PTR _pMsg$[ebp]
  00068	ff 75 f8	 push	 DWORD PTR _pWrite$[ebp]
  0006b	e8 00 00 00 00	 call	 _memcpy
  00070	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 51
  00073	8b 45 f8	 mov	 eax, DWORD PTR _pWrite$[ebp]
  00076	03 45 0c	 add	 eax, DWORD PTR _dwLen$[ebp]
  00079	c6 00 00	 mov	 BYTE PTR [eax], 0
; Line 53
  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00082	40		 inc	 eax
  00083	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; Line 55
  00089	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0008f	8b 4d 0c	 mov	 ecx, DWORD PTR _dwLen$[ebp]
  00092	8d 44 01 05	 lea	 eax, DWORD PTR [ecx+eax+5]
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; File e:\github\mso_code\4dyuchinet_latest\log.h
; Line 21
  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	83 c0 14	 add	 eax, 20			; 00000014H
  000a2	50		 push	 eax
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
; File e:\github\mso_code\4dyuchinet_latest\log.cpp
; Line 59
  000a9	33 c0		 xor	 eax, eax
  000ab	40		 inc	 eax
$LN3@WriteLog:
; Line 60
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 08 00	 ret	 8
?WriteLog@CLogManager@@QAEHPADK@Z ENDP			; CLogManager::WriteLog
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
$T1 = -16						; size = 4
_fp$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_szFileName$ = 8					; size = 4
_dwLimitedSize$ = 12					; size = 4
?Initialize@CLogManager@@QAEHPADK@Z PROC		; CLogManager::Initialize
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\log.cpp
; Line 14
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 16
  00009	8b 45 0c	 mov	 eax, DWORD PTR _dwLimitedSize$[ebp]
  0000c	83 c0 64	 add	 eax, 100		; 00000064H
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00015	59		 pop	 ecx
  00016	89 45 f0	 mov	 DWORD PTR $T1[ebp], eax
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR $T1[ebp]
  0001f	89 08		 mov	 DWORD PTR [eax], ecx
; Line 17
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 38 00	 cmp	 DWORD PTR [eax], 0
  00027	75 04		 jne	 SHORT $LN1@Initialize
; Line 18
  00029	33 c0		 xor	 eax, eax
  0002b	eb 69		 jmp	 SHORT $LN2@Initialize
$LN1@Initialize:
; Line 20
  0002d	ff 75 08	 push	 DWORD PTR _szFileName$[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00036	89 45 f8	 mov	 DWORD PTR _len$[ebp], eax
; Line 21
  00039	ff 75 f8	 push	 DWORD PTR _len$[ebp]
  0003c	ff 75 08	 push	 DWORD PTR _szFileName$[ebp]
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	83 c0 2c	 add	 eax, 44			; 0000002cH
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 _memcpy
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 22
  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	03 45 f8	 add	 eax, DWORD PTR _len$[ebp]
  00054	c6 40 2c 00	 mov	 BYTE PTR [eax+44], 0
; Line 24
  00058	83 65 f4 00	 and	 DWORD PTR _fp$[ebp], 0
; Line 25
  0005c	68 00 00 00 00	 push	 OFFSET $SG90841
  00061	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00064	83 c0 2c	 add	 eax, 44			; 0000002cH
  00067	50		 push	 eax
  00068	8d 45 f4	 lea	 eax, DWORD PTR _fp$[ebp]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 _fopen_s
  00071	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 26
  00074	ff 75 f4	 push	 DWORD PTR _fp$[ebp]
  00077	e8 00 00 00 00	 call	 _fclose
  0007c	59		 pop	 ecx
; Line 28
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	8b 4d 0c	 mov	 ecx, DWORD PTR _dwLimitedSize$[ebp]
  00083	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
; Line 30
  00086	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00089	83 c0 14	 add	 eax, 20			; 00000014H
  0008c	50		 push	 eax
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4
; Line 32
  00093	33 c0		 xor	 eax, eax
  00095	40		 inc	 eax
$LN2@Initialize:
; Line 33
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c2 08 00	 ret	 8
?Initialize@CLogManager@@QAEHPADK@Z ENDP		; CLogManager::Initialize
_TEXT	ENDS
END
