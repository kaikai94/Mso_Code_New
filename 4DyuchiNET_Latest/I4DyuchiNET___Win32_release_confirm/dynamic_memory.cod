; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	E:\GitHub\Mso_Code\4DyuchiNET_Latest\dynamic_memory.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?AddMemory@CDynamicMemoryContainer@@AAEHK@Z	; CDynamicMemoryContainer::AddMemory
PUBLIC	?Alloc@CDynamicMemoryContainer@@QAEPADXZ	; CDynamicMemoryContainer::Alloc
PUBLIC	?Free@CDynamicMemoryContainer@@QAEXPAD@Z	; CDynamicMemoryContainer::Free
PUBLIC	?Initialize@CDynamicMemoryContainer@@QAEHKKKW4MEMORY_TYPE@@@Z ; CDynamicMemoryContainer::Initialize
PUBLIC	?Release@CDynamicMemoryContainer@@QAEHXZ	; CDynamicMemoryContainer::Release
PUBLIC	??0CDynamicMemoryContainer@@QAE@XZ		; CDynamicMemoryContainer::CDynamicMemoryContainer
PUBLIC	??1CDynamicMemoryContainer@@QAE@XZ		; CDynamicMemoryContainer::~CDynamicMemoryContainer
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_memset:PROC
; Function compile flags: /Odspy
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
??1CDynamicMemoryContainer@@QAE@XZ PROC			; CDynamicMemoryContainer::~CDynamicMemoryContainer
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\dynamic_memory.cpp
; Line 96
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 99
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000f	74 62		 je	 SHORT $LN6@CDynamicMe
; Line 101
  00011	83 65 f8 00	 and	 DWORD PTR _i$3[ebp], 0
  00015	eb 07		 jmp	 SHORT $LN4@CDynamicMe
$LN3@CDynamicMe:
  00017	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0001a	40		 inc	 eax
  0001b	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@CDynamicMe:
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 4d f8	 mov	 ecx, DWORD PTR _i$3[ebp]
  00024	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00027	73 33		 jae	 SHORT $LN2@CDynamicMe
; Line 103
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 00		 mov	 eax, DWORD PTR [eax]
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _i$3[ebp]
  00031	83 3c 88 00	 cmp	 DWORD PTR [eax+ecx*4], 0
  00035	74 23		 je	 SHORT $LN1@CDynamicMe
; Line 105
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 00		 mov	 eax, DWORD PTR [eax]
  0003c	8b 4d f8	 mov	 ecx, DWORD PTR _i$3[ebp]
  0003f	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  00042	89 45 f4	 mov	 DWORD PTR $T2[ebp], eax
  00045	ff 75 f4	 push	 DWORD PTR $T2[ebp]
  00048	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004d	59		 pop	 ecx
; Line 106
  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 00		 mov	 eax, DWORD PTR [eax]
  00053	8b 4d f8	 mov	 ecx, DWORD PTR _i$3[ebp]
  00056	83 24 88 00	 and	 DWORD PTR [eax+ecx*4], 0
$LN1@CDynamicMe:
; Line 109
  0005a	eb bb		 jmp	 SHORT $LN3@CDynamicMe
$LN2@CDynamicMe:
; Line 111
  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 00		 mov	 eax, DWORD PTR [eax]
  00061	89 45 f0	 mov	 DWORD PTR $T1[ebp], eax
  00064	ff 75 f0	 push	 DWORD PTR $T1[ebp]
  00067	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006c	59		 pop	 ecx
; Line 112
  0006d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00070	83 20 00	 and	 DWORD PTR [eax], 0
$LN6@CDynamicMe:
; Line 115
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
??1CDynamicMemoryContainer@@QAE@XZ ENDP			; CDynamicMemoryContainer::~CDynamicMemoryContainer
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDynamicMemoryContainer@@QAE@XZ PROC			; CDynamicMemoryContainer::CDynamicMemoryContainer
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\dynamic_memory.cpp
; Line 5
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 20 00	 and	 DWORD PTR [eax], 0
; Line 7
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00010	83 60 0c 00	 and	 DWORD PTR [eax+12], 0
; Line 8
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 60 18 00	 and	 DWORD PTR [eax+24], 0
; Line 9
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 60 14 00	 and	 DWORD PTR [eax+20], 0
; Line 10
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	83 60 04 00	 and	 DWORD PTR [eax+4], 0
; Line 11
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; Line 12
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 60 1c 00	 and	 DWORD PTR [eax+28], 0
; Line 13
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c7 40 10 01 00
	00 00		 mov	 DWORD PTR [eax+16], 1
; Line 14
  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
??0CDynamicMemoryContainer@@QAE@XZ ENDP			; CDynamicMemoryContainer::CDynamicMemoryContainer
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@CDynamicMemoryContainer@@QAEHXZ PROC		; CDynamicMemoryContainer::Release
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\dynamic_memory.cpp
; Line 91
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 92
  00007	33 c0		 xor	 eax, eax
  00009	40		 inc	 eax
; Line 93
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
?Release@CDynamicMemoryContainer@@QAEHXZ ENDP		; CDynamicMemoryContainer::Release
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
$T1 = -12						; size = 4
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_dwSize$ = 8						; size = 4
_dwDefaultNum$ = 12					; size = 4
_dwMaxNum$ = 16						; size = 4
_type$ = 20						; size = 4
?Initialize@CDynamicMemoryContainer@@QAEHKKKW4MEMORY_TYPE@@@Z PROC ; CDynamicMemoryContainer::Initialize
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\dynamic_memory.cpp
; Line 46
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 47
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d 14	 mov	 ecx, DWORD PTR _type$[ebp]
  0000f	89 48 20	 mov	 DWORD PTR [eax+32], ecx
; Line 48
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _dwMaxNum$[ebp]
  00018	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
; Line 51
  0001b	8b 45 14	 mov	 eax, DWORD PTR _type$[ebp]
  0001e	89 45 f8	 mov	 DWORD PTR tv66[ebp], eax
  00021	83 7d f8 00	 cmp	 DWORD PTR tv66[ebp], 0
  00025	74 34		 je	 SHORT $LN1@Initialize
  00027	83 7d f8 01	 cmp	 DWORD PTR tv66[ebp], 1
  0002b	74 02		 je	 SHORT $LN2@Initialize
  0002d	eb 48		 jmp	 SHORT $LN3@Initialize
$LN2@Initialize:
; Line 55
  0002f	8b 45 08	 mov	 eax, DWORD PTR _dwSize$[ebp]
  00032	48		 dec	 eax
  00033	c1 e8 06	 shr	 eax, 6
  00036	40		 inc	 eax
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	89 41 14	 mov	 DWORD PTR [ecx+20], eax
; Line 56
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00043	c1 e0 06	 shl	 eax, 6
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	89 41 18	 mov	 DWORD PTR [ecx+24], eax
; Line 57
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	6b 40 14 4c	 imul	 eax, DWORD PTR [eax+20], 76
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
; Line 59
  00059	eb 1c		 jmp	 SHORT $LN3@Initialize
$LN1@Initialize:
; Line 62
  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	c7 40 14 01 00
	00 00		 mov	 DWORD PTR [eax+20], 1
; Line 63
  00065	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 4d 08	 mov	 ecx, DWORD PTR _dwSize$[ebp]
  0006b	89 48 18	 mov	 DWORD PTR [eax+24], ecx
; Line 64
  0006e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00071	8b 4d 08	 mov	 ecx, DWORD PTR _dwSize$[ebp]
  00074	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
$LN3@Initialize:
; Line 70
  00077	33 c9		 xor	 ecx, ecx
  00079	8b 45 10	 mov	 eax, DWORD PTR _dwMaxNum$[ebp]
  0007c	6a 04		 push	 4
  0007e	5a		 pop	 edx
  0007f	f7 e2		 mul	 edx
  00081	0f 90 c1	 seto	 cl
  00084	f7 d9		 neg	 ecx
  00086	0b c8		 or	 ecx, eax
  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0008e	59		 pop	 ecx
  0008f	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 4d f4	 mov	 ecx, DWORD PTR $T1[ebp]
  00098	89 08		 mov	 DWORD PTR [eax], ecx
; Line 71
  0009a	8b 45 10	 mov	 eax, DWORD PTR _dwMaxNum$[ebp]
  0009d	c1 e0 02	 shl	 eax, 2
  000a0	50		 push	 eax
  000a1	6a 00		 push	 0
  000a3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a6	ff 30		 push	 DWORD PTR [eax]
  000a8	e8 00 00 00 00	 call	 _memset
  000ad	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 73
  000b0	ff 75 0c	 push	 DWORD PTR _dwDefaultNum$[ebp]
  000b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	e8 00 00 00 00	 call	 ?AddMemory@CDynamicMemoryContainer@@AAEHK@Z ; CDynamicMemoryContainer::AddMemory
; Line 74
  000bb	33 c0		 xor	 eax, eax
  000bd	40		 inc	 eax
; Line 75
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c2 10 00	 ret	 16			; 00000010H
?Initialize@CDynamicMemoryContainer@@QAEHKKKW4MEMORY_TYPE@@@Z ENDP ; CDynamicMemoryContainer::Initialize
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMemory$ = 8						; size = 4
?Free@CDynamicMemoryContainer@@QAEXPAD@Z PROC		; CDynamicMemoryContainer::Free
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\dynamic_memory.cpp
; Line 36
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 39
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00012	8b 55 08	 mov	 edx, DWORD PTR _pMemory$[ebp]
  00015	89 14 81	 mov	 DWORD PTR [ecx+eax*4], edx
; Line 40
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001e	48		 dec	 eax
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 41
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002b	40		 inc	 eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; Line 43
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
?Free@CDynamicMemoryContainer@@QAEXPAD@Z ENDP		; CDynamicMemoryContainer::Free
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
?Alloc@CDynamicMemoryContainer@@QAEPADXZ PROC		; CDynamicMemoryContainer::Alloc
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\dynamic_memory.cpp
; Line 18
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 21
  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0000f	75 16		 jne	 SHORT $LN2@Alloc
; Line 23
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	ff 70 10	 push	 DWORD PTR [eax+16]
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?AddMemory@CDynamicMemoryContainer@@AAEHK@Z ; CDynamicMemoryContainer::AddMemory
  0001f	85 c0		 test	 eax, eax
  00021	75 04		 jne	 SHORT $LN2@Alloc
; Line 24
  00023	33 c0		 xor	 eax, eax
  00025	eb 3f		 jmp	 SHORT $LN3@Alloc
$LN2@Alloc:
; Line 26
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00032	8b 44 81 fc	 mov	 eax, DWORD PTR [ecx+eax*4-4]
  00036	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax
; Line 27
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00044	83 64 81 fc 00	 and	 DWORD PTR [ecx+eax*4-4], 0
; Line 28
  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004f	48		 dec	 eax
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; Line 29
  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0005c	40		 inc	 eax
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 32
  00063	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
$LN3@Alloc:
; Line 34
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
?Alloc@CDynamicMemoryContainer@@QAEPADXZ ENDP		; CDynamicMemoryContainer::Alloc
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
$T1 = -12						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
_dwNum$ = 8						; size = 4
?AddMemory@CDynamicMemoryContainer@@AAEHK@Z PROC	; CDynamicMemoryContainer::AddMemory
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\dynamic_memory.cpp
; Line 78
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 79
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000f	03 45 08	 add	 eax, DWORD PTR _dwNum$[ebp]
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	3b 41 0c	 cmp	 eax, DWORD PTR [ecx+12]
  00018	72 04		 jb	 SHORT $LN4@AddMemory
; Line 80
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 47		 jmp	 SHORT $LN5@AddMemory
$LN4@AddMemory:
; Line 82
  0001e	83 65 f8 00	 and	 DWORD PTR _i$2[ebp], 0
  00022	eb 07		 jmp	 SHORT $LN3@AddMemory
$LN2@AddMemory:
  00024	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  00027	40		 inc	 eax
  00028	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN3@AddMemory:
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002e	3b 45 08	 cmp	 eax, DWORD PTR _dwNum$[ebp]
  00031	73 2f		 jae	 SHORT $LN1@AddMemory
; Line 84
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	ff 70 1c	 push	 DWORD PTR [eax+28]
  00039	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003e	59		 pop	 ecx
  0003f	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0004d	8b 55 f4	 mov	 edx, DWORD PTR $T1[ebp]
  00050	89 14 81	 mov	 DWORD PTR [ecx+eax*4], edx
; Line 85
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00059	40		 inc	 eax
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; Line 86
  00060	eb c2		 jmp	 SHORT $LN2@AddMemory
$LN1@AddMemory:
; Line 87
  00062	33 c0		 xor	 eax, eax
  00064	40		 inc	 eax
$LN5@AddMemory:
; Line 89
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?AddMemory@CDynamicMemoryContainer@@AAEHK@Z ENDP	; CDynamicMemoryContainer::AddMemory
_TEXT	ENDS
END
