; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	E:\GitHub\Mso_Code\4DyuchiNET_Latest\quemanager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_pQueManager@@3PAVCQueManager@@A		; g_pQueManager
_BSS	SEGMENT
?g_pQueManager@@3PAVCQueManager@@A DD 01H DUP (?)	; g_pQueManager
_BSS	ENDS
PUBLIC	?Initialize@CQueManager@@QAEXKPAX@Z		; CQueManager::Initialize
PUBLIC	?Release@CQueManager@@QAEXXZ			; CQueManager::Release
PUBLIC	??0CQueManager@@QAE@XZ				; CQueManager::CQueManager
PUBLIC	??1CQueManager@@QAE@XZ				; CQueManager::~CQueManager
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__InitializeCriticalSectionAndSpinCount@8:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	??0CMsgQue@@QAE@K@Z:PROC			; CMsgQue::CMsgQue
EXTRN	??1CMsgQue@@QAE@XZ:PROC				; CMsgQue::~CMsgQue
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?g_csWrite@@3U_RTL_CRITICAL_SECTION@@A:BYTE	; g_csWrite
EXTRN	___security_cookie:DWORD
xdata$x	SEGMENT
__unwindtable$?Initialize@CQueManager@@QAEXKPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize@CQueManager@@QAEXKPAX@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize@CQueManager@@QAEXKPAX@Z$1
__ehfuncinfo$?Initialize@CQueManager@@QAEXKPAX@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Initialize@CQueManager@@QAEXKPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CQueManager@@QAE@XZ PROC				; CQueManager::~CQueManager
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\quemanager.cpp
; Line 44
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 45
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Release@CQueManager@@QAEXXZ ; CQueManager::Release
; Line 46
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CQueManager@@QAE@XZ ENDP				; CQueManager::~CQueManager
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CQueManager@@QAE@XZ PROC				; CQueManager::CQueManager
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\quemanager.cpp
; Line 7
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 9
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 20 00	 and	 DWORD PTR [eax], 0
; Line 10
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00010	83 60 04 00	 and	 DWORD PTR [eax+4], 0
; Line 11
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??0CQueManager@@QAE@XZ ENDP				; CQueManager::CQueManager
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
tv80 = -28						; size = 4
$T1 = -24						; size = 4
tv71 = -20						; size = 4
$T2 = -16						; size = 4
$T3 = -12						; size = 4
$T4 = -8						; size = 4
_this$ = -4						; size = 4
?Release@CQueManager@@QAEXXZ PROC			; CQueManager::Release
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\quemanager.cpp
; Line 27
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 29
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000f	74 3f		 je	 SHORT $LN2@Release
; Line 31
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 00		 mov	 eax, DWORD PTR [eax]
  00016	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00019	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  0001c	89 45 f8	 mov	 DWORD PTR $T4[ebp], eax
  0001f	83 7d f8 00	 cmp	 DWORD PTR $T4[ebp], 0
  00023	74 21		 je	 SHORT $LN5@Release
  00025	8b 4d f8	 mov	 ecx, DWORD PTR $T4[ebp]
  00028	e8 00 00 00 00	 call	 ??1CMsgQue@@QAE@XZ	; CMsgQue::~CMsgQue
  0002d	33 c0		 xor	 eax, eax
  0002f	40		 inc	 eax
  00030	83 e0 01	 and	 eax, 1
  00033	74 09		 je	 SHORT $LN10@Release
  00035	ff 75 f8	 push	 DWORD PTR $T4[ebp]
  00038	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003d	59		 pop	 ecx
$LN10@Release:
  0003e	8b 45 f8	 mov	 eax, DWORD PTR $T4[ebp]
  00041	89 45 ec	 mov	 DWORD PTR tv71[ebp], eax
  00044	eb 04		 jmp	 SHORT $LN6@Release
$LN5@Release:
  00046	83 65 ec 00	 and	 DWORD PTR tv71[ebp], 0
$LN6@Release:
; Line 32
  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 20 00	 and	 DWORD PTR [eax], 0
$LN2@Release:
; Line 34
  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00057	74 41		 je	 SHORT $LN1@Release
; Line 36
  00059	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0005f	89 45 e8	 mov	 DWORD PTR $T1[ebp], eax
  00062	8b 45 e8	 mov	 eax, DWORD PTR $T1[ebp]
  00065	89 45 f4	 mov	 DWORD PTR $T3[ebp], eax
  00068	83 7d f4 00	 cmp	 DWORD PTR $T3[ebp], 0
  0006c	74 21		 je	 SHORT $LN7@Release
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR $T3[ebp]
  00071	e8 00 00 00 00	 call	 ??1CMsgQue@@QAE@XZ	; CMsgQue::~CMsgQue
  00076	33 c0		 xor	 eax, eax
  00078	40		 inc	 eax
  00079	83 e0 01	 and	 eax, 1
  0007c	74 09		 je	 SHORT $LN13@Release
  0007e	ff 75 f4	 push	 DWORD PTR $T3[ebp]
  00081	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00086	59		 pop	 ecx
$LN13@Release:
  00087	8b 45 f4	 mov	 eax, DWORD PTR $T3[ebp]
  0008a	89 45 e4	 mov	 DWORD PTR tv80[ebp], eax
  0008d	eb 04		 jmp	 SHORT $LN8@Release
$LN7@Release:
  0008f	83 65 e4 00	 and	 DWORD PTR tv80[ebp], 0
$LN8@Release:
; Line 37
  00093	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00096	83 60 04 00	 and	 DWORD PTR [eax+4], 0
$LN1@Release:
; Line 39
  0009a	68 00 00 00 00	 push	 OFFSET ?g_csWrite@@3U_RTL_CRITICAL_SECTION@@A ; g_csWrite
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
; Line 40
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c3		 ret	 0
?Release@CQueManager@@QAEXXZ ENDP			; CQueManager::Release
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
$T2 = -40						; size = 4
$T3 = -36						; size = 4
_this$ = -32						; size = 4
tv82 = -28						; size = 4
$T4 = -24						; size = 4
tv73 = -20						; size = 4
$T5 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwQueSize$ = 8						; size = 4
_hMsgHandle$ = 12					; size = 4
?Initialize@CQueManager@@QAEXKPAX@Z PROC		; CQueManager::Initialize
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\quemanager.cpp
; Line 14
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Initialize@CQueManager@@QAEXKPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 16
  00028	6a 18		 push	 24			; 00000018H
  0002a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002f	59		 pop	 ecx
  00030	89 45 f0	 mov	 DWORD PTR $T5[ebp], eax
  00033	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	83 7d f0 00	 cmp	 DWORD PTR $T5[ebp], 0
  0003b	74 10		 je	 SHORT $LN3@Initialize
  0003d	ff 75 08	 push	 DWORD PTR _dwQueSize$[ebp]
  00040	8b 4d f0	 mov	 ecx, DWORD PTR $T5[ebp]
  00043	e8 00 00 00 00	 call	 ??0CMsgQue@@QAE@K@Z	; CMsgQue::CMsgQue
  00048	89 45 ec	 mov	 DWORD PTR tv73[ebp], eax
  0004b	eb 04		 jmp	 SHORT $LN4@Initialize
$LN3@Initialize:
  0004d	83 65 ec 00	 and	 DWORD PTR tv73[ebp], 0
$LN4@Initialize:
  00051	8b 45 ec	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 dc	 mov	 DWORD PTR $T3[ebp], eax
  00057	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0005b	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 4d dc	 mov	 ecx, DWORD PTR $T3[ebp]
  00061	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; Line 17
  00064	6a 18		 push	 24			; 00000018H
  00066	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0006b	59		 pop	 ecx
  0006c	89 45 e8	 mov	 DWORD PTR $T4[ebp], eax
  0006f	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00076	83 7d e8 00	 cmp	 DWORD PTR $T4[ebp], 0
  0007a	74 10		 je	 SHORT $LN5@Initialize
  0007c	ff 75 08	 push	 DWORD PTR _dwQueSize$[ebp]
  0007f	8b 4d e8	 mov	 ecx, DWORD PTR $T4[ebp]
  00082	e8 00 00 00 00	 call	 ??0CMsgQue@@QAE@K@Z	; CMsgQue::CMsgQue
  00087	89 45 e4	 mov	 DWORD PTR tv82[ebp], eax
  0008a	eb 04		 jmp	 SHORT $LN6@Initialize
$LN5@Initialize:
  0008c	83 65 e4 00	 and	 DWORD PTR tv82[ebp], 0
$LN6@Initialize:
  00090	8b 45 e4	 mov	 eax, DWORD PTR tv82[ebp]
  00093	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
  00096	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0009a	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp]
  000a0	89 08		 mov	 DWORD PTR [eax], ecx
; Line 20
  000a2	68 e8 03 00 00	 push	 1000			; 000003e8H
  000a7	68 00 00 00 00	 push	 OFFSET ?g_csWrite@@3U_RTL_CRITICAL_SECTION@@A ; g_csWrite
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionAndSpinCount@8
; Line 22
  000b2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bc	59		 pop	 ecx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Initialize@CQueManager@@QAEXKPAX@Z$0:
  00000	ff 75 f0	 push	 DWORD PTR $T5[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__unwindfunclet$?Initialize@CQueManager@@QAEXKPAX@Z$1:
  0000a	ff 75 e8	 push	 DWORD PTR $T4[ebp]
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	59		 pop	 ecx
  00013	c3		 ret	 0
__ehhandler$?Initialize@CQueManager@@QAEXKPAX@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  0001e	33 c8		 xor	 ecx, eax
  00020	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00025	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Initialize@CQueManager@@QAEXKPAX@Z
  0002a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Initialize@CQueManager@@QAEXKPAX@Z ENDP		; CQueManager::Initialize
END
