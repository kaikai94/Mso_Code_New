; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	E:\GitHub\Mso_Code\4DyuchiNET_Latest\dllmain.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_hDllInst@@3PAUHINSTANCE__@@A			; g_hDllInst
PUBLIC	_CLSID_4DyuchiNET
PUBLIC	_IID_4DyuchiNET
_BSS	SEGMENT
?g_hDllInst@@3PAUHINSTANCE__@@A DD 01H DUP (?)		; g_hDllInst
_BSS	ENDS
;	COMDAT _IID_4DyuchiNET
CONST	SEGMENT
_IID_4DyuchiNET DD 0d41bd0f8H
	DW	07bfH
	DW	04dbcH
	DB	08aH
	DB	0d3H
	DB	0a3H
	DB	052H
	DB	04cH
	DB	0c4H
	DB	03eH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_4DyuchiNET
CONST	SEGMENT
_CLSID_4DyuchiNET DD 011c02a88H
	DW	08bf9H
	DW	04863H
	DB	0a7H
	DB	0deH
	DB	01bH
	DB	0f6H
	DB	06dH
	DB	060H
	DB	0cbH
	DB	0a3H
CONST	ENDS
CONST	SEGMENT
$SG91192 DB	'\', 00H, 00H, 00H
$SG91212 DB	'\', 00H, 00H, 00H
$SG91228 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, '\', 00H
	DB	00H, 00H
	ORG $+2
$SG91229 DB	'D', 00H, 'L', 00H, 'L', 00H, ' ', 00H, 'N', 00H, 'E', 00H
	DB	'T', 00H, 'W', 00H, 'O', 00H, 'R', 00H, 'K', 00H, ' ', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'b', 00H, 'y'
	DB	00H, ' ', 00H, 'y', 00H, 'u', 00H, 'c', 00H, 'h', 00H, 'i', 00H
	DB	00H, 00H
	ORG $+2
$SG91230 DB	'C', 00H, 'T', 00H, 'S', 00H, '.', 00H, 'C', 00H, 'O', 00H
	DB	'D', 00H, 'E', 00H, '.', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG91231 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, 00H, 00H
$SG91232 DB	'C', 00H, 'T', 00H, 'S', 00H, '.', 00H, 'C', 00H, 'L', 00H
	DB	'S', 00H, 'I', 00H, 'D', 00H, '_', 00H, '4', 00H, 'D', 00H, 'y'
	DB	00H, 'u', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'N', 00H, 'E', 00H
	DB	'T', 00H, '.', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG91233 DB	'D', 00H, 'L', 00H, 'L', 00H, ' ', 00H, 'N', 00H, 'E', 00H
	DB	'T', 00H, 'W', 00H, 'O', 00H, 'R', 00H, 'K', 00H, ' ', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'b', 00H, 'y'
	DB	00H, ' ', 00H, 'y', 00H, 'u', 00H, 'c', 00H, 'h', 00H, 'i', 00H
	DB	00H, 00H
	ORG $+2
$SG91234 DB	'C', 00H, 'T', 00H, 'S', 00H, '.', 00H, 'C', 00H, 'L', 00H
	DB	'S', 00H, 'I', 00H, 'D', 00H, '_', 00H, '4', 00H, 'D', 00H, 'y'
	DB	00H, 'u', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'N', 00H, 'E', 00H
	DB	'T', 00H, 00H, 00H
	ORG $+2
$SG91235 DB	'C', 00H, 'T', 00H, 'S', 00H, '.', 00H, 'C', 00H, 'L', 00H
	DB	'S', 00H, 'I', 00H, 'D', 00H, '_', 00H, '4', 00H, 'D', 00H, 'y'
	DB	00H, 'u', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'N', 00H, 'E', 00H
	DB	'T', 00H, '.', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG91236 DB	'C', 00H, 'u', 00H, 'r', 00H, 'V', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+2
$SG91237 DB	'C', 00H, 'T', 00H, 'S', 00H, '.', 00H, 'C', 00H, 'L', 00H
	DB	'S', 00H, 'I', 00H, 'D', 00H, '_', 00H, '4', 00H, 'D', 00H, 'y'
	DB	00H, 'u', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'N', 00H, 'E', 00H
	DB	'T', 00H, '.', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG91238 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, 00H, 00H
$SG91239 DB	'C', 00H, 'T', 00H, 'S', 00H, '.', 00H, 'C', 00H, 'L', 00H
	DB	'S', 00H, 'I', 00H, 'D', 00H, '_', 00H, '4', 00H, 'D', 00H, 'y'
	DB	00H, 'u', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'N', 00H, 'E', 00H
	DB	'T', 00H, '.', 00H, '1', 00H, 00H, 00H
	ORG $+6
$SG91240 DB	'D', 00H, 'L', 00H, 'L', 00H, ' ', 00H, 'N', 00H, 'E', 00H
	DB	'T', 00H, 'W', 00H, 'O', 00H, 'R', 00H, 'K', 00H, ' ', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'b', 00H, 'y'
	DB	00H, ' ', 00H, 'y', 00H, 'u', 00H, 'c', 00H, 'h', 00H, 'i', 00H
	DB	00H, 00H
	ORG $+2
$SG91241 DB	'C', 00H, 'T', 00H, 'S', 00H, '.', 00H, 'C', 00H, 'L', 00H
	DB	'S', 00H, 'I', 00H, 'D', 00H, '_', 00H, '4', 00H, 'D', 00H, 'y'
	DB	00H, 'u', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'N', 00H, 'E', 00H
	DB	'T', 00H, '.', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG91242 DB	'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H, 'I', 00H, 'D', 00H
	DB	00H, 00H
	ORG $+2
$SG91243 DB	'C', 00H, 'T', 00H, 'S', 00H, '.', 00H, 'C', 00H, 'L', 00H
	DB	'S', 00H, 'I', 00H, 'D', 00H, '_', 00H, '4', 00H, 'D', 00H, 'y'
	DB	00H, 'u', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'N', 00H, 'E', 00H
	DB	'T', 00H, '.', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG91244 DB	'V', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'p', 00H, 'e'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'P', 00H
	DB	'r', 00H, 'o', 00H, 'g', 00H, 'I', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG91245 DB	'N', 00H, 'o', 00H, 't', 00H, 'I', 00H, 'n', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, 00H, 00H
$SG91246 DB	'I', 00H, 'n', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'c', 00H
	DB	'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 'r', 00H, '3'
	DB	00H, '2', 00H, 00H, 00H
	ORG $+2
$SG91247 DB	'A', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'm', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 00H, 00H
$SG91248 DB	'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG91249 DB	'I', 00H, 'n', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'c', 00H
	DB	'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 'r', 00H, '3'
	DB	00H, '2', 00H, 00H, 00H
	ORG $+2
$SG91257 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, '\', 00H
	DB	00H, 00H
	ORG $+2
$SG91261 DB	'C', 00H, 'T', 00H, 'S', 00H, '.', 00H, 'C', 00H, 'L', 00H
	DB	'S', 00H, 'I', 00H, 'D', 00H, '_', 00H, '4', 00H, 'D', 00H, 'y'
	DB	00H, 'u', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'N', 00H, 'E', 00H
	DB	'T', 00H, '\', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'V', 00H, 'e'
	DB	00H, 'r', 00H, 00H, 00H
$SG91265 DB	'C', 00H, 'T', 00H, 'S', 00H, '.', 00H, 'C', 00H, 'L', 00H
	DB	'S', 00H, 'I', 00H, 'D', 00H, '_', 00H, '4', 00H, 'D', 00H, 'y'
	DB	00H, 'u', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'N', 00H, 'E', 00H
	DB	'T', 00H, '\', 00H, 'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D'
	DB	00H, 00H, 00H
	ORG $+2
$SG91269 DB	'C', 00H, 'T', 00H, 'S', 00H, '.', 00H, 'C', 00H, 'L', 00H
	DB	'S', 00H, 'I', 00H, 'D', 00H, '_', 00H, '4', 00H, 'D', 00H, 'y'
	DB	00H, 'u', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'N', 00H, 'E', 00H
	DB	'T', 00H, 00H, 00H
	ORG $+2
$SG91273 DB	'C', 00H, 'T', 00H, 'S', 00H, '.', 00H, 'C', 00H, 'L', 00H
	DB	'S', 00H, 'I', 00H, 'D', 00H, '_', 00H, '4', 00H, 'D', 00H, 'y'
	DB	00H, 'u', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'N', 00H, 'E', 00H
	DB	'T', 00H, '.', 00H, '1', 00H, '\', 00H, 'C', 00H, 'L', 00H, 'S'
	DB	00H, 'I', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG91277 DB	'C', 00H, 'T', 00H, 'S', 00H, '.', 00H, 'C', 00H, 'L', 00H
	DB	'S', 00H, 'I', 00H, 'D', 00H, '_', 00H, '4', 00H, 'D', 00H, 'y'
	DB	00H, 'u', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'N', 00H, 'E', 00H
	DB	'T', 00H, '.', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG91278 DB	'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H, 'I', 00H, 'D', 00H
	DB	00H, 00H
	ORG $+2
$SG91279 DB	'%', 00H, 's', 00H, '\', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG91283 DB	'V', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'p', 00H, 'e'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'P', 00H
	DB	'r', 00H, 'o', 00H, 'g', 00H, 'I', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG91284 DB	'%', 00H, 's', 00H, '\', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG91288 DB	'N', 00H, 'o', 00H, 't', 00H, 'I', 00H, 'n', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, 00H, 00H
$SG91289 DB	'%', 00H, 's', 00H, '\', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG91293 DB	'I', 00H, 'n', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'c', 00H
	DB	'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 'r', 00H, '3'
	DB	00H, '2', 00H, 00H, 00H
	ORG $+2
$SG91294 DB	'%', 00H, 's', 00H, '\', 00H, '%', 00H, 's', 00H, 00H, 00H
CONST	ENDS
PUBLIC	_DllGetClassObject@12
PUBLIC	_DllCanUnloadNow@0
PUBLIC	_DllMain@12
PUBLIC	?SetRegKeyValue@@YAHPA_W00@Z			; SetRegKeyValue
PUBLIC	?AddRegNamedValue@@YAHPA_W000@Z			; AddRegNamedValue
PUBLIC	_DllRegisterServer@0
PUBLIC	_DllUnregisterServer@0
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__GetModuleFileNameW@12:PROC
EXTRN	__imp__lstrcpyW@8:PROC
EXTRN	__imp__lstrcatW@8:PROC
EXTRN	__imp__lstrlenW@4:PROC
EXTRN	__imp__wsprintfW:PROC
EXTRN	__imp__RegCloseKey@4:PROC
EXTRN	__imp__RegCreateKeyExW@36:PROC
EXTRN	__imp__RegDeleteKeyW@8:PROC
EXTRN	__imp__RegOpenKeyExW@20:PROC
EXTRN	__imp__RegSetValueExW@24:PROC
EXTRN	__imp__StringFromGUID2@12:PROC
EXTRN	??0CF4DyuchiNET@@QAE@XZ:PROC			; CF4DyuchiNET::CF4DyuchiNET
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memcmp:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Odspy
_TEXT	SEGMENT
_hr$ = -128						; size = 4
_szID$ = -124						; size = 258
_szTemp$ = 136						; size = 776
_szCLSID$ = 912						; size = 320
__$ArrayPad$ = 1232					; size = 4
_DllUnregisterServer@0 PROC
; File e:\github\mso_code\4dyuchinet_latest\dllmain.cpp
; Line 371
  00000	55		 push	 ebp
  00001	8d ac 24 2c fb
	ff ff		 lea	 ebp, DWORD PTR [esp-1236]
  00008	81 ec 54 05 00
	00		 sub	 esp, 1364		; 00000554H
  0000e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00013	33 c5		 xor	 eax, ebp
  00015	89 85 d0 04 00
	00		 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 372
  0001b	83 65 80 00	 and	 DWORD PTR _hr$[ebp], 0
; Line 379
  0001f	68 80 00 00 00	 push	 128			; 00000080H
  00024	8d 45 84	 lea	 eax, DWORD PTR _szID$[ebp]
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET _CLSID_4DyuchiNET
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__StringFromGUID2@12
; Line 380
  00033	68 00 00 00 00	 push	 OFFSET $SG91257
  00038	8d 85 90 03 00
	00		 lea	 eax, DWORD PTR _szCLSID$[ebp]
  0003e	50		 push	 eax
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpyW@8
; Line 381
  00045	8d 45 84	 lea	 eax, DWORD PTR _szID$[ebp]
  00048	50		 push	 eax
  00049	8d 85 90 03 00
	00		 lea	 eax, DWORD PTR _szCLSID$[ebp]
  0004f	50		 push	 eax
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcatW@8
; Line 383
  00056	68 00 00 00 00	 push	 OFFSET $SG91261
  0005b	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegDeleteKeyW@8
; Line 384
  00066	68 00 00 00 00	 push	 OFFSET $SG91265
  0006b	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegDeleteKeyW@8
; Line 385
  00076	68 00 00 00 00	 push	 OFFSET $SG91269
  0007b	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegDeleteKeyW@8
; Line 387
  00086	68 00 00 00 00	 push	 OFFSET $SG91273
  0008b	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegDeleteKeyW@8
; Line 388
  00096	68 00 00 00 00	 push	 OFFSET $SG91277
  0009b	68 00 00 00 80	 push	 -2147483648		; 80000000H
  000a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegDeleteKeyW@8
; Line 391
  000a6	68 00 00 00 00	 push	 OFFSET $SG91278
  000ab	8d 85 90 03 00
	00		 lea	 eax, DWORD PTR _szCLSID$[ebp]
  000b1	50		 push	 eax
  000b2	68 00 00 00 00	 push	 OFFSET $SG91279
  000b7	8d 85 88 00 00
	00		 lea	 eax, DWORD PTR _szTemp$[ebp]
  000bd	50		 push	 eax
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfW
  000c4	83 c4 10	 add	 esp, 16			; 00000010H
; Line 392
  000c7	8d 85 88 00 00
	00		 lea	 eax, DWORD PTR _szTemp$[ebp]
  000cd	50		 push	 eax
  000ce	68 00 00 00 80	 push	 -2147483648		; 80000000H
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegDeleteKeyW@8
; Line 394
  000d9	68 00 00 00 00	 push	 OFFSET $SG91283
  000de	8d 85 90 03 00
	00		 lea	 eax, DWORD PTR _szCLSID$[ebp]
  000e4	50		 push	 eax
  000e5	68 00 00 00 00	 push	 OFFSET $SG91284
  000ea	8d 85 88 00 00
	00		 lea	 eax, DWORD PTR _szTemp$[ebp]
  000f0	50		 push	 eax
  000f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfW
  000f7	83 c4 10	 add	 esp, 16			; 00000010H
; Line 395
  000fa	8d 85 88 00 00
	00		 lea	 eax, DWORD PTR _szTemp$[ebp]
  00100	50		 push	 eax
  00101	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00106	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegDeleteKeyW@8
; Line 397
  0010c	68 00 00 00 00	 push	 OFFSET $SG91288
  00111	8d 85 90 03 00
	00		 lea	 eax, DWORD PTR _szCLSID$[ebp]
  00117	50		 push	 eax
  00118	68 00 00 00 00	 push	 OFFSET $SG91289
  0011d	8d 85 88 00 00
	00		 lea	 eax, DWORD PTR _szTemp$[ebp]
  00123	50		 push	 eax
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfW
  0012a	83 c4 10	 add	 esp, 16			; 00000010H
; Line 398
  0012d	8d 85 88 00 00
	00		 lea	 eax, DWORD PTR _szTemp$[ebp]
  00133	50		 push	 eax
  00134	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00139	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegDeleteKeyW@8
; Line 400
  0013f	68 00 00 00 00	 push	 OFFSET $SG91293
  00144	8d 85 90 03 00
	00		 lea	 eax, DWORD PTR _szCLSID$[ebp]
  0014a	50		 push	 eax
  0014b	68 00 00 00 00	 push	 OFFSET $SG91294
  00150	8d 85 88 00 00
	00		 lea	 eax, DWORD PTR _szTemp$[ebp]
  00156	50		 push	 eax
  00157	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfW
  0015d	83 c4 10	 add	 esp, 16			; 00000010H
; Line 401
  00160	8d 85 88 00 00
	00		 lea	 eax, DWORD PTR _szTemp$[ebp]
  00166	50		 push	 eax
  00167	68 00 00 00 80	 push	 -2147483648		; 80000000H
  0016c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegDeleteKeyW@8
; Line 403
  00172	8d 85 90 03 00
	00		 lea	 eax, DWORD PTR _szCLSID$[ebp]
  00178	50		 push	 eax
  00179	68 00 00 00 80	 push	 -2147483648		; 80000000H
  0017e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegDeleteKeyW@8
; Line 405
  00184	8b 45 80	 mov	 eax, DWORD PTR _hr$[ebp]
; Line 406
  00187	8b 8d d0 04 00
	00		 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0018d	33 cd		 xor	 ecx, ebp
  0018f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00194	81 c5 d4 04 00
	00		 add	 ebp, 1236		; 000004d4H
  0019a	8b e5		 mov	 esp, ebp
  0019c	5d		 pop	 ebp
  0019d	c3		 ret	 0
_DllUnregisterServer@0 ENDP
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_hr$ = -1108						; size = 4
_szModulePath$ = -1104					; size = 520
_szID$ = -584						; size = 258
_szCLSID$ = -324					; size = 320
__$ArrayPad$ = -4					; size = 4
_DllRegisterServer@0 PROC
; File e:\github\mso_code\4dyuchinet_latest\dllmain.cpp
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 54 04 00
	00		 sub	 esp, 1108		; 00000454H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 281
  00013	83 a5 ac fb ff
	ff 00		 and	 DWORD PTR _hr$[ebp], 0
; Line 287
  0001a	68 04 01 00 00	 push	 260			; 00000104H
  0001f	8d 85 b0 fb ff
	ff		 lea	 eax, DWORD PTR _szModulePath$[ebp]
  00025	50		 push	 eax
  00026	ff 35 00 00 00
	00		 push	 DWORD PTR ?g_hDllInst@@3PAUHINSTANCE__@@A ; g_hDllInst
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleFileNameW@12
; Line 294
  00032	68 80 00 00 00	 push	 128			; 00000080H
  00037	8d 85 b8 fd ff
	ff		 lea	 eax, DWORD PTR _szID$[ebp]
  0003d	50		 push	 eax
  0003e	68 00 00 00 00	 push	 OFFSET _CLSID_4DyuchiNET
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__StringFromGUID2@12
; Line 295
  00049	68 00 00 00 00	 push	 OFFSET $SG91228
  0004e	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _szCLSID$[ebp]
  00054	50		 push	 eax
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpyW@8
; Line 296
  0005b	8d 85 b8 fd ff
	ff		 lea	 eax, DWORD PTR _szID$[ebp]
  00061	50		 push	 eax
  00062	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _szCLSID$[ebp]
  00068	50		 push	 eax
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcatW@8
; Line 302
  0006f	68 00 00 00 00	 push	 OFFSET $SG91229
  00074	6a 00		 push	 0
  00076	68 00 00 00 00	 push	 OFFSET $SG91230
  0007b	e8 00 00 00 00	 call	 ?SetRegKeyValue@@YAHPA_W00@Z ; SetRegKeyValue
  00080	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 307
  00083	8d 85 b8 fd ff
	ff		 lea	 eax, DWORD PTR _szID$[ebp]
  00089	50		 push	 eax
  0008a	68 00 00 00 00	 push	 OFFSET $SG91231
  0008f	68 00 00 00 00	 push	 OFFSET $SG91232
  00094	e8 00 00 00 00	 call	 ?SetRegKeyValue@@YAHPA_W00@Z ; SetRegKeyValue
  00099	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 314
  0009c	68 00 00 00 00	 push	 OFFSET $SG91233
  000a1	6a 00		 push	 0
  000a3	68 00 00 00 00	 push	 OFFSET $SG91234
  000a8	e8 00 00 00 00	 call	 ?SetRegKeyValue@@YAHPA_W00@Z ; SetRegKeyValue
  000ad	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 320
  000b0	68 00 00 00 00	 push	 OFFSET $SG91235
  000b5	68 00 00 00 00	 push	 OFFSET $SG91236
  000ba	68 00 00 00 00	 push	 OFFSET $SG91237
  000bf	e8 00 00 00 00	 call	 ?SetRegKeyValue@@YAHPA_W00@Z ; SetRegKeyValue
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 324
  000c7	8d 85 b8 fd ff
	ff		 lea	 eax, DWORD PTR _szID$[ebp]
  000cd	50		 push	 eax
  000ce	68 00 00 00 00	 push	 OFFSET $SG91238
  000d3	68 00 00 00 00	 push	 OFFSET $SG91239
  000d8	e8 00 00 00 00	 call	 ?SetRegKeyValue@@YAHPA_W00@Z ; SetRegKeyValue
  000dd	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 330
  000e0	68 00 00 00 00	 push	 OFFSET $SG91240
  000e5	6a 00		 push	 0
  000e7	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _szCLSID$[ebp]
  000ed	50		 push	 eax
  000ee	e8 00 00 00 00	 call	 ?SetRegKeyValue@@YAHPA_W00@Z ; SetRegKeyValue
  000f3	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 335
  000f6	68 00 00 00 00	 push	 OFFSET $SG91241
  000fb	68 00 00 00 00	 push	 OFFSET $SG91242
  00100	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _szCLSID$[ebp]
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ?SetRegKeyValue@@YAHPA_W00@Z ; SetRegKeyValue
  0010c	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 339
  0010f	68 00 00 00 00	 push	 OFFSET $SG91243
  00114	68 00 00 00 00	 push	 OFFSET $SG91244
  00119	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _szCLSID$[ebp]
  0011f	50		 push	 eax
  00120	e8 00 00 00 00	 call	 ?SetRegKeyValue@@YAHPA_W00@Z ; SetRegKeyValue
  00125	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 343
  00128	6a 00		 push	 0
  0012a	68 00 00 00 00	 push	 OFFSET $SG91245
  0012f	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _szCLSID$[ebp]
  00135	50		 push	 eax
  00136	e8 00 00 00 00	 call	 ?SetRegKeyValue@@YAHPA_W00@Z ; SetRegKeyValue
  0013b	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 347
  0013e	8d 85 b0 fb ff
	ff		 lea	 eax, DWORD PTR _szModulePath$[ebp]
  00144	50		 push	 eax
  00145	68 00 00 00 00	 push	 OFFSET $SG91246
  0014a	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _szCLSID$[ebp]
  00150	50		 push	 eax
  00151	e8 00 00 00 00	 call	 ?SetRegKeyValue@@YAHPA_W00@Z ; SetRegKeyValue
  00156	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 353
  00159	68 00 00 00 00	 push	 OFFSET $SG91247
  0015e	68 00 00 00 00	 push	 OFFSET $SG91248
  00163	68 00 00 00 00	 push	 OFFSET $SG91249
  00168	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _szCLSID$[ebp]
  0016e	50		 push	 eax
  0016f	e8 00 00 00 00	 call	 ?AddRegNamedValue@@YAHPA_W000@Z ; AddRegNamedValue
  00174	83 c4 10	 add	 esp, 16			; 00000010H
; Line 355
  00177	8b 85 ac fb ff
	ff		 mov	 eax, DWORD PTR _hr$[ebp]
; Line 356
  0017d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00180	33 cd		 xor	 ecx, ebp
  00182	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00187	8b e5		 mov	 esp, ebp
  00189	5d		 pop	 ebp
  0018a	c3		 ret	 0
_DllRegisterServer@0 ENDP
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_bOk$ = -128						; size = 4
_hKey$ = -124						; size = 4
_ec$ = -120						; size = 4
_szKey$ = -116						; size = 512
__$ArrayPad$ = 396					; size = 4
_pszKey$ = 408						; size = 4
_pszSubkey$ = 412					; size = 4
_pszValueName$ = 416					; size = 4
_pszValue$ = 420					; size = 4
?AddRegNamedValue@@YAHPA_W000@Z PROC			; AddRegNamedValue
; File e:\github\mso_code\4dyuchinet_latest\dllmain.cpp
; Line 229
  00000	55		 push	 ebp
  00001	8d ac 24 70 fe
	ff ff		 lea	 ebp, DWORD PTR [esp-400]
  00008	81 ec 10 02 00
	00		 sub	 esp, 528		; 00000210H
  0000e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00013	33 c5		 xor	 eax, ebp
  00015	89 85 8c 01 00
	00		 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 230
  0001b	83 65 80 00	 and	 DWORD PTR _bOk$[ebp], 0
; Line 235
  0001f	ff b5 98 01 00
	00		 push	 DWORD PTR _pszKey$[ebp]
  00025	8d 45 8c	 lea	 eax, DWORD PTR _szKey$[ebp]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpyW@8
; Line 237
  0002f	83 bd 9c 01 00
	00 00		 cmp	 DWORD PTR _pszSubkey$[ebp], 0
  00036	74 1f		 je	 SHORT $LN3@AddRegName
; Line 239
  00038	68 00 00 00 00	 push	 OFFSET $SG91212
  0003d	8d 45 8c	 lea	 eax, DWORD PTR _szKey$[ebp]
  00040	50		 push	 eax
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcatW@8
; Line 240
  00047	ff b5 9c 01 00
	00		 push	 DWORD PTR _pszSubkey$[ebp]
  0004d	8d 45 8c	 lea	 eax, DWORD PTR _szKey$[ebp]
  00050	50		 push	 eax
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcatW@8
$LN3@AddRegName:
; Line 248
  00057	8d 45 84	 lea	 eax, DWORD PTR _hKey$[ebp]
  0005a	50		 push	 eax
  0005b	68 3f 00 0f 00	 push	 983103			; 000f003fH
  00060	6a 00		 push	 0
  00062	8d 45 8c	 lea	 eax, DWORD PTR _szKey$[ebp]
  00065	50		 push	 eax
  00066	68 00 00 00 80	 push	 -2147483648		; 80000000H
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegOpenKeyExW@20
  00071	89 45 88	 mov	 DWORD PTR _ec$[ebp], eax
; Line 250
  00074	83 bd a4 01 00
	00 00		 cmp	 DWORD PTR _pszValue$[ebp], 0
  0007b	74 49		 je	 SHORT $LN2@AddRegName
  0007d	83 7d 88 00	 cmp	 DWORD PTR _ec$[ebp], 0
  00081	75 43		 jne	 SHORT $LN2@AddRegName
; Line 258
  00083	ff b5 a4 01 00
	00		 push	 DWORD PTR _pszValue$[ebp]
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenW@4
  0008f	8d 44 00 02	 lea	 eax, DWORD PTR [eax+eax+2]
  00093	50		 push	 eax
  00094	ff b5 a4 01 00
	00		 push	 DWORD PTR _pszValue$[ebp]
  0009a	6a 01		 push	 1
  0009c	6a 00		 push	 0
  0009e	ff b5 a0 01 00
	00		 push	 DWORD PTR _pszValueName$[ebp]
  000a4	ff 75 84	 push	 DWORD PTR _hKey$[ebp]
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegSetValueExW@24
  000ad	89 45 88	 mov	 DWORD PTR _ec$[ebp], eax
; Line 259
  000b0	83 7d 88 00	 cmp	 DWORD PTR _ec$[ebp], 0
  000b4	75 07		 jne	 SHORT $LN1@AddRegName
; Line 260
  000b6	c7 45 80 01 00
	00 00		 mov	 DWORD PTR _bOk$[ebp], 1
$LN1@AddRegName:
; Line 261
  000bd	ff 75 84	 push	 DWORD PTR _hKey$[ebp]
  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4
$LN2@AddRegName:
; Line 264
  000c6	8b 45 80	 mov	 eax, DWORD PTR _bOk$[ebp]
; Line 265
  000c9	8b 8d 8c 01 00
	00		 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cf	33 cd		 xor	 ecx, ebp
  000d1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d6	81 c5 90 01 00
	00		 add	 ebp, 400		; 00000190H
  000dc	8b e5		 mov	 esp, ebp
  000de	5d		 pop	 ebp
  000df	c3		 ret	 0
?AddRegNamedValue@@YAHPA_W000@Z ENDP			; AddRegNamedValue
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_bOk$ = -128						; size = 4
_hKey$ = -124						; size = 4
_ec$ = -120						; size = 4
_szKey$ = -116						; size = 512
__$ArrayPad$ = 396					; size = 4
_pszKey$ = 408						; size = 4
_pszSubkey$ = 412					; size = 4
_pszValue$ = 416					; size = 4
?SetRegKeyValue@@YAHPA_W00@Z PROC			; SetRegKeyValue
; File e:\github\mso_code\4dyuchinet_latest\dllmain.cpp
; Line 163
  00000	55		 push	 ebp
  00001	8d ac 24 70 fe
	ff ff		 lea	 ebp, DWORD PTR [esp-400]
  00008	81 ec 10 02 00
	00		 sub	 esp, 528		; 00000210H
  0000e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00013	33 c5		 xor	 eax, ebp
  00015	89 85 8c 01 00
	00		 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 164
  0001b	83 65 80 00	 and	 DWORD PTR _bOk$[ebp], 0
; Line 169
  0001f	ff b5 98 01 00
	00		 push	 DWORD PTR _pszKey$[ebp]
  00025	8d 45 8c	 lea	 eax, DWORD PTR _szKey$[ebp]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpyW@8
; Line 171
  0002f	83 bd 9c 01 00
	00 00		 cmp	 DWORD PTR _pszSubkey$[ebp], 0
  00036	74 1f		 je	 SHORT $LN4@SetRegKeyV
; Line 173
  00038	68 00 00 00 00	 push	 OFFSET $SG91192
  0003d	8d 45 8c	 lea	 eax, DWORD PTR _szKey$[ebp]
  00040	50		 push	 eax
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcatW@8
; Line 174
  00047	ff b5 9c 01 00
	00		 push	 DWORD PTR _pszSubkey$[ebp]
  0004d	8d 45 8c	 lea	 eax, DWORD PTR _szKey$[ebp]
  00050	50		 push	 eax
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcatW@8
$LN4@SetRegKeyV:
; Line 186
  00057	6a 00		 push	 0
  00059	8d 45 84	 lea	 eax, DWORD PTR _hKey$[ebp]
  0005c	50		 push	 eax
  0005d	6a 00		 push	 0
  0005f	68 3f 00 0f 00	 push	 983103			; 000f003fH
  00064	6a 00		 push	 0
  00066	6a 00		 push	 0
  00068	6a 00		 push	 0
  0006a	8d 45 8c	 lea	 eax, DWORD PTR _szKey$[ebp]
  0006d	50		 push	 eax
  0006e	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00073	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCreateKeyExW@36
  00079	89 45 88	 mov	 DWORD PTR _ec$[ebp], eax
; Line 188
  0007c	83 7d 88 00	 cmp	 DWORD PTR _ec$[ebp], 0
  00080	75 48		 jne	 SHORT $LN3@SetRegKeyV
; Line 190
  00082	83 bd a0 01 00
	00 00		 cmp	 DWORD PTR _pszValue$[ebp], 0
  00089	74 29		 je	 SHORT $LN2@SetRegKeyV
; Line 198
  0008b	ff b5 a0 01 00
	00		 push	 DWORD PTR _pszValue$[ebp]
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenW@4
  00097	8d 44 00 02	 lea	 eax, DWORD PTR [eax+eax+2]
  0009b	50		 push	 eax
  0009c	ff b5 a0 01 00
	00		 push	 DWORD PTR _pszValue$[ebp]
  000a2	6a 01		 push	 1
  000a4	6a 00		 push	 0
  000a6	6a 00		 push	 0
  000a8	ff 75 84	 push	 DWORD PTR _hKey$[ebp]
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegSetValueExW@24
  000b1	89 45 88	 mov	 DWORD PTR _ec$[ebp], eax
$LN2@SetRegKeyV:
; Line 200
  000b4	83 7d 88 00	 cmp	 DWORD PTR _ec$[ebp], 0
  000b8	75 07		 jne	 SHORT $LN1@SetRegKeyV
; Line 201
  000ba	c7 45 80 01 00
	00 00		 mov	 DWORD PTR _bOk$[ebp], 1
$LN1@SetRegKeyV:
; Line 202
  000c1	ff 75 84	 push	 DWORD PTR _hKey$[ebp]
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4
$LN3@SetRegKeyV:
; Line 205
  000ca	8b 45 80	 mov	 eax, DWORD PTR _bOk$[ebp]
; Line 206
  000cd	8b 8d 8c 01 00
	00		 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d3	33 cd		 xor	 ecx, ebp
  000d5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000da	81 c5 90 01 00
	00		 add	 ebp, 400		; 00000190H
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c3		 ret	 0
?SetRegKeyValue@@YAHPA_W00@Z ENDP			; SetRegKeyValue
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
tv64 = -4						; size = 4
_hDllInst$ = 8						; size = 4
_fdwReason$ = 12					; size = 4
_lpvReserved$ = 16					; size = 4
_DllMain@12 PROC
; File e:\github\mso_code\4dyuchinet_latest\dllmain.cpp
; Line 33
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; Line 38
  00004	8b 45 0c	 mov	 eax, DWORD PTR _fdwReason$[ebp]
  00007	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  0000a	83 7d fc 01	 cmp	 DWORD PTR tv64[ebp], 1
  0000e	74 02		 je	 SHORT $LN5@DllMain
  00010	eb 08		 jmp	 SHORT $LN6@DllMain
$LN5@DllMain:
; Line 42
  00012	8b 45 08	 mov	 eax, DWORD PTR _hDllInst$[ebp]
  00015	a3 00 00 00 00	 mov	 DWORD PTR ?g_hDllInst@@3PAUHINSTANCE__@@A, eax ; g_hDllInst
$LN6@DllMain:
; Line 74
  0001a	33 c0		 xor	 eax, eax
  0001c	40		 inc	 eax
; Line 75
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 0c 00	 ret	 12			; 0000000cH
_DllMain@12 ENDP
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_DllCanUnloadNow@0 PROC
; File e:\github\mso_code\4dyuchinet_latest\dllmain.cpp
; Line 141
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 142
  00003	33 c0		 xor	 eax, eax
; Line 143
  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
_DllCanUnloadNow@0 ENDP
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
$T1 = -36						; size = 4
$T2 = -32						; size = 4
tv131 = -28						; size = 4
tv79 = -24						; size = 4
$T3 = -20						; size = 4
tv93 = -16						; size = 4
tv133 = -12						; size = 4
_hr$ = -8						; size = 4
_pIFactory$ = -4					; size = 4
_rclsid$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
_DllGetClassObject@12 PROC
; File e:\github\mso_code\4dyuchinet_latest\dllmain.cpp
; Line 102
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
; Line 105
  00006	83 65 fc 00	 and	 DWORD PTR _pIFactory$[ebp], 0
; Line 107
  0000a	c7 45 f8 11 01
	04 80		 mov	 DWORD PTR _hr$[ebp], -2147221231 ; 80040111H
; File c:\program files (x86)\windows kits\8.1\include\shared\guiddef.h
; Line 161
  00011	6a 10		 push	 16			; 00000010H
  00013	ff 75 08	 push	 DWORD PTR _rclsid$[ebp]
  00016	68 00 00 00 00	 push	 OFFSET _CLSID_4DyuchiNET
  0001b	e8 00 00 00 00	 call	 _memcmp
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
  00023	89 45 e4	 mov	 DWORD PTR tv131[ebp], eax
  00026	83 7d e4 00	 cmp	 DWORD PTR tv131[ebp], 0
  0002a	75 09		 jne	 SHORT $LN14@DllGetClas
  0002c	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  00033	eb 04		 jmp	 SHORT $LN12@DllGetClas
$LN14@DllGetClas:
  00035	83 65 f4 00	 and	 DWORD PTR tv133[ebp], 0
$LN12@DllGetClas:
; Line 194
  00039	83 7d f4 00	 cmp	 DWORD PTR tv133[ebp], 0
  0003d	74 09		 je	 SHORT $LN10@DllGetClas
  0003f	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv93[ebp], 1
  00046	eb 04		 jmp	 SHORT $LN8@DllGetClas
$LN10@DllGetClas:
  00048	83 65 f0 00	 and	 DWORD PTR tv93[ebp], 0
$LN8@DllGetClas:
; File e:\github\mso_code\4dyuchinet_latest\dllmain.cpp
; Line 109
  0004c	0f b6 45 f0	 movzx	 eax, BYTE PTR tv93[ebp]
  00050	85 c0		 test	 eax, eax
  00052	74 67		 je	 SHORT $LN3@DllGetClas
; Line 111
  00054	c7 45 f8 0e 00
	07 80		 mov	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH
; Line 112
  0005b	6a 08		 push	 8
  0005d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00062	59		 pop	 ecx
  00063	89 45 ec	 mov	 DWORD PTR $T3[ebp], eax
  00066	83 7d ec 00	 cmp	 DWORD PTR $T3[ebp], 0
  0006a	74 0d		 je	 SHORT $LN6@DllGetClas
  0006c	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp]
  0006f	e8 00 00 00 00	 call	 ??0CF4DyuchiNET@@QAE@XZ	; CF4DyuchiNET::CF4DyuchiNET
  00074	89 45 e8	 mov	 DWORD PTR tv79[ebp], eax
  00077	eb 04		 jmp	 SHORT $LN7@DllGetClas
$LN6@DllGetClas:
  00079	83 65 e8 00	 and	 DWORD PTR tv79[ebp], 0
$LN7@DllGetClas:
  0007d	8b 45 e8	 mov	 eax, DWORD PTR tv79[ebp]
  00080	89 45 e0	 mov	 DWORD PTR $T2[ebp], eax
  00083	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp]
  00086	89 45 fc	 mov	 DWORD PTR _pIFactory$[ebp], eax
; Line 113
  00089	83 7d fc 00	 cmp	 DWORD PTR _pIFactory$[ebp], 0
  0008d	74 2c		 je	 SHORT $LN3@DllGetClas
; Line 115
  0008f	ff 75 10	 push	 DWORD PTR _ppv$[ebp]
  00092	ff 75 0c	 push	 DWORD PTR _riid$[ebp]
  00095	8b 45 fc	 mov	 eax, DWORD PTR _pIFactory$[ebp]
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	ff 75 fc	 push	 DWORD PTR _pIFactory$[ebp]
  0009d	ff 10		 call	 DWORD PTR [eax]
  0009f	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 116
  000a2	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000a6	7d 13		 jge	 SHORT $LN3@DllGetClas
; Line 118
  000a8	8b 45 fc	 mov	 eax, DWORD PTR _pIFactory$[ebp]
  000ab	89 45 dc	 mov	 DWORD PTR $T1[ebp], eax
  000ae	ff 75 dc	 push	 DWORD PTR $T1[ebp]
  000b1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000b6	59		 pop	 ecx
; Line 119
  000b7	83 65 fc 00	 and	 DWORD PTR _pIFactory$[ebp], 0
$LN3@DllGetClas:
; Line 123
  000bb	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
; Line 125
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c2 0c 00	 ret	 12			; 0000000cH
_DllGetClassObject@12 ENDP
_TEXT	ENDS
END
