; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	E:\GitHub\Mso_Code\4DyuchiNET_Latest\overlapped_udp.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG91147 DB	'Error', 00H
	ORG $+2
$SG91148 DB	'WSARecvFrom() Error', 00H
CONST	ENDS
PUBLIC	?Initialize@COverlappedUDP@@QAEXXZ		; COverlappedUDP::Initialize
PUBLIC	?PrepareRead@COverlappedUDP@@QAEHXZ		; COverlappedUDP::PrepareRead
PUBLIC	??0COverlappedUDP@@QAE@XZ			; COverlappedUDP::COverlappedUDP
EXTRN	__imp__GetActiveWindow@0:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	__imp__WSAGetLastError@0:PROC
EXTRN	__imp__WSARecvFrom@36:PROC
EXTRN	??0COverlapped@@QAE@XZ:PROC			; COverlapped::COverlapped
EXTRN	??1COverlapped@@QAE@XZ:PROC			; COverlapped::~COverlapped
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
xdata$x	SEGMENT
__unwindtable$??0COverlappedUDP@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0COverlappedUDP@@QAE@XZ$0
__ehfuncinfo$??0COverlappedUDP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0COverlappedUDP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0COverlappedUDP@@QAE@XZ PROC				; COverlappedUDP::COverlappedUDP
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\overlapped_udp.cpp
; Line 4
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0COverlappedUDP@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ??0COverlapped@@QAE@XZ	; COverlapped::COverlapped
  0002e	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 5
  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?Initialize@COverlappedUDP@@QAEXXZ ; COverlappedUDP::Initialize
; Line 6
  0003a	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0003e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00044	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004b	59		 pop	 ecx
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0COverlappedUDP@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1COverlapped@@QAE@XZ	; COverlapped::~COverlapped
__ehhandler$??0COverlappedUDP@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0COverlappedUDP@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0COverlappedUDP@@QAE@XZ ENDP				; COverlappedUDP::COverlappedUDP
; Function compile flags: /Odspy
_TEXT	SEGMENT
_wsabuf$ = -16						; size = 8
_result$ = -8						; size = 4
_this$ = -4						; size = 4
?PrepareRead@COverlappedUDP@@QAEHXZ PROC		; COverlappedUDP::PrepareRead
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\overlapped_udp.cpp
; Line 19
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 24
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 44	 add	 eax, 68			; 00000044H
  0000f	89 45 f4	 mov	 DWORD PTR _wsabuf$[ebp+4], eax
; Line 25
  00012	c7 45 f0 00 04
	00 00		 mov	 DWORD PTR _wsabuf$[ebp], 1024 ; 00000400H
; Line 35
  00019	6a 00		 push	 0
  0001b	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c0 40	 add	 eax, 64			; 00000040H
  00024	50		 push	 eax
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	83 c0 30	 add	 eax, 48			; 00000030H
  0002b	50		 push	 eax
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c0 28	 add	 eax, 40			; 00000028H
  00032	50		 push	 eax
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	83 c0 18	 add	 eax, 24			; 00000018H
  00039	50		 push	 eax
  0003a	6a 01		 push	 1
  0003c	8d 45 f0	 lea	 eax, DWORD PTR _wsabuf$[ebp]
  0003f	50		 push	 eax
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	ff 70 1c	 push	 DWORD PTR [eax+28]
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSARecvFrom@36
  0004c	89 45 f8	 mov	 DWORD PTR _result$[ebp], eax
; Line 37
  0004f	83 7d f8 ff	 cmp	 DWORD PTR _result$[ebp], -1
  00053	74 05		 je	 SHORT $LN2@PrepareRea
; Line 38
  00055	33 c0		 xor	 eax, eax
  00057	40		 inc	 eax
  00058	eb 32		 jmp	 SHORT $LN3@PrepareRea
$LN2@PrepareRea:
; Line 40
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSAGetLastError@0
  00060	89 45 f8	 mov	 DWORD PTR _result$[ebp], eax
; Line 42
  00063	81 7d f8 e5 03
	00 00		 cmp	 DWORD PTR _result$[ebp], 997 ; 000003e5H
  0006a	75 05		 jne	 SHORT $LN1@PrepareRea
; Line 43
  0006c	33 c0		 xor	 eax, eax
  0006e	40		 inc	 eax
  0006f	eb 1b		 jmp	 SHORT $LN3@PrepareRea
$LN1@PrepareRea:
; Line 47
  00071	6a 00		 push	 0
  00073	68 00 00 00 00	 push	 OFFSET $SG91147
  00078	68 00 00 00 00	 push	 OFFSET $SG91148
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetActiveWindow@0
  00083	50		 push	 eax
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
; Line 48
  0008a	33 c0		 xor	 eax, eax
$LN3@PrepareRea:
; Line 49
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c3		 ret	 0
?PrepareRead@COverlappedUDP@@QAEHXZ ENDP		; COverlappedUDP::PrepareRead
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Initialize@COverlappedUDP@@QAEXXZ PROC			; COverlappedUDP::Initialize
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\overlapped_udp.cpp
; Line 8
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 11
  00008	33 c0		 xor	 eax, eax
  0000a	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0000d	ab		 stosd
  0000e	ab		 stosd
  0000f	ab		 stosd
  00010	ab		 stosd
  00011	ab		 stosd
; Line 12
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	83 48 1c ff	 or	 DWORD PTR [eax+28], -1
; Line 13
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 40 14 02 00
	00 00		 mov	 DWORD PTR [eax+20], 2
; Line 14
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 40 28 00 80
	00 00		 mov	 DWORD PTR [eax+40], 32768 ; 00008000H
; Line 15
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	c7 40 40 10 00
	00 00		 mov	 DWORD PTR [eax+64], 16	; 00000010H
; Line 16
  00037	5f		 pop	 edi
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Initialize@COverlappedUDP@@QAEXXZ ENDP			; COverlappedUDP::Initialize
_TEXT	ENDS
END
