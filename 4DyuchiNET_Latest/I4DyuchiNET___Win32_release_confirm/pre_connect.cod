; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	E:\GitHub\Mso_Code\4DyuchiNET_Latest\pre_connect.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_pPreConnectPool@@3PAVCPreConnectPool@@A	; g_pPreConnectPool
_BSS	SEGMENT
?g_pPreConnectPool@@3PAVCPreConnectPool@@A DD 01H DUP (?) ; g_pPreConnectPool
_BSS	ENDS
CONST	SEGMENT
$SG91767 DB	'[Release %p] ', 00H
CONST	ENDS
PUBLIC	?Alloc@CPreConnectPool@@AAEPAUPRE_CONNECT@@XZ	; CPreConnectPool::Alloc
PUBLIC	?Free@CPreConnectPool@@AAEXPAUPRE_CONNECT@@@Z	; CPreConnectPool::Free
PUBLIC	?FreeAll@CPreConnectPool@@AAEXXZ		; CPreConnectPool::FreeAll
PUBLIC	?Initialize@CPreConnectPool@@QAEHK@Z		; CPreConnectPool::Initialize
PUBLIC	?InsertPreConnect@CPreConnectPool@@QAEHPAUCONNECT_ITEM@@@Z ; CPreConnectPool::InsertPreConnect
PUBLIC	?ProcessPreConnect@CPreConnectPool@@QAEHXZ	; CPreConnectPool::ProcessPreConnect
PUBLIC	??0CPreConnectPool@@QAE@XZ			; CPreConnectPool::CPreConnectPool
PUBLIC	??1CPreConnectPool@@QAE@XZ			; CPreConnectPool::~CPreConnectPool
PUBLIC	?StartPreConnectPool@@YAHKK@Z			; StartPreConnectPool
PUBLIC	?EndPreConnectPool@@YAXXZ			; EndPreConnectPool
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	_printf:PROC
EXTRN	?PrepareRead@COverlappedRecv@@QAEHXZ:PROC	; COverlappedRecv::PrepareRead
EXTRN	?AddConnection@CNetwork@@QAEPAVCConnection@@I@Z:PROC ; CNetwork::AddConnection
EXTRN	?StartConnectThread@@YAHK@Z:PROC		; StartConnectThread
EXTRN	?EndConnectThread@@YAXXZ:PROC			; EndConnectThread
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
xdata$x	SEGMENT
__unwindtable$?StartPreConnectPool@@YAHKK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StartPreConnectPool@@YAHKK@Z$0
__ehfuncinfo$?StartPreConnectPool@@YAHKK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?StartPreConnectPool@@YAHKK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
tv69 = -12						; size = 4
$T1 = -8						; size = 4
$T2 = -4						; size = 4
?EndPreConnectPool@@YAXXZ PROC				; EndPreConnectPool
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 24
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
; Line 25
  00006	e8 00 00 00 00	 call	 ?EndConnectThread@@YAXXZ ; EndConnectThread
; Line 26
  0000b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPreConnectPool@@3PAVCPreConnectPool@@A, 0 ; g_pPreConnectPool
  00012	74 40		 je	 SHORT $LN2@EndPreConn
; Line 28
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pPreConnectPool@@3PAVCPreConnectPool@@A ; g_pPreConnectPool
  00019	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0001c	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  0001f	89 45 fc	 mov	 DWORD PTR $T2[ebp], eax
  00022	83 7d fc 00	 cmp	 DWORD PTR $T2[ebp], 0
  00026	74 21		 je	 SHORT $LN4@EndPreConn
  00028	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]
  0002b	e8 00 00 00 00	 call	 ??1CPreConnectPool@@QAE@XZ ; CPreConnectPool::~CPreConnectPool
  00030	33 c0		 xor	 eax, eax
  00032	40		 inc	 eax
  00033	83 e0 01	 and	 eax, 1
  00036	74 09		 je	 SHORT $LN7@EndPreConn
  00038	ff 75 fc	 push	 DWORD PTR $T2[ebp]
  0003b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00040	59		 pop	 ecx
$LN7@EndPreConn:
  00041	8b 45 fc	 mov	 eax, DWORD PTR $T2[ebp]
  00044	89 45 f4	 mov	 DWORD PTR tv69[ebp], eax
  00047	eb 04		 jmp	 SHORT $LN5@EndPreConn
$LN4@EndPreConn:
  00049	83 65 f4 00	 and	 DWORD PTR tv69[ebp], 0
$LN5@EndPreConn:
; Line 29
  0004d	83 25 00 00 00
	00 00		 and	 DWORD PTR ?g_pPreConnectPool@@3PAVCPreConnectPool@@A, 0 ; g_pPreConnectPool
$LN2@EndPreConn:
; Line 31
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
?EndPreConnectPool@@YAXXZ ENDP				; EndPreConnectPool
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv72 = -24						; size = 4
$T3 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwMaxConnectNumAtSameTime$ = 8				; size = 4
_dwDefaultItemNum$ = 12					; size = 4
?StartPreConnectPool@@YAHKK@Z PROC			; StartPreConnectPool
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 7
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?StartPreConnectPool@@YAHKK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 10
  00025	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPreConnectPool@@3PAVCPreConnectPool@@A, 0 ; g_pPreConnectPool
  0002c	74 04		 je	 SHORT $LN2@StartPreCo
; Line 11
  0002e	33 c0		 xor	 eax, eax
  00030	eb 63		 jmp	 SHORT $LN3@StartPreCo
$LN2@StartPreCo:
; Line 13
  00032	6a 30		 push	 48			; 00000030H
  00034	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00039	59		 pop	 ecx
  0003a	89 45 ec	 mov	 DWORD PTR $T3[ebp], eax
  0003d	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00041	83 7d ec 00	 cmp	 DWORD PTR $T3[ebp], 0
  00045	74 0d		 je	 SHORT $LN5@StartPreCo
  00047	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp]
  0004a	e8 00 00 00 00	 call	 ??0CPreConnectPool@@QAE@XZ ; CPreConnectPool::CPreConnectPool
  0004f	89 45 e8	 mov	 DWORD PTR tv72[ebp], eax
  00052	eb 04		 jmp	 SHORT $LN6@StartPreCo
$LN5@StartPreCo:
  00054	83 65 e8 00	 and	 DWORD PTR tv72[ebp], 0
$LN6@StartPreCo:
  00058	8b 45 e8	 mov	 eax, DWORD PTR tv72[ebp]
  0005b	89 45 e4	 mov	 DWORD PTR $T2[ebp], eax
  0005e	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00062	8b 45 e4	 mov	 eax, DWORD PTR $T2[ebp]
  00065	a3 00 00 00 00	 mov	 DWORD PTR ?g_pPreConnectPool@@3PAVCPreConnectPool@@A, eax ; g_pPreConnectPool
; Line 14
  0006a	ff 75 0c	 push	 DWORD PTR _dwDefaultItemNum$[ebp]
  0006d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPreConnectPool@@3PAVCPreConnectPool@@A ; g_pPreConnectPool
  00073	e8 00 00 00 00	 call	 ?Initialize@CPreConnectPool@@QAEHK@Z ; CPreConnectPool::Initialize
  00078	89 45 f0	 mov	 DWORD PTR _result$[ebp], eax
; Line 16
  0007b	83 7d f0 00	 cmp	 DWORD PTR _result$[ebp], 0
  0007f	75 05		 jne	 SHORT $LN1@StartPreCo
; Line 17
  00081	8b 45 f0	 mov	 eax, DWORD PTR _result$[ebp]
  00084	eb 0f		 jmp	 SHORT $LN3@StartPreCo
$LN1@StartPreCo:
; Line 19
  00086	ff 75 08	 push	 DWORD PTR _dwMaxConnectNumAtSameTime$[ebp]
  00089	e8 00 00 00 00	 call	 ?StartConnectThread@@YAHK@Z ; StartConnectThread
  0008e	59		 pop	 ecx
  0008f	89 45 f0	 mov	 DWORD PTR _result$[ebp], eax
; Line 21
  00092	8b 45 f0	 mov	 eax, DWORD PTR _result$[ebp]
$LN3@StartPreCo:
; Line 22
  00095	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009f	59		 pop	 ecx
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?StartPreConnectPool@@YAHKK@Z$0:
  00000	ff 75 ec	 push	 DWORD PTR $T3[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__ehhandler$?StartPreConnectPool@@YAHKK@Z:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?StartPreConnectPool@@YAHKK@Z
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?StartPreConnectPool@@YAHKK@Z ENDP			; StartPreConnectPool
; Function compile flags: /Odspy
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPreConnectPool@@QAE@XZ PROC				; CPreConnectPool::~CPreConnectPool
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 210
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 211
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?FreeAll@CPreConnectPool@@AAEXXZ ; CPreConnectPool::FreeAll
; Line 212
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 c0 10	 add	 eax, 16			; 00000010H
  00015	50		 push	 eax
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
; Line 213
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
??1CPreConnectPool@@QAE@XZ ENDP				; CPreConnectPool::~CPreConnectPool
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPreConnectPool@@QAE@XZ PROC				; CPreConnectPool::CPreConnectPool
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 33
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 34
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 20 00	 and	 DWORD PTR [eax], 0
; Line 35
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00010	83 60 04 00	 and	 DWORD PTR [eax+4], 0
; Line 36
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; Line 37
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 60 0c 00	 and	 DWORD PTR [eax+12], 0
; Line 38
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	83 60 28 00	 and	 DWORD PTR [eax+40], 0
; Line 39
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	83 60 2c 00	 and	 DWORD PTR [eax+44], 0
; Line 40
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 c0 10	 add	 eax, 16			; 00000010H
  00036	50		 push	 eax
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4
; Line 42
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
??0CPreConnectPool@@QAE@XZ ENDP				; CPreConnectPool::CPreConnectPool
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_next$ = -28						; size = 4
$T1 = -24						; size = 4
_this$ = -20						; size = 4
$T2 = -16						; size = 4
_pCon$ = -12						; size = 4
_this$ = -8						; size = 4
_cur$ = -4						; size = 4
?ProcessPreConnect@CPreConnectPool@@QAEHXZ PROC		; CPreConnectPool::ProcessPreConnect
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 139
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 144
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	50		 push	 eax
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 146
  00016	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 00		 mov	 eax, DWORD PTR [eax]
  0001b	89 45 fc	 mov	 DWORD PTR _cur$[ebp], eax
$LN7@ProcessPre:
; Line 149
  0001e	83 7d fc 00	 cmp	 DWORD PTR _cur$[ebp], 0
  00022	0f 84 97 00 00
	00		 je	 $LN6@ProcessPre
; Line 151
  00028	8b 45 fc	 mov	 eax, DWORD PTR _cur$[ebp]
  0002b	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  0002e	89 45 e4	 mov	 DWORD PTR _next$[ebp], eax
; Line 152
  00031	8b 45 fc	 mov	 eax, DWORD PTR _cur$[ebp]
  00034	83 38 ff	 cmp	 DWORD PTR [eax], -1
  00037	74 64		 je	 SHORT $LN5@ProcessPre
; Line 154
  00039	8b 45 fc	 mov	 eax, DWORD PTR _cur$[ebp]
  0003c	ff 30		 push	 DWORD PTR [eax]
  0003e	8b 45 fc	 mov	 eax, DWORD PTR _cur$[ebp]
  00041	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00044	e8 00 00 00 00	 call	 ?AddConnection@CNetwork@@QAEPAVCConnection@@I@Z ; CNetwork::AddConnection
  00049	89 45 f4	 mov	 DWORD PTR _pCon$[ebp], eax
; Line 155
  0004c	83 7d f4 00	 cmp	 DWORD PTR _pCon$[ebp], 0
  00050	74 49		 je	 SHORT $LN4@ProcessPre
; Line 157
  00052	8b 45 fc	 mov	 eax, DWORD PTR _cur$[ebp]
  00055	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00059	75 1d		 jne	 SHORT $LN3@ProcessPre
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 49
  0005b	8b 45 f4	 mov	 eax, DWORD PTR _pCon$[ebp]
  0005e	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00061	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 158
  00064	8b 45 fc	 mov	 eax, DWORD PTR _cur$[ebp]
  00067	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0006a	89 45 ec	 mov	 DWORD PTR _this$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\network.h
; Line 87
  0006d	ff 75 f0	 push	 DWORD PTR $T2[ebp]
  00070	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00073	ff 50 58	 call	 DWORD PTR [eax+88]
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 159
  00076	eb 18		 jmp	 SHORT $LN2@ProcessPre
$LN3@ProcessPre:
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 49
  00078	8b 45 f4	 mov	 eax, DWORD PTR _pCon$[ebp]
  0007b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0007e	89 45 e8	 mov	 DWORD PTR $T1[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 160
  00081	8b 45 fc	 mov	 eax, DWORD PTR _cur$[ebp]
  00084	ff 70 10	 push	 DWORD PTR [eax+16]
  00087	ff 75 e8	 push	 DWORD PTR $T1[ebp]
  0008a	8b 45 fc	 mov	 eax, DWORD PTR _cur$[ebp]
  0008d	ff 50 08	 call	 DWORD PTR [eax+8]
$LN2@ProcessPre:
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 51
  00090	8b 45 f4	 mov	 eax, DWORD PTR _pCon$[ebp]
  00093	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00096	e8 00 00 00 00	 call	 ?PrepareRead@COverlappedRecv@@QAEHXZ ; COverlappedRecv::PrepareRead
$LN4@ProcessPre:
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 166
  0009b	eb 0c		 jmp	 SHORT $LN1@ProcessPre
$LN5@ProcessPre:
; Line 168
  0009d	8b 45 fc	 mov	 eax, DWORD PTR _cur$[ebp]
  000a0	ff 70 10	 push	 DWORD PTR [eax+16]
  000a3	8b 45 fc	 mov	 eax, DWORD PTR _cur$[ebp]
  000a6	ff 50 0c	 call	 DWORD PTR [eax+12]
$LN1@ProcessPre:
; Line 170
  000a9	ff 75 fc	 push	 DWORD PTR _cur$[ebp]
  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	e8 00 00 00 00	 call	 ?Free@CPreConnectPool@@AAEXPAUPRE_CONNECT@@@Z ; CPreConnectPool::Free
; Line 171
  000b4	8b 45 e4	 mov	 eax, DWORD PTR _next$[ebp]
  000b7	89 45 fc	 mov	 DWORD PTR _cur$[ebp], eax
; Line 172
  000ba	e9 5f ff ff ff	 jmp	 $LN7@ProcessPre
$LN6@ProcessPre:
; Line 173
  000bf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c2	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  000c6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c9	83 20 00	 and	 DWORD PTR [eax], 0
; Line 175
  000cc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	83 c0 10	 add	 eax, 16			; 00000010H
  000d2	50		 push	 eax
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
; Line 176
  000d9	33 c0		 xor	 eax, eax
  000db	40		 inc	 eax
; Line 177
  000dc	8b e5		 mov	 esp, ebp
  000de	5d		 pop	 ebp
  000df	c3		 ret	 0
?ProcessPreConnect@CPreConnectPool@@QAEHXZ ENDP		; CPreConnectPool::ProcessPreConnect
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_cur$ = -8						; size = 4
_this$ = -4						; size = 4
_pCon$ = 8						; size = 4
?InsertPreConnect@CPreConnectPool@@QAEHPAUCONNECT_ITEM@@@Z PROC ; CPreConnectPool::InsertPreConnect
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 117
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 119
  0000a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000d	83 c0 10	 add	 eax, 16			; 00000010H
  00010	50		 push	 eax
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 120
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?Alloc@CPreConnectPool@@AAEPAUPRE_CONNECT@@XZ ; CPreConnectPool::Alloc
  0001f	89 45 f8	 mov	 DWORD PTR _cur$[ebp], eax
; Line 122
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	83 38 00	 cmp	 DWORD PTR [eax], 0
  00028	75 13		 jne	 SHORT $LN2@InsertPreC
; Line 123
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _cur$[ebp]
  00030	89 08		 mov	 DWORD PTR [eax], ecx
  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 4d f8	 mov	 ecx, DWORD PTR _cur$[ebp]
  00038	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; Line 124
  0003b	eb 15		 jmp	 SHORT $LN1@InsertPreC
$LN2@InsertPreC:
; Line 126
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00043	8b 4d f8	 mov	 ecx, DWORD PTR _cur$[ebp]
  00046	89 48 14	 mov	 DWORD PTR [eax+20], ecx
; Line 127
  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _cur$[ebp]
  0004f	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN1@InsertPreC:
; Line 131
  00052	6a 05		 push	 5
  00054	59		 pop	 ecx
  00055	8b 75 08	 mov	 esi, DWORD PTR _pCon$[ebp]
  00058	8b 7d f8	 mov	 edi, DWORD PTR _cur$[ebp]
  0005b	f3 a5		 rep movsd
; Line 132
  0005d	8b 45 f8	 mov	 eax, DWORD PTR _cur$[ebp]
  00060	83 60 14 00	 and	 DWORD PTR [eax+20], 0
; Line 134
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	83 c0 10	 add	 eax, 16			; 00000010H
  0006a	50		 push	 eax
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
; Line 136
  00071	33 c0		 xor	 eax, eax
  00073	40		 inc	 eax
; Line 137
  00074	5f		 pop	 edi
  00075	5e		 pop	 esi
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 04 00	 ret	 4
?InsertPreConnect@CPreConnectPool@@QAEHPAUCONNECT_ITEM@@@Z ENDP ; CPreConnectPool::InsertPreConnect
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_prv$ = -24						; size = 4
$T1 = -20						; size = 4
$T2 = -16						; size = 4
_i$3 = -12						; size = 4
_this$ = -8						; size = 4
_cur$ = -4						; size = 4
_dwDefaultItemNum$ = 8					; size = 4
?Initialize@CPreConnectPool@@QAEHK@Z PROC		; CPreConnectPool::Initialize
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 45
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	57		 push	 edi
  00007	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 49
  0000a	6a 1c		 push	 28			; 0000001cH
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	59		 pop	 ecx
  00012	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00015	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d f0	 mov	 ecx, DWORD PTR $T2[ebp]
  0001b	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001e	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00021	89 45 fc	 mov	 DWORD PTR _cur$[ebp], eax
; Line 50
  00024	6a 07		 push	 7
  00026	59		 pop	 ecx
  00027	33 c0		 xor	 eax, eax
  00029	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0002c	8b 7a 08	 mov	 edi, DWORD PTR [edx+8]
  0002f	f3 ab		 rep stosd
; Line 51
  00031	8b 45 fc	 mov	 eax, DWORD PTR _cur$[ebp]
  00034	89 45 e8	 mov	 DWORD PTR _prv$[ebp], eax
; Line 53
  00037	83 65 f4 00	 and	 DWORD PTR _i$3[ebp], 0
  0003b	eb 07		 jmp	 SHORT $LN3@Initialize
$LN2@Initialize:
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _i$3[ebp]
  00040	40		 inc	 eax
  00041	89 45 f4	 mov	 DWORD PTR _i$3[ebp], eax
$LN3@Initialize:
  00044	8b 45 08	 mov	 eax, DWORD PTR _dwDefaultItemNum$[ebp]
  00047	48		 dec	 eax
  00048	39 45 f4	 cmp	 DWORD PTR _i$3[ebp], eax
  0004b	73 2c		 jae	 SHORT $LN1@Initialize
; Line 55
  0004d	6a 1c		 push	 28			; 0000001cH
  0004f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00054	59		 pop	 ecx
  00055	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00058	8b 45 e8	 mov	 eax, DWORD PTR _prv$[ebp]
  0005b	8b 4d ec	 mov	 ecx, DWORD PTR $T1[ebp]
  0005e	89 48 14	 mov	 DWORD PTR [eax+20], ecx
  00061	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00064	89 45 fc	 mov	 DWORD PTR _cur$[ebp], eax
; Line 56
  00067	6a 07		 push	 7
  00069	59		 pop	 ecx
  0006a	33 c0		 xor	 eax, eax
  0006c	8b 7d fc	 mov	 edi, DWORD PTR _cur$[ebp]
  0006f	f3 ab		 rep stosd
; Line 57
  00071	8b 45 fc	 mov	 eax, DWORD PTR _cur$[ebp]
  00074	89 45 e8	 mov	 DWORD PTR _prv$[ebp], eax
; Line 59
  00077	eb c4		 jmp	 SHORT $LN2@Initialize
$LN1@Initialize:
; Line 60
  00079	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR _cur$[ebp]
  0007f	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
; Line 61
  00082	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _dwDefaultItemNum$[ebp]
  00088	89 48 28	 mov	 DWORD PTR [eax+40], ecx
; Line 63
  0008b	33 c0		 xor	 eax, eax
  0008d	40		 inc	 eax
; Line 64
  0008e	5f		 pop	 edi
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c2 04 00	 ret	 4
?Initialize@CPreConnectPool@@QAEHK@Z ENDP		; CPreConnectPool::Initialize
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
$T1 = -16						; size = 4
_next$ = -12						; size = 4
_this$ = -8						; size = 4
_cur$ = -4						; size = 4
?FreeAll@CPreConnectPool@@AAEXXZ PROC			; CPreConnectPool::FreeAll
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 183
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	50		 push	 eax
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 185
  00016	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 00		 mov	 eax, DWORD PTR [eax]
  0001b	89 45 fc	 mov	 DWORD PTR _cur$[ebp], eax
$LN4@FreeAll:
; Line 187
  0001e	83 7d fc 00	 cmp	 DWORD PTR _cur$[ebp], 0
  00022	74 16		 je	 SHORT $LN3@FreeAll
; Line 189
  00024	8b 45 fc	 mov	 eax, DWORD PTR _cur$[ebp]
  00027	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  0002a	89 45 f4	 mov	 DWORD PTR _next$[ebp], eax
; Line 190
  0002d	ff 75 fc	 push	 DWORD PTR _cur$[ebp]
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?Free@CPreConnectPool@@AAEXPAUPRE_CONNECT@@@Z ; CPreConnectPool::Free
; Line 193
  00038	eb e4		 jmp	 SHORT $LN4@FreeAll
$LN3@FreeAll:
; Line 194
  0003a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 20 00	 and	 DWORD PTR [eax], 0
; Line 196
  00047	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0004d	89 45 fc	 mov	 DWORD PTR _cur$[ebp], eax
$LN2@FreeAll:
; Line 197
  00050	83 7d fc 00	 cmp	 DWORD PTR _cur$[ebp], 0
  00054	74 2f		 je	 SHORT $LN1@FreeAll
; Line 199
  00056	8b 45 fc	 mov	 eax, DWORD PTR _cur$[ebp]
  00059	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  0005c	89 45 f4	 mov	 DWORD PTR _next$[ebp], eax
; Line 200
  0005f	ff 75 fc	 push	 DWORD PTR _cur$[ebp]
  00062	68 00 00 00 00	 push	 OFFSET $SG91767
  00067	e8 00 00 00 00	 call	 _printf
  0006c	59		 pop	 ecx
  0006d	59		 pop	 ecx
; Line 201
  0006e	8b 45 fc	 mov	 eax, DWORD PTR _cur$[ebp]
  00071	89 45 f0	 mov	 DWORD PTR $T1[ebp], eax
  00074	ff 75 f0	 push	 DWORD PTR $T1[ebp]
  00077	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0007c	59		 pop	 ecx
; Line 202
  0007d	8b 45 f4	 mov	 eax, DWORD PTR _next$[ebp]
  00080	89 45 fc	 mov	 DWORD PTR _cur$[ebp], eax
; Line 203
  00083	eb cb		 jmp	 SHORT $LN2@FreeAll
$LN1@FreeAll:
; Line 205
  00085	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00088	83 c0 10	 add	 eax, 16			; 00000010H
  0008b	50		 push	 eax
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
; Line 208
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
?FreeAll@CPreConnectPool@@AAEXXZ ENDP			; CPreConnectPool::FreeAll
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_pNext$ = -8						; size = 4
_this$ = -4						; size = 4
_pCon$ = 8						; size = 4
?Free@CPreConnectPool@@AAEXPAUPRE_CONNECT@@@Z PROC	; CPreConnectPool::Free
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 96
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	57		 push	 edi
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 97
  00009	83 65 f8 00	 and	 DWORD PTR _pNext$[ebp], 0
; Line 98
  0000d	6a 07		 push	 7
  0000f	59		 pop	 ecx
  00010	33 c0		 xor	 eax, eax
  00012	8b 7d 08	 mov	 edi, DWORD PTR _pCon$[ebp]
  00015	f3 ab		 rep stosd
; Line 99
  00017	83 7d 08 00	 cmp	 DWORD PTR _pCon$[ebp], 0
  0001b	74 53		 je	 SHORT $LN4@Free
; Line 101
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00023	40		 inc	 eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 102
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  00030	48		 dec	 eax
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	89 41 2c	 mov	 DWORD PTR [ecx+44], eax
; Line 104
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0003e	75 14		 jne	 SHORT $LN2@Free
; Line 106
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	8b 4d 08	 mov	 ecx, DWORD PTR _pCon$[ebp]
  00046	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _pCon$[ebp]
  0004f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 108
  00052	eb 1c		 jmp	 SHORT $LN4@Free
$LN2@Free:
; Line 110
  00054	8b 45 08	 mov	 eax, DWORD PTR _pCon$[ebp]
  00057	83 60 14 00	 and	 DWORD PTR [eax+20], 0
; Line 111
  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00061	8b 4d 08	 mov	 ecx, DWORD PTR _pCon$[ebp]
  00064	89 48 14	 mov	 DWORD PTR [eax+20], ecx
; Line 112
  00067	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	8b 4d 08	 mov	 ecx, DWORD PTR _pCon$[ebp]
  0006d	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
$LN4@Free:
; Line 115
  00070	5f		 pop	 edi
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 04 00	 ret	 4
?Free@CPreConnectPool@@AAEXPAUPRE_CONNECT@@@Z ENDP	; CPreConnectPool::Free
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_pCon$ = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
?Alloc@CPreConnectPool@@AAEPAUPRE_CONNECT@@XZ PROC	; CPreConnectPool::Alloc
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 67
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	57		 push	 edi
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$lb_start$6:
; Line 71
  0000a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000d	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00011	74 52		 je	 SHORT $LN3@Alloc
; Line 73
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00019	89 45 f4	 mov	 DWORD PTR _pCon$[ebp], eax
; Line 74
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00028	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 75
  0002b	8b 45 f4	 mov	 eax, DWORD PTR _pCon$[ebp]
  0002e	83 60 14 00	 and	 DWORD PTR [eax+20], 0
; Line 76
  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00038	48		 dec	 eax
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 77
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	83 78 28 00	 cmp	 DWORD PTR [eax+40], 0
  00046	75 0e		 jne	 SHORT $LN2@Alloc
; Line 79
  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	83 60 0c 00	 and	 DWORD PTR [eax+12], 0
; Line 80
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	83 60 08 00	 and	 DWORD PTR [eax+8], 0
$LN2@Alloc:
; Line 83
  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  0005c	40		 inc	 eax
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	89 41 2c	 mov	 DWORD PTR [ecx+44], eax
; Line 85
  00063	eb 3c		 jmp	 SHORT $LN1@Alloc
$LN3@Alloc:
; Line 87
  00065	6a 1c		 push	 28			; 0000001cH
  00067	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0006c	59		 pop	 ecx
  0006d	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00076	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00079	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  0007f	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
; Line 88
  00082	6a 07		 push	 7
  00084	59		 pop	 ecx
  00085	33 c0		 xor	 eax, eax
  00087	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008a	8b 7a 08	 mov	 edi, DWORD PTR [edx+8]
  0008d	f3 ab		 rep stosd
; Line 89
  0008f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00095	40		 inc	 eax
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 90
  0009c	e9 69 ff ff ff	 jmp	 $lb_start$6
$LN1@Alloc:
; Line 92
  000a1	8b 45 f4	 mov	 eax, DWORD PTR _pCon$[ebp]
; Line 94
  000a4	5f		 pop	 edi
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c3		 ret	 0
?Alloc@CPreConnectPool@@AAEPAUPRE_CONNECT@@XZ ENDP	; CPreConnectPool::Alloc
_TEXT	ENDS
END
