; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	E:\GitHub\Mso_Code\4DyuchiNET_Latest\cpio.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_hCompletionPort@@3PAXA			; g_hCompletionPort
PUBLIC	?dwWorkThreadNum@@3KA				; dwWorkThreadNum
PUBLIC	?g_hWorkerThread@@3PAPAXA			; g_hWorkerThread
PUBLIC	?g_pWsaBuf@@3PAPAU_WSABUF@@A			; g_pWsaBuf
PUBLIC	?endcount@@3KA					; endcount
_BSS	SEGMENT
?g_hCompletionPort@@3PAXA DD 01H DUP (?)		; g_hCompletionPort
?dwWorkThreadNum@@3KA DD 01H DUP (?)			; dwWorkThreadNum
?g_hWorkerThread@@3PAPAXA DD 040H DUP (?)		; g_hWorkerThread
?g_pWsaBuf@@3PAPAU_WSABUF@@A DD 040H DUP (?)		; g_pWsaBuf
?endcount@@3KA DD 01H DUP (?)				; endcount
_BSS	ENDS
CONST	SEGMENT
$SG92249 DB	'MainMsgQue Overflow', 00H
$SG92250 DB	'MainMsgQue Overflow', 00H
$SG92140 DB	'Error', 00H
	ORG $+2
$SG92141 DB	'CreateIoCompletionPort failed with error', 00H
	ORG $+3
$SG92157 DB	'Error', 00H
	ORG $+2
$SG92158 DB	'Fail to Create WorkerThread', 00H
CONST	ENDS
PUBLIC	?InitCompletionIO@@YAHKPAX@Z			; InitCompletionIO
PUBLIC	?CloseComplitionIO@@YAXXZ			; CloseComplitionIO
PUBLIC	?CleanSocket@@YAXXZ				; CleanSocket
PUBLIC	?InitSocket@@YAXXZ				; InitSocket
PUBLIC	?GetWorkerThreadNum@@YAKXZ			; GetWorkerThreadNum
PUBLIC	?PostDisconnectEvent@@YAXK@Z			; PostDisconnectEvent
PUBLIC	?ServerWorkerThread@@YGIPAX@Z			; ServerWorkerThread
PUBLIC	?ServerWorkerThreadLog@@YGIPAX@Z		; ServerWorkerThreadLog
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__CreateIoCompletionPort@16:PROC
EXTRN	__imp__GetQueuedCompletionStatus@20:PROC
EXTRN	__imp__PostQueuedCompletionStatus@16:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__SetEvent@4:PROC
EXTRN	__imp__GetSystemInfo@4:PROC
EXTRN	__imp__WaitForMultipleObjects@16:PROC
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	__imp__GetActiveWindow@0:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	__imp__WSAStartup@8:PROC
EXTRN	__imp__WSACleanup@0:PROC
EXTRN	?PushMsg@@YAHPAVCMsgQue@@KPAU_WSABUF@@KKKPAK@Z:PROC ; PushMsg
EXTRN	?Initialize@CQueManager@@QAEXKPAX@Z:PROC	; CQueManager::Initialize
EXTRN	??0CQueManager@@QAE@XZ:PROC			; CQueManager::CQueManager
EXTRN	?OnWrite@CWriteMemoryHandle@@QAEXK@Z:PROC	; CWriteMemoryHandle::OnWrite
EXTRN	?OnRead@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z:PROC ; CReadMemoryHandle::OnRead
EXTRN	?ResetMemory@CReadMemoryHandle@@QAEXXZ:PROC	; CReadMemoryHandle::ResetMemory
EXTRN	?PrepareRead@COverlappedRecv@@QAEHXZ:PROC	; COverlappedRecv::PrepareRead
EXTRN	?SendBuffer@COverlappedSend@@QAEHXZ:PROC	; COverlappedSend::SendBuffer
EXTRN	?StartSwitchQueThread@@YAHPAXK@Z:PROC		; StartSwitchQueThread
EXTRN	?WriteLog@CLogManager@@QAEHPADK@Z:PROC		; CLogManager::WriteLog
EXTRN	__beginthreadex:PROC
EXTRN	__endthreadex:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	?g_pQueManager@@3PAVCQueManager@@A:DWORD	; g_pQueManager
EXTRN	?g_hEventMustSwitch@@3PAPAXA:QWORD		; g_hEventMustSwitch
EXTRN	?g_csSwitchQue@@3PAU_RTL_CRITICAL_SECTION@@A:BYTE ; g_csSwitchQue
EXTRN	?g_pLogManager@@3PAVCLogManager@@A:DWORD	; g_pLogManager
EXTRN	___security_cookie:DWORD
xdata$x	SEGMENT
__unwindtable$?InitCompletionIO@@YAHKPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCompletionIO@@YAHKPAX@Z$0
__ehfuncinfo$?InitCompletionIO@@YAHKPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InitCompletionIO@@YAHKPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_pMsgQue$ = -88						; size = 4
_this$ = -84						; size = 4
$T1 = -80						; size = 4
_this$ = -76						; size = 4
_dwLength$ = -72					; size = 4
_this$ = -68						; size = 4
_this$ = -64						; size = 4
$T2 = -60						; size = 4
_this$ = -56						; size = 4
_dwSize$ = -52						; size = 4
_dwBufNum$ = -48					; size = 4
$T3 = -44						; size = 4
_this$ = -40						; size = 4
_pBuf$ = -36						; size = 4
_dwTotalMsgBytes$ = -32					; size = 4
_bResult$ = -28						; size = 4
_dwTotalMsgNum$ = -24					; size = 4
_BytesTransferred$ = -20				; size = 4
_dwQueMsgNum$ = -16					; size = 4
_dwWorkIndex$ = -12					; size = 4
_dwHeader$ = -8						; size = 4
_pIO$ = -4						; size = 4
_lpVoid$ = 8						; size = 4
?ServerWorkerThreadLog@@YGIPAX@Z PROC			; ServerWorkerThreadLog
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
; Line 244
  00006	c7 45 d0 e8 03
	00 00		 mov	 DWORD PTR _dwBufNum$[ebp], 1000 ; 000003e8H
; Line 247
  0000d	83 65 e8 00	 and	 DWORD PTR _dwTotalMsgNum$[ebp], 0
; Line 248
  00011	83 65 e0 00	 and	 DWORD PTR _dwTotalMsgBytes$[ebp], 0
; Line 249
  00015	8b 45 08	 mov	 eax, DWORD PTR _lpVoid$[ebp]
  00018	89 45 f4	 mov	 DWORD PTR _dwWorkIndex$[ebp], eax
; Line 250
  0001b	8b 45 f4	 mov	 eax, DWORD PTR _dwWorkIndex$[ebp]
  0001e	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?g_pWsaBuf@@3PAPAU_WSABUF@@A[eax*4]
  00025	89 45 dc	 mov	 DWORD PTR _pBuf$[ebp], eax
; Line 251
  00028	83 65 e4 00	 and	 DWORD PTR _bResult$[ebp], 0
; Line 252
  0002c	83 65 ec 00	 and	 DWORD PTR _BytesTransferred$[ebp], 0
; File e:\github\mso_code\4dyuchinet_latest\quemanager.h
; Line 19
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pQueManager@@3PAVCQueManager@@A ; g_pQueManager
  00035	8b 00		 mov	 eax, DWORD PTR [eax]
  00037	89 45 a8	 mov	 DWORD PTR _pMsgQue$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 256
  0003a	83 65 f0 00	 and	 DWORD PTR _dwQueMsgNum$[ebp], 0
$LN24@ServerWork:
; Line 262
  0003e	33 c0		 xor	 eax, eax
  00040	40		 inc	 eax
  00041	0f 84 78 02 00
	00		 je	 $seg_destroy$63
; Line 266
  00047	6a ff		 push	 -1
  00049	8d 45 fc	 lea	 eax, DWORD PTR _pIO$[ebp]
  0004c	50		 push	 eax
  0004d	8d 45 f8	 lea	 eax, DWORD PTR _dwHeader$[ebp]
  00050	50		 push	 eax
  00051	8d 45 ec	 lea	 eax, DWORD PTR _BytesTransferred$[ebp]
  00054	50		 push	 eax
  00055	ff 35 00 00 00
	00		 push	 DWORD PTR ?g_hCompletionPort@@3PAXA ; g_hCompletionPort
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetQueuedCompletionStatus@20
  00061	85 c0		 test	 eax, eax
  00063	75 15		 jne	 SHORT $LN29@ServerWork
; Line 268
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0006b	83 f8 40	 cmp	 eax, 64			; 00000040H
  0006e	74 0a		 je	 SHORT $LN29@ServerWork
; Line 269
  00070	e9 41 02 00 00	 jmp	 $seg_lp$64
  00075	e9 3c 02 00 00	 jmp	 $seg_lp$64
$LN29@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 23
  0007a	8b 45 f8	 mov	 eax, DWORD PTR _dwHeader$[ebp]
  0007d	25 00 00 00 70	 and	 eax, 1879048192		; 70000000H
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 278
  00082	3d 00 00 00 30	 cmp	 eax, 805306368		; 30000000H
  00087	75 0a		 jne	 SHORT $LN19@ServerWork
; Line 279
  00089	e9 31 02 00 00	 jmp	 $seg_destroy$63
  0008e	e9 2c 02 00 00	 jmp	 $seg_destroy$63
$LN19@ServerWork:
; Line 281
  00093	83 7d ec 00	 cmp	 DWORD PTR _BytesTransferred$[ebp], 0
  00097	74 0f		 je	 SHORT $LN16@ServerWork
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 23
  00099	8b 45 f8	 mov	 eax, DWORD PTR _dwHeader$[ebp]
  0009c	25 00 00 00 70	 and	 eax, 1879048192		; 70000000H
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 281
  000a1	3d 00 00 00 20	 cmp	 eax, 536870912		; 20000000H
  000a6	75 7f		 jne	 SHORT $LN17@ServerWork
$LN16@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 21
  000a8	8b 45 f8	 mov	 eax, DWORD PTR _dwHeader$[ebp]
  000ab	25 ff ff ff 8f	 and	 eax, -1879048193	; 8fffffffH
  000b0	89 45 f8	 mov	 DWORD PTR _dwHeader$[ebp], eax
  000b3	8b 45 f8	 mov	 eax, DWORD PTR _dwHeader$[ebp]
  000b6	0d 00 00 00 20	 or	 eax, 536870912		; 20000000H
  000bb	89 45 f8	 mov	 DWORD PTR _dwHeader$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 286
  000be	6b 45 f4 18	 imul	 eax, DWORD PTR _dwWorkIndex$[ebp], 24
  000c2	05 00 00 00 00	 add	 eax, OFFSET ?g_csSwitchQue@@3PAU_RTL_CRITICAL_SECTION@@A ; g_csSwitchQue
  000c7	50		 push	 eax
  000c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; File e:\github\mso_code\4dyuchinet_latest\quemanager.h
; Line 19
  000ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pQueManager@@3PAVCQueManager@@A ; g_pQueManager
  000d3	8b 00		 mov	 eax, DWORD PTR [eax]
  000d5	89 45 d4	 mov	 DWORD PTR $T3[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 296
  000d8	8d 45 f0	 lea	 eax, DWORD PTR _dwQueMsgNum$[ebp]
  000db	50		 push	 eax
  000dc	6a 00		 push	 0
  000de	6a 00		 push	 0
  000e0	6a 01		 push	 1
  000e2	6a 00		 push	 0
  000e4	ff 75 f8	 push	 DWORD PTR _dwHeader$[ebp]
  000e7	ff 75 d4	 push	 DWORD PTR $T3[ebp]
  000ea	e8 00 00 00 00	 call	 ?PushMsg@@YAHPAVCMsgQue@@KPAU_WSABUF@@KKKPAK@Z ; PushMsg
  000ef	83 c4 1c	 add	 esp, 28			; 0000001cH
  000f2	89 45 e4	 mov	 DWORD PTR _bResult$[ebp], eax
; Line 298
  000f5	6b 45 f4 18	 imul	 eax, DWORD PTR _dwWorkIndex$[ebp], 24
  000f9	05 00 00 00 00	 add	 eax, OFFSET ?g_csSwitchQue@@3PAU_RTL_CRITICAL_SECTION@@A ; g_csSwitchQue
  000fe	50		 push	 eax
  000ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
; Line 299
  00105	83 7d f0 00	 cmp	 DWORD PTR _dwQueMsgNum$[ebp], 0
  00109	74 12		 je	 SHORT $LN15@ServerWork
; Line 300
  0010b	6a 04		 push	 4
  0010d	58		 pop	 eax
  0010e	6b c0 00	 imul	 eax, eax, 0
  00111	ff b0 00 00 00
	00		 push	 DWORD PTR ?g_hEventMustSwitch@@3PAPAXA[eax]
  00117	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
$LN15@ServerWork:
; Line 302
  0011d	e9 94 01 00 00	 jmp	 $seg_lp$64
  00122	e9 8f 01 00 00	 jmp	 $seg_lp$64
$LN17@ServerWork:
; Line 305
  00127	83 7d fc 00	 cmp	 DWORD PTR _pIO$[ebp], 0
  0012b	75 0a		 jne	 SHORT $LN37@ServerWork
; Line 306
  0012d	e9 84 01 00 00	 jmp	 $seg_lp$64
  00132	e9 7f 01 00 00	 jmp	 $seg_lp$64
$LN37@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 23
  00137	8b 45 f8	 mov	 eax, DWORD PTR _dwHeader$[ebp]
  0013a	25 00 00 00 70	 and	 eax, 1879048192		; 70000000H
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 308
  0013f	0f 85 71 01 00
	00		 jne	 $seg_lp$64
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 76
  00145	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  00148	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  0014b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 315
  00150	83 f8 02	 cmp	 eax, 2
  00153	0f 85 da 00 00
	00		 jne	 $LN47@ServerWork
; Line 317
  00159	8b 45 ec	 mov	 eax, DWORD PTR _BytesTransferred$[ebp]
  0015c	89 45 cc	 mov	 DWORD PTR _dwSize$[ebp], eax
  0015f	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  00162	89 45 c8	 mov	 DWORD PTR _this$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\overlapped_recv.h
; Line 17
  00165	8d 45 e8	 lea	 eax, DWORD PTR _dwTotalMsgNum$[ebp]
  00168	50		 push	 eax
  00169	8d 45 e0	 lea	 eax, DWORD PTR _dwTotalMsgBytes$[ebp]
  0016c	50		 push	 eax
  0016d	ff 75 d0	 push	 DWORD PTR _dwBufNum$[ebp]
  00170	ff 75 dc	 push	 DWORD PTR _pBuf$[ebp]
  00173	ff 75 cc	 push	 DWORD PTR _dwSize$[ebp]
  00176	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00179	83 c1 30	 add	 ecx, 48			; 00000030H
  0017c	e8 00 00 00 00	 call	 ?OnRead@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z ; CReadMemoryHandle::OnRead
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 319
  00181	83 7d e8 00	 cmp	 DWORD PTR _dwTotalMsgNum$[ebp], 0
  00185	74 6c		 je	 SHORT $LN9@ServerWork
; Line 322
  00187	6b 45 f4 18	 imul	 eax, DWORD PTR _dwWorkIndex$[ebp], 24
  0018b	05 00 00 00 00	 add	 eax, OFFSET ?g_csSwitchQue@@3PAU_RTL_CRITICAL_SECTION@@A ; g_csSwitchQue
  00190	50		 push	 eax
  00191	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; File e:\github\mso_code\4dyuchinet_latest\quemanager.h
; Line 19
  00197	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pQueManager@@3PAVCQueManager@@A ; g_pQueManager
  0019c	8b 00		 mov	 eax, DWORD PTR [eax]
  0019e	89 45 c4	 mov	 DWORD PTR $T2[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 331
  001a1	8d 45 f0	 lea	 eax, DWORD PTR _dwQueMsgNum$[ebp]
  001a4	50		 push	 eax
  001a5	6a 00		 push	 0
  001a7	ff 75 e0	 push	 DWORD PTR _dwTotalMsgBytes$[ebp]
  001aa	ff 75 e8	 push	 DWORD PTR _dwTotalMsgNum$[ebp]
  001ad	ff 75 dc	 push	 DWORD PTR _pBuf$[ebp]
  001b0	ff 75 f8	 push	 DWORD PTR _dwHeader$[ebp]
  001b3	ff 75 c4	 push	 DWORD PTR $T2[ebp]
  001b6	e8 00 00 00 00	 call	 ?PushMsg@@YAHPAVCMsgQue@@KPAU_WSABUF@@KKKPAK@Z ; PushMsg
  001bb	83 c4 1c	 add	 esp, 28			; 0000001cH
  001be	89 45 e4	 mov	 DWORD PTR _bResult$[ebp], eax
; Line 333
  001c1	6b 45 f4 18	 imul	 eax, DWORD PTR _dwWorkIndex$[ebp], 24
  001c5	05 00 00 00 00	 add	 eax, OFFSET ?g_csSwitchQue@@3PAU_RTL_CRITICAL_SECTION@@A ; g_csSwitchQue
  001ca	50		 push	 eax
  001cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
; Line 335
  001d1	83 7d e4 00	 cmp	 DWORD PTR _bResult$[ebp], 0
  001d5	75 1c		 jne	 SHORT $LN9@ServerWork
; Line 337
  001d7	68 00 00 00 00	 push	 OFFSET $SG92249
  001dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  001e2	50		 push	 eax
  001e3	68 00 00 00 00	 push	 OFFSET $SG92250
  001e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pLogManager@@3PAVCLogManager@@A ; g_pLogManager
  001ee	e8 00 00 00 00	 call	 ?WriteLog@CLogManager@@QAEHPADK@Z ; CLogManager::WriteLog
$LN9@ServerWork:
; Line 342
  001f3	83 7d f0 00	 cmp	 DWORD PTR _dwQueMsgNum$[ebp], 0
  001f7	74 12		 je	 SHORT $LN7@ServerWork
; Line 343
  001f9	6a 04		 push	 4
  001fb	58		 pop	 eax
  001fc	6b c0 00	 imul	 eax, eax, 0
  001ff	ff b0 00 00 00
	00		 push	 DWORD PTR ?g_hEventMustSwitch@@3PAPAXA[eax]
  00205	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
$LN7@ServerWork:
; Line 345
  0020b	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  0020e	89 45 c0	 mov	 DWORD PTR _this$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\overlapped_recv.h
; Line 14
  00211	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00214	83 c1 30	 add	 ecx, 48			; 00000030H
  00217	e8 00 00 00 00	 call	 ?ResetMemory@CReadMemoryHandle@@QAEXXZ ; CReadMemoryHandle::ResetMemory
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 346
  0021c	8b 4d fc	 mov	 ecx, DWORD PTR _pIO$[ebp]
  0021f	e8 00 00 00 00	 call	 ?PrepareRead@COverlappedRecv@@QAEHXZ ; COverlappedRecv::PrepareRead
; Line 347
  00224	e9 8d 00 00 00	 jmp	 $seg_lp$64
  00229	e9 88 00 00 00	 jmp	 $seg_lp$64
; Line 350
  0022e	e9 83 00 00 00	 jmp	 $seg_lp$64
$LN47@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 76
  00233	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  00236	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00239	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 350
  0023e	83 f8 01	 cmp	 eax, 1
  00241	75 73		 jne	 SHORT $seg_lp$64
; Line 355
  00243	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  00246	89 45 bc	 mov	 DWORD PTR _this$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 16
  00249	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  0024c	83 c0 50	 add	 eax, 80			; 00000050H
  0024f	50		 push	 eax
  00250	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 356
  00256	8b 45 ec	 mov	 eax, DWORD PTR _BytesTransferred$[ebp]
  00259	89 45 b8	 mov	 DWORD PTR _dwLength$[ebp], eax
  0025c	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  0025f	89 45 b4	 mov	 DWORD PTR _this$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 20
  00262	ff 75 b8	 push	 DWORD PTR _dwLength$[ebp]
  00265	8b 4d b4	 mov	 ecx, DWORD PTR _this$[ebp]
  00268	83 c1 30	 add	 ecx, 48			; 00000030H
  0026b	e8 00 00 00 00	 call	 ?OnWrite@CWriteMemoryHandle@@QAEXK@Z ; CWriteMemoryHandle::OnWrite
; File e:\github\mso_code\4dyuchinet_latest\write_memory_handle.h
; Line 24
  00270	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  00273	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  00276	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 358
  00279	83 7d b0 00	 cmp	 DWORD PTR $T1[ebp], 0
  0027d	74 0a		 je	 SHORT $LN3@ServerWork
; Line 359
  0027f	8b 4d fc	 mov	 ecx, DWORD PTR _pIO$[ebp]
  00282	e8 00 00 00 00	 call	 ?SendBuffer@COverlappedSend@@QAEHXZ ; COverlappedSend::SendBuffer
; Line 361
  00287	eb 1a		 jmp	 SHORT $LN2@ServerWork
$LN3@ServerWork:
; Line 362
  00289	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  0028c	89 45 d8	 mov	 DWORD PTR _this$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 75
  0028f	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  00292	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00295	25 00 ff ff ff	 and	 eax, -256		; ffffff00H
  0029a	83 c8 03	 or	 eax, 3
  0029d	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a0	89 41 14	 mov	 DWORD PTR [ecx+20], eax
$LN2@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 364
  002a3	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  002a6	89 45 ac	 mov	 DWORD PTR _this$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 17
  002a9	8b 45 ac	 mov	 eax, DWORD PTR _this$[ebp]
  002ac	83 c0 50	 add	 eax, 80			; 00000050H
  002af	50		 push	 eax
  002b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
$seg_lp$64:
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 20
  002b6	83 65 f8 00	 and	 DWORD PTR _dwHeader$[ebp], 0
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 370
  002ba	e9 7f fd ff ff	 jmp	 $LN24@ServerWork
$seg_destroy$63:
; Line 372
  002bf	6a 00		 push	 0
  002c1	e8 00 00 00 00	 call	 __endthreadex
  002c6	59		 pop	 ecx
; Line 374
  002c7	33 c0		 xor	 eax, eax
; Line 375
  002c9	8b e5		 mov	 esp, ebp
  002cb	5d		 pop	 ebp
  002cc	c2 04 00	 ret	 4
?ServerWorkerThreadLog@@YGIPAX@Z ENDP			; ServerWorkerThreadLog
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_pMsgQue$ = -88						; size = 4
_this$ = -84						; size = 4
$T1 = -80						; size = 4
_this$ = -76						; size = 4
_dwLength$ = -72					; size = 4
_this$ = -68						; size = 4
_this$ = -64						; size = 4
$T2 = -60						; size = 4
_this$ = -56						; size = 4
_dwSize$ = -52						; size = 4
_dwBufNum$ = -48					; size = 4
$T3 = -44						; size = 4
_this$ = -40						; size = 4
_bResult$ = -36						; size = 4
_pBuf$ = -32						; size = 4
_dwTotalMsgBytes$ = -28					; size = 4
_dwTotalMsgNum$ = -24					; size = 4
_BytesTransferred$ = -20				; size = 4
_dwQueMsgNum$ = -16					; size = 4
_dwWorkIndex$ = -12					; size = 4
_dwHeader$ = -8						; size = 4
_pIO$ = -4						; size = 4
_lpVoid$ = 8						; size = 4
?ServerWorkerThread@@YGIPAX@Z PROC			; ServerWorkerThread
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 114
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
; Line 115
  00006	c7 45 d0 e8 03
	00 00		 mov	 DWORD PTR _dwBufNum$[ebp], 1000 ; 000003e8H
; Line 118
  0000d	83 65 e8 00	 and	 DWORD PTR _dwTotalMsgNum$[ebp], 0
; Line 119
  00011	83 65 e4 00	 and	 DWORD PTR _dwTotalMsgBytes$[ebp], 0
; Line 120
  00015	8b 45 08	 mov	 eax, DWORD PTR _lpVoid$[ebp]
  00018	89 45 f4	 mov	 DWORD PTR _dwWorkIndex$[ebp], eax
; Line 121
  0001b	8b 45 f4	 mov	 eax, DWORD PTR _dwWorkIndex$[ebp]
  0001e	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?g_pWsaBuf@@3PAPAU_WSABUF@@A[eax*4]
  00025	89 45 e0	 mov	 DWORD PTR _pBuf$[ebp], eax
; Line 122
  00028	83 65 dc 00	 and	 DWORD PTR _bResult$[ebp], 0
; Line 123
  0002c	83 65 ec 00	 and	 DWORD PTR _BytesTransferred$[ebp], 0
; File e:\github\mso_code\4dyuchinet_latest\quemanager.h
; Line 19
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pQueManager@@3PAVCQueManager@@A ; g_pQueManager
  00035	8b 00		 mov	 eax, DWORD PTR [eax]
  00037	89 45 a8	 mov	 DWORD PTR _pMsgQue$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 127
  0003a	83 65 f0 00	 and	 DWORD PTR _dwQueMsgNum$[ebp], 0
$LN23@ServerWork:
; Line 132
  0003e	33 c0		 xor	 eax, eax
  00040	40		 inc	 eax
  00041	0f 84 56 02 00
	00		 je	 $seg_destroy$62
; Line 136
  00047	6a ff		 push	 -1
  00049	8d 45 fc	 lea	 eax, DWORD PTR _pIO$[ebp]
  0004c	50		 push	 eax
  0004d	8d 45 f8	 lea	 eax, DWORD PTR _dwHeader$[ebp]
  00050	50		 push	 eax
  00051	8d 45 ec	 lea	 eax, DWORD PTR _BytesTransferred$[ebp]
  00054	50		 push	 eax
  00055	ff 35 00 00 00
	00		 push	 DWORD PTR ?g_hCompletionPort@@3PAXA ; g_hCompletionPort
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetQueuedCompletionStatus@20
  00061	85 c0		 test	 eax, eax
  00063	75 15		 jne	 SHORT $LN28@ServerWork
; Line 138
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0006b	83 f8 40	 cmp	 eax, 64			; 00000040H
  0006e	74 0a		 je	 SHORT $LN28@ServerWork
; Line 139
  00070	e9 1f 02 00 00	 jmp	 $seg_lp$63
  00075	e9 1a 02 00 00	 jmp	 $seg_lp$63
$LN28@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 23
  0007a	8b 45 f8	 mov	 eax, DWORD PTR _dwHeader$[ebp]
  0007d	25 00 00 00 70	 and	 eax, 1879048192		; 70000000H
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 149
  00082	3d 00 00 00 30	 cmp	 eax, 805306368		; 30000000H
  00087	75 0a		 jne	 SHORT $LN18@ServerWork
; Line 150
  00089	e9 0f 02 00 00	 jmp	 $seg_destroy$62
  0008e	e9 0a 02 00 00	 jmp	 $seg_destroy$62
$LN18@ServerWork:
; Line 152
  00093	83 7d ec 00	 cmp	 DWORD PTR _BytesTransferred$[ebp], 0
  00097	74 0f		 je	 SHORT $LN15@ServerWork
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 23
  00099	8b 45 f8	 mov	 eax, DWORD PTR _dwHeader$[ebp]
  0009c	25 00 00 00 70	 and	 eax, 1879048192		; 70000000H
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 152
  000a1	3d 00 00 00 20	 cmp	 eax, 536870912		; 20000000H
  000a6	75 7f		 jne	 SHORT $LN16@ServerWork
$LN15@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 21
  000a8	8b 45 f8	 mov	 eax, DWORD PTR _dwHeader$[ebp]
  000ab	25 ff ff ff 8f	 and	 eax, -1879048193	; 8fffffffH
  000b0	89 45 f8	 mov	 DWORD PTR _dwHeader$[ebp], eax
  000b3	8b 45 f8	 mov	 eax, DWORD PTR _dwHeader$[ebp]
  000b6	0d 00 00 00 20	 or	 eax, 536870912		; 20000000H
  000bb	89 45 f8	 mov	 DWORD PTR _dwHeader$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 157
  000be	6b 45 f4 18	 imul	 eax, DWORD PTR _dwWorkIndex$[ebp], 24
  000c2	05 00 00 00 00	 add	 eax, OFFSET ?g_csSwitchQue@@3PAU_RTL_CRITICAL_SECTION@@A ; g_csSwitchQue
  000c7	50		 push	 eax
  000c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; File e:\github\mso_code\4dyuchinet_latest\quemanager.h
; Line 19
  000ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pQueManager@@3PAVCQueManager@@A ; g_pQueManager
  000d3	8b 00		 mov	 eax, DWORD PTR [eax]
  000d5	89 45 d4	 mov	 DWORD PTR $T3[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 167
  000d8	8d 45 f0	 lea	 eax, DWORD PTR _dwQueMsgNum$[ebp]
  000db	50		 push	 eax
  000dc	6a 00		 push	 0
  000de	6a 00		 push	 0
  000e0	6a 01		 push	 1
  000e2	6a 00		 push	 0
  000e4	ff 75 f8	 push	 DWORD PTR _dwHeader$[ebp]
  000e7	ff 75 d4	 push	 DWORD PTR $T3[ebp]
  000ea	e8 00 00 00 00	 call	 ?PushMsg@@YAHPAVCMsgQue@@KPAU_WSABUF@@KKKPAK@Z ; PushMsg
  000ef	83 c4 1c	 add	 esp, 28			; 0000001cH
  000f2	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax
; Line 169
  000f5	6b 45 f4 18	 imul	 eax, DWORD PTR _dwWorkIndex$[ebp], 24
  000f9	05 00 00 00 00	 add	 eax, OFFSET ?g_csSwitchQue@@3PAU_RTL_CRITICAL_SECTION@@A ; g_csSwitchQue
  000fe	50		 push	 eax
  000ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
; Line 170
  00105	83 7d f0 00	 cmp	 DWORD PTR _dwQueMsgNum$[ebp], 0
  00109	74 12		 je	 SHORT $LN14@ServerWork
; Line 171
  0010b	6a 04		 push	 4
  0010d	58		 pop	 eax
  0010e	6b c0 00	 imul	 eax, eax, 0
  00111	ff b0 00 00 00
	00		 push	 DWORD PTR ?g_hEventMustSwitch@@3PAPAXA[eax]
  00117	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
$LN14@ServerWork:
; Line 173
  0011d	e9 72 01 00 00	 jmp	 $seg_lp$63
  00122	e9 6d 01 00 00	 jmp	 $seg_lp$63
$LN16@ServerWork:
; Line 176
  00127	83 7d fc 00	 cmp	 DWORD PTR _pIO$[ebp], 0
  0012b	75 0a		 jne	 SHORT $LN36@ServerWork
; Line 177
  0012d	e9 62 01 00 00	 jmp	 $seg_lp$63
  00132	e9 5d 01 00 00	 jmp	 $seg_lp$63
$LN36@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 23
  00137	8b 45 f8	 mov	 eax, DWORD PTR _dwHeader$[ebp]
  0013a	25 00 00 00 70	 and	 eax, 1879048192		; 70000000H
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 179
  0013f	0f 85 4f 01 00
	00		 jne	 $seg_lp$63
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 76
  00145	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  00148	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  0014b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 186
  00150	83 f8 02	 cmp	 eax, 2
  00153	0f 85 b8 00 00
	00		 jne	 $LN46@ServerWork
; Line 189
  00159	8b 45 ec	 mov	 eax, DWORD PTR _BytesTransferred$[ebp]
  0015c	89 45 cc	 mov	 DWORD PTR _dwSize$[ebp], eax
  0015f	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  00162	89 45 c8	 mov	 DWORD PTR _this$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\overlapped_recv.h
; Line 17
  00165	8d 45 e8	 lea	 eax, DWORD PTR _dwTotalMsgNum$[ebp]
  00168	50		 push	 eax
  00169	8d 45 e4	 lea	 eax, DWORD PTR _dwTotalMsgBytes$[ebp]
  0016c	50		 push	 eax
  0016d	ff 75 d0	 push	 DWORD PTR _dwBufNum$[ebp]
  00170	ff 75 e0	 push	 DWORD PTR _pBuf$[ebp]
  00173	ff 75 cc	 push	 DWORD PTR _dwSize$[ebp]
  00176	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00179	83 c1 30	 add	 ecx, 48			; 00000030H
  0017c	e8 00 00 00 00	 call	 ?OnRead@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z ; CReadMemoryHandle::OnRead
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 191
  00181	83 7d e8 00	 cmp	 DWORD PTR _dwTotalMsgNum$[ebp], 0
  00185	74 4a		 je	 SHORT $LN8@ServerWork
; Line 194
  00187	6b 45 f4 18	 imul	 eax, DWORD PTR _dwWorkIndex$[ebp], 24
  0018b	05 00 00 00 00	 add	 eax, OFFSET ?g_csSwitchQue@@3PAU_RTL_CRITICAL_SECTION@@A ; g_csSwitchQue
  00190	50		 push	 eax
  00191	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; File e:\github\mso_code\4dyuchinet_latest\quemanager.h
; Line 19
  00197	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pQueManager@@3PAVCQueManager@@A ; g_pQueManager
  0019c	8b 00		 mov	 eax, DWORD PTR [eax]
  0019e	89 45 c4	 mov	 DWORD PTR $T2[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 203
  001a1	8d 45 f0	 lea	 eax, DWORD PTR _dwQueMsgNum$[ebp]
  001a4	50		 push	 eax
  001a5	6a 00		 push	 0
  001a7	ff 75 e4	 push	 DWORD PTR _dwTotalMsgBytes$[ebp]
  001aa	ff 75 e8	 push	 DWORD PTR _dwTotalMsgNum$[ebp]
  001ad	ff 75 e0	 push	 DWORD PTR _pBuf$[ebp]
  001b0	ff 75 f8	 push	 DWORD PTR _dwHeader$[ebp]
  001b3	ff 75 c4	 push	 DWORD PTR $T2[ebp]
  001b6	e8 00 00 00 00	 call	 ?PushMsg@@YAHPAVCMsgQue@@KPAU_WSABUF@@KKKPAK@Z ; PushMsg
  001bb	83 c4 1c	 add	 esp, 28			; 0000001cH
  001be	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax
; Line 205
  001c1	6b 45 f4 18	 imul	 eax, DWORD PTR _dwWorkIndex$[ebp], 24
  001c5	05 00 00 00 00	 add	 eax, OFFSET ?g_csSwitchQue@@3PAU_RTL_CRITICAL_SECTION@@A ; g_csSwitchQue
  001ca	50		 push	 eax
  001cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
$LN8@ServerWork:
; Line 208
  001d1	83 7d f0 00	 cmp	 DWORD PTR _dwQueMsgNum$[ebp], 0
  001d5	74 12		 je	 SHORT $LN7@ServerWork
; Line 209
  001d7	6a 04		 push	 4
  001d9	58		 pop	 eax
  001da	6b c0 00	 imul	 eax, eax, 0
  001dd	ff b0 00 00 00
	00		 push	 DWORD PTR ?g_hEventMustSwitch@@3PAPAXA[eax]
  001e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
$LN7@ServerWork:
; Line 211
  001e9	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  001ec	89 45 c0	 mov	 DWORD PTR _this$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\overlapped_recv.h
; Line 14
  001ef	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  001f2	83 c1 30	 add	 ecx, 48			; 00000030H
  001f5	e8 00 00 00 00	 call	 ?ResetMemory@CReadMemoryHandle@@QAEXXZ ; CReadMemoryHandle::ResetMemory
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 212
  001fa	8b 4d fc	 mov	 ecx, DWORD PTR _pIO$[ebp]
  001fd	e8 00 00 00 00	 call	 ?PrepareRead@COverlappedRecv@@QAEHXZ ; COverlappedRecv::PrepareRead
; Line 213
  00202	e9 8d 00 00 00	 jmp	 $seg_lp$63
  00207	e9 88 00 00 00	 jmp	 $seg_lp$63
; Line 216
  0020c	e9 83 00 00 00	 jmp	 $seg_lp$63
$LN46@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 76
  00211	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  00214	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00217	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 216
  0021c	83 f8 01	 cmp	 eax, 1
  0021f	75 73		 jne	 SHORT $seg_lp$63
; Line 221
  00221	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  00224	89 45 bc	 mov	 DWORD PTR _this$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 16
  00227	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  0022a	83 c0 50	 add	 eax, 80			; 00000050H
  0022d	50		 push	 eax
  0022e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 222
  00234	8b 45 ec	 mov	 eax, DWORD PTR _BytesTransferred$[ebp]
  00237	89 45 b8	 mov	 DWORD PTR _dwLength$[ebp], eax
  0023a	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  0023d	89 45 b4	 mov	 DWORD PTR _this$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 20
  00240	ff 75 b8	 push	 DWORD PTR _dwLength$[ebp]
  00243	8b 4d b4	 mov	 ecx, DWORD PTR _this$[ebp]
  00246	83 c1 30	 add	 ecx, 48			; 00000030H
  00249	e8 00 00 00 00	 call	 ?OnWrite@CWriteMemoryHandle@@QAEXK@Z ; CWriteMemoryHandle::OnWrite
; File e:\github\mso_code\4dyuchinet_latest\write_memory_handle.h
; Line 24
  0024e	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  00251	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  00254	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 224
  00257	83 7d b0 00	 cmp	 DWORD PTR $T1[ebp], 0
  0025b	74 0a		 je	 SHORT $LN3@ServerWork
; Line 225
  0025d	8b 4d fc	 mov	 ecx, DWORD PTR _pIO$[ebp]
  00260	e8 00 00 00 00	 call	 ?SendBuffer@COverlappedSend@@QAEHXZ ; COverlappedSend::SendBuffer
; Line 227
  00265	eb 1a		 jmp	 SHORT $LN2@ServerWork
$LN3@ServerWork:
; Line 228
  00267	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  0026a	89 45 d8	 mov	 DWORD PTR _this$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 75
  0026d	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  00270	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00273	25 00 ff ff ff	 and	 eax, -256		; ffffff00H
  00278	83 c8 03	 or	 eax, 3
  0027b	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0027e	89 41 14	 mov	 DWORD PTR [ecx+20], eax
$LN2@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 230
  00281	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  00284	89 45 ac	 mov	 DWORD PTR _this$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 17
  00287	8b 45 ac	 mov	 eax, DWORD PTR _this$[ebp]
  0028a	83 c0 50	 add	 eax, 80			; 00000050H
  0028d	50		 push	 eax
  0028e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
$seg_lp$63:
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 20
  00294	83 65 f8 00	 and	 DWORD PTR _dwHeader$[ebp], 0
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 236
  00298	e9 a1 fd ff ff	 jmp	 $LN23@ServerWork
$seg_destroy$62:
; Line 238
  0029d	6a 00		 push	 0
  0029f	e8 00 00 00 00	 call	 __endthreadex
  002a4	59		 pop	 ecx
; Line 240
  002a5	33 c0		 xor	 eax, eax
; Line 241
  002a7	8b e5		 mov	 esp, ebp
  002a9	5d		 pop	 ebp
  002aa	c2 04 00	 ret	 4
?ServerWorkerThread@@YGIPAX@Z ENDP			; ServerWorkerThread
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_dwHeader$ = -4						; size = 4
_dwHandle$ = 8						; size = 4
?PostDisconnectEvent@@YAXK@Z PROC			; PostDisconnectEvent
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 423
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 20
  00004	8b 45 08	 mov	 eax, DWORD PTR _dwHandle$[ebp]
  00007	89 45 fc	 mov	 DWORD PTR _dwHeader$[ebp], eax
; Line 21
  0000a	8b 45 fc	 mov	 eax, DWORD PTR _dwHeader$[ebp]
  0000d	25 ff ff ff 8f	 and	 eax, -1879048193	; 8fffffffH
  00012	89 45 fc	 mov	 DWORD PTR _dwHeader$[ebp], eax
  00015	8b 45 fc	 mov	 eax, DWORD PTR _dwHeader$[ebp]
  00018	0d 00 00 00 20	 or	 eax, 536870912		; 20000000H
  0001d	89 45 fc	 mov	 DWORD PTR _dwHeader$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 428
  00020	6a 00		 push	 0
  00022	ff 75 fc	 push	 DWORD PTR _dwHeader$[ebp]
  00025	6a 00		 push	 0
  00027	ff 35 00 00 00
	00		 push	 DWORD PTR ?g_hCompletionPort@@3PAXA ; g_hCompletionPort
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
; Line 429
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?PostDisconnectEvent@@YAXK@Z ENDP			; PostDisconnectEvent
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
?GetWorkerThreadNum@@YAKXZ PROC				; GetWorkerThreadNum
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 32
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 33
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ?dwWorkThreadNum@@3KA ; dwWorkThreadNum
; Line 34
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetWorkerThreadNum@@YAKXZ ENDP				; GetWorkerThreadNum
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_Version$ = -408					; size = 2
_wsaData$ = -404					; size = 400
__$ArrayPad$ = -4					; size = 4
?InitSocket@@YAXXZ PROC					; InitSocket
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 40
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 98 01 00
	00		 sub	 esp, 408		; 00000198H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 46
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSACleanup@0
; Line 47
  00019	b8 02 02 00 00	 mov	 eax, 514		; 00000202H
  0001e	66 89 85 68 fe
	ff ff		 mov	 WORD PTR _Version$[ebp], ax
; Line 48
  00025	8d 85 6c fe ff
	ff		 lea	 eax, DWORD PTR _wsaData$[ebp]
  0002b	50		 push	 eax
  0002c	ff b5 68 fe ff
	ff		 push	 DWORD PTR _Version$[ebp]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSAStartup@8
; Line 50
  00038	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0003b	33 cd		 xor	 ecx, ebp
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?InitSocket@@YAXXZ ENDP					; InitSocket
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
?CleanSocket@@YAXXZ PROC				; CleanSocket
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 416
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 418
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSACleanup@0
; Line 420
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?CleanSocket@@YAXXZ ENDP				; CleanSocket
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
$T1 = -16						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_i$4 = -4						; size = 4
?CloseComplitionIO@@YAXXZ PROC				; CloseComplitionIO
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 382
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
; Line 386
  00006	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_hCompletionPort@@3PAXA, 0 ; g_hCompletionPort
  0000d	0f 84 bc 00 00
	00		 je	 $LN11@CloseCompl
; Line 389
  00013	83 65 f4 00	 and	 DWORD PTR _i$2[ebp], 0
  00017	eb 07		 jmp	 SHORT $LN9@CloseCompl
$LN8@CloseCompl:
  00019	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  0001c	40		 inc	 eax
  0001d	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN9@CloseCompl:
  00020	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00023	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?dwWorkThreadNum@@3KA ; dwWorkThreadNum
  00029	73 17		 jae	 SHORT $LN7@CloseCompl
; Line 390
  0002b	6a 00		 push	 0
  0002d	68 00 00 00 30	 push	 805306368		; 30000000H
  00032	6a 00		 push	 0
  00034	ff 35 00 00 00
	00		 push	 DWORD PTR ?g_hCompletionPort@@3PAXA ; g_hCompletionPort
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
  00040	eb d7		 jmp	 SHORT $LN8@CloseCompl
$LN7@CloseCompl:
; Line 392
  00042	6a ff		 push	 -1
  00044	6a 01		 push	 1
  00046	68 00 00 00 00	 push	 OFFSET ?g_hWorkerThread@@3PAPAXA ; g_hWorkerThread
  0004b	ff 35 00 00 00
	00		 push	 DWORD PTR ?dwWorkThreadNum@@3KA ; dwWorkThreadNum
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForMultipleObjects@16
; Line 395
  00057	83 65 f8 00	 and	 DWORD PTR _i$3[ebp], 0
  0005b	eb 07		 jmp	 SHORT $LN6@CloseCompl
$LN5@CloseCompl:
  0005d	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00060	40		 inc	 eax
  00061	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN6@CloseCompl:
  00064	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00067	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?dwWorkThreadNum@@3KA ; dwWorkThreadNum
  0006d	73 18		 jae	 SHORT $LN4@CloseCompl
; Line 397
  0006f	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00072	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?g_pWsaBuf@@3PAPAU_WSABUF@@A[eax*4]
  00079	89 45 f0	 mov	 DWORD PTR $T1[ebp], eax
  0007c	ff 75 f0	 push	 DWORD PTR $T1[ebp]
  0007f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00084	59		 pop	 ecx
; Line 398
  00085	eb d6		 jmp	 SHORT $LN5@CloseCompl
$LN4@CloseCompl:
; Line 400
  00087	83 65 fc 00	 and	 DWORD PTR _i$4[ebp], 0
  0008b	eb 07		 jmp	 SHORT $LN3@CloseCompl
$LN2@CloseCompl:
  0008d	8b 45 fc	 mov	 eax, DWORD PTR _i$4[ebp]
  00090	40		 inc	 eax
  00091	89 45 fc	 mov	 DWORD PTR _i$4[ebp], eax
$LN3@CloseCompl:
  00094	8b 45 fc	 mov	 eax, DWORD PTR _i$4[ebp]
  00097	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?dwWorkThreadNum@@3KA ; dwWorkThreadNum
  0009d	73 1d		 jae	 SHORT $LN1@CloseCompl
; Line 402
  0009f	8b 45 fc	 mov	 eax, DWORD PTR _i$4[ebp]
  000a2	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?g_hWorkerThread@@3PAPAXA[eax*4]
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
; Line 403
  000af	8b 45 fc	 mov	 eax, DWORD PTR _i$4[ebp]
  000b2	83 24 85 00 00
	00 00 00	 and	 DWORD PTR ?g_hWorkerThread@@3PAPAXA[eax*4], 0
; Line 404
  000ba	eb d1		 jmp	 SHORT $LN2@CloseCompl
$LN1@CloseCompl:
; Line 407
  000bc	ff 35 00 00 00
	00		 push	 DWORD PTR ?g_hCompletionPort@@3PAXA ; g_hCompletionPort
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
; Line 408
  000c8	83 25 00 00 00
	00 00		 and	 DWORD PTR ?g_hCompletionPort@@3PAXA, 0 ; g_hCompletionPort
$LN11@CloseCompl:
; Line 413
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
?CloseComplitionIO@@YAXXZ ENDP				; CloseComplitionIO
_TEXT	ENDS
; Function compile flags: /Odspy
_TEXT	SEGMENT
_SystemInfo$ = -72					; size = 36
$T2 = -36						; size = 4
$T3 = -32						; size = 4
_ThreadID$ = -28					; size = 4
tv74 = -24						; size = 4
$T4 = -20						; size = 4
_i$5 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_size$ = 8						; size = 4
_hMsgHandle$ = 12					; size = 4
?InitCompletionIO@@YAHKPAX@Z PROC			; InitCompletionIO
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 55
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InitCompletionIO@@YAHKPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 56
  00025	68 00 01 00 00	 push	 256			; 00000100H
  0002a	6a 00		 push	 0
  0002c	68 00 00 00 00	 push	 OFFSET ?g_pWsaBuf@@3PAPAU_WSABUF@@A ; g_pWsaBuf
  00031	e8 00 00 00 00	 call	 _memset
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 68
  00039	6a 08		 push	 8
  0003b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00040	59		 pop	 ecx
  00041	89 45 ec	 mov	 DWORD PTR $T4[ebp], eax
  00044	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00048	83 7d ec 00	 cmp	 DWORD PTR $T4[ebp], 0
  0004c	74 0d		 je	 SHORT $LN10@InitComple
  0004e	8b 4d ec	 mov	 ecx, DWORD PTR $T4[ebp]
  00051	e8 00 00 00 00	 call	 ??0CQueManager@@QAE@XZ	; CQueManager::CQueManager
  00056	89 45 e8	 mov	 DWORD PTR tv74[ebp], eax
  00059	eb 04		 jmp	 SHORT $LN11@InitComple
$LN10@InitComple:
  0005b	83 65 e8 00	 and	 DWORD PTR tv74[ebp], 0
$LN11@InitComple:
  0005f	8b 45 e8	 mov	 eax, DWORD PTR tv74[ebp]
  00062	89 45 e0	 mov	 DWORD PTR $T3[ebp], eax
  00065	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00069	8b 45 e0	 mov	 eax, DWORD PTR $T3[ebp]
  0006c	a3 00 00 00 00	 mov	 DWORD PTR ?g_pQueManager@@3PAVCQueManager@@A, eax ; g_pQueManager
; Line 69
  00071	ff 75 0c	 push	 DWORD PTR _hMsgHandle$[ebp]
  00074	ff 75 08	 push	 DWORD PTR _size$[ebp]
  00077	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pQueManager@@3PAVCQueManager@@A ; g_pQueManager
  0007d	e8 00 00 00 00	 call	 ?Initialize@CQueManager@@QAEXKPAX@Z ; CQueManager::Initialize
; Line 74
  00082	83 65 e4 00	 and	 DWORD PTR _ThreadID$[ebp], 0
; Line 77
  00086	6a 00		 push	 0
  00088	6a 00		 push	 0
  0008a	6a 00		 push	 0
  0008c	6a ff		 push	 -1
  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateIoCompletionPort@16
  00094	a3 00 00 00 00	 mov	 DWORD PTR ?g_hCompletionPort@@3PAXA, eax ; g_hCompletionPort
  00099	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_hCompletionPort@@3PAXA, 0 ; g_hCompletionPort
  000a0	75 20		 jne	 SHORT $LN7@InitComple
; Line 79
  000a2	6a 00		 push	 0
  000a4	68 00 00 00 00	 push	 OFFSET $SG92140
  000a9	68 00 00 00 00	 push	 OFFSET $SG92141
  000ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetActiveWindow@0
  000b4	50		 push	 eax
  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
; Line 80
  000bb	33 c0		 xor	 eax, eax
  000bd	e9 f4 00 00 00	 jmp	 $LN8@InitComple
$LN7@InitComple:
; Line 84
  000c2	8d 45 b8	 lea	 eax, DWORD PTR _SystemInfo$[ebp]
  000c5	50		 push	 eax
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemInfo@4
; Line 85
  000cc	83 65 f0 00	 and	 DWORD PTR _i$5[ebp], 0
  000d0	eb 07		 jmp	 SHORT $LN6@InitComple
$LN5@InitComple:
  000d2	8b 45 f0	 mov	 eax, DWORD PTR _i$5[ebp]
  000d5	40		 inc	 eax
  000d6	89 45 f0	 mov	 DWORD PTR _i$5[ebp], eax
$LN6@InitComple:
  000d9	8b 45 cc	 mov	 eax, DWORD PTR _SystemInfo$[ebp+20]
  000dc	d1 e0		 shl	 eax, 1
  000de	39 45 f0	 cmp	 DWORD PTR _i$5[ebp], eax
  000e1	0f 83 bc 00 00
	00		 jae	 $LN4@InitComple
; Line 87
  000e7	68 40 1f 00 00	 push	 8000			; 00001f40H
  000ec	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000f1	59		 pop	 ecx
  000f2	89 45 dc	 mov	 DWORD PTR $T2[ebp], eax
  000f5	8b 45 f0	 mov	 eax, DWORD PTR _i$5[ebp]
  000f8	8b 4d dc	 mov	 ecx, DWORD PTR $T2[ebp]
  000fb	89 0c 85 00 00
	00 00		 mov	 DWORD PTR ?g_pWsaBuf@@3PAPAU_WSABUF@@A[eax*4], ecx
; Line 88
  00102	68 40 1f 00 00	 push	 8000			; 00001f40H
  00107	6a 00		 push	 0
  00109	8b 45 f0	 mov	 eax, DWORD PTR _i$5[ebp]
  0010c	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?g_pWsaBuf@@3PAPAU_WSABUF@@A[eax*4]
  00113	e8 00 00 00 00	 call	 _memset
  00118	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 90
  0011b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pLogManager@@3PAVCLogManager@@A, 0 ; g_pLogManager
  00122	74 26		 je	 SHORT $LN3@InitComple
; Line 91
  00124	8d 45 e4	 lea	 eax, DWORD PTR _ThreadID$[ebp]
  00127	50		 push	 eax
  00128	6a 00		 push	 0
  0012a	ff 75 f0	 push	 DWORD PTR _i$5[ebp]
  0012d	68 00 00 00 00	 push	 OFFSET ?ServerWorkerThreadLog@@YGIPAX@Z ; ServerWorkerThreadLog
  00132	6a 00		 push	 0
  00134	6a 00		 push	 0
  00136	e8 00 00 00 00	 call	 __beginthreadex
  0013b	83 c4 18	 add	 esp, 24			; 00000018H
  0013e	8b 4d f0	 mov	 ecx, DWORD PTR _i$5[ebp]
  00141	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?g_hWorkerThread@@3PAPAXA[ecx*4], eax
; Line 92
  00148	eb 24		 jmp	 SHORT $LN2@InitComple
$LN3@InitComple:
; Line 93
  0014a	8d 45 e4	 lea	 eax, DWORD PTR _ThreadID$[ebp]
  0014d	50		 push	 eax
  0014e	6a 00		 push	 0
  00150	ff 75 f0	 push	 DWORD PTR _i$5[ebp]
  00153	68 00 00 00 00	 push	 OFFSET ?ServerWorkerThread@@YGIPAX@Z ; ServerWorkerThread
  00158	6a 00		 push	 0
  0015a	6a 00		 push	 0
  0015c	e8 00 00 00 00	 call	 __beginthreadex
  00161	83 c4 18	 add	 esp, 24			; 00000018H
  00164	8b 4d f0	 mov	 ecx, DWORD PTR _i$5[ebp]
  00167	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?g_hWorkerThread@@3PAPAXA[ecx*4], eax
$LN2@InitComple:
; Line 96
  0016e	8b 45 f0	 mov	 eax, DWORD PTR _i$5[ebp]
  00171	83 3c 85 00 00
	00 00 ff	 cmp	 DWORD PTR ?g_hWorkerThread@@3PAPAXA[eax*4], -1
  00179	75 18		 jne	 SHORT $LN1@InitComple
; Line 98
  0017b	6a 00		 push	 0
  0017d	68 00 00 00 00	 push	 OFFSET $SG92157
  00182	68 00 00 00 00	 push	 OFFSET $SG92158
  00187	6a 00		 push	 0
  00189	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
; Line 99
  0018f	33 c0		 xor	 eax, eax
  00191	eb 23		 jmp	 SHORT $LN8@InitComple
$LN1@InitComple:
; Line 101
  00193	a1 00 00 00 00	 mov	 eax, DWORD PTR ?dwWorkThreadNum@@3KA ; dwWorkThreadNum
  00198	40		 inc	 eax
  00199	a3 00 00 00 00	 mov	 DWORD PTR ?dwWorkThreadNum@@3KA, eax ; dwWorkThreadNum
; Line 102
  0019e	e9 2f ff ff ff	 jmp	 $LN5@InitComple
$LN4@InitComple:
; Line 103
  001a3	ff 35 00 00 00
	00		 push	 DWORD PTR ?dwWorkThreadNum@@3KA ; dwWorkThreadNum
  001a9	ff 75 0c	 push	 DWORD PTR _hMsgHandle$[ebp]
  001ac	e8 00 00 00 00	 call	 ?StartSwitchQueThread@@YAHPAXK@Z ; StartSwitchQueThread
  001b1	59		 pop	 ecx
  001b2	59		 pop	 ecx
; Line 105
  001b3	33 c0		 xor	 eax, eax
  001b5	40		 inc	 eax
$LN8@InitComple:
; Line 106
  001b6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001b9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001c0	59		 pop	 ecx
  001c1	8b e5		 mov	 esp, ebp
  001c3	5d		 pop	 ebp
  001c4	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InitCompletionIO@@YAHKPAX@Z$0:
  00000	ff 75 ec	 push	 DWORD PTR $T4[ebp]
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx
  00009	c3		 ret	 0
__ehhandler$?InitCompletionIO@@YAHKPAX@Z:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00011	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InitCompletionIO@@YAHKPAX@Z
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InitCompletionIO@@YAHKPAX@Z ENDP			; InitCompletionIO
END
