; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	E:\GitHub\Mso_Code\4DyuchiNET_Latest\pre_connect.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_pPreConnectPool@@3PAVCPreConnectPool@@A	; g_pPreConnectPool
_BSS	SEGMENT
?g_pPreConnectPool@@3PAVCPreConnectPool@@A DD 01H DUP (?) ; g_pPreConnectPool
_BSS	ENDS
PUBLIC	?GetConnectionIndex@CConnection@@QAEKXZ		; CConnection::GetConnectionIndex
PUBLIC	?PrepareRead@CConnection@@QAEHXZ		; CConnection::PrepareRead
PUBLIC	?OnAccept@CNetwork@@QAEXK@Z			; CNetwork::OnAccept
PUBLIC	?Alloc@CPreConnectPool@@AAEPAUPRE_CONNECT@@XZ	; CPreConnectPool::Alloc
PUBLIC	?Free@CPreConnectPool@@AAEXPAUPRE_CONNECT@@@Z	; CPreConnectPool::Free
PUBLIC	?FreeAll@CPreConnectPool@@AAEXXZ		; CPreConnectPool::FreeAll
PUBLIC	?Initialize@CPreConnectPool@@QAEHK@Z		; CPreConnectPool::Initialize
PUBLIC	?InsertPreConnect@CPreConnectPool@@QAEHPAUCONNECT_ITEM@@@Z ; CPreConnectPool::InsertPreConnect
PUBLIC	?ProcessPreConnect@CPreConnectPool@@QAEHXZ	; CPreConnectPool::ProcessPreConnect
PUBLIC	??0CPreConnectPool@@QAE@XZ			; CPreConnectPool::CPreConnectPool
PUBLIC	??1CPreConnectPool@@QAE@XZ			; CPreConnectPool::~CPreConnectPool
PUBLIC	??_GCPreConnectPool@@QAEPAXI@Z			; CPreConnectPool::`scalar deleting destructor'
PUBLIC	?StartPreConnectPool@@YAHKK@Z			; StartPreConnectPool
PUBLIC	?EndPreConnectPool@@YAXXZ			; EndPreConnectPool
PUBLIC	??_C@_0O@NGELNIOI@?$FLRelease?5?$CFp?$FN?5?$AA@	; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	_printf:PROC
EXTRN	?PrepareRead@COverlappedRecv@@QAEHXZ:PROC	; COverlappedRecv::PrepareRead
EXTRN	?AddConnection@CNetwork@@QAEPAVCConnection@@I@Z:PROC ; CNetwork::AddConnection
EXTRN	?StartConnectThread@@YAHK@Z:PROC		; StartConnectThread
EXTRN	?EndConnectThread@@YAXXZ:PROC			; EndConnectThread
;	COMDAT ??_C@_0O@NGELNIOI@?$FLRelease?5?$CFp?$FN?5?$AA@
CONST	SEGMENT
??_C@_0O@NGELNIOI@?$FLRelease?5?$CFp?$FN?5?$AA@ DB '[Release %p] ', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?EndPreConnectPool@@YAXXZ
_TEXT	SEGMENT
?EndPreConnectPool@@YAXXZ PROC				; EndPreConnectPool, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 24
  00000	56		 push	 esi
; Line 25
  00001	e8 00 00 00 00	 call	 ?EndConnectThread@@YAXXZ ; EndConnectThread
; Line 26
  00006	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?g_pPreConnectPool@@3PAVCPreConnectPool@@A ; g_pPreConnectPool
  0000c	85 f6		 test	 esi, esi
  0000e	74 24		 je	 SHORT $LN1@EndPreConn
; Line 211
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?FreeAll@CPreConnectPool@@AAEXXZ ; CPreConnectPool::FreeAll
; Line 212
  00017	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
  00021	56		 push	 esi
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
; Line 29
  0002a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pPreConnectPool@@3PAVCPreConnectPool@@A, 0 ; g_pPreConnectPool
$LN1@EndPreConn:
  00034	5e		 pop	 esi
; Line 31
  00035	c3		 ret	 0
?EndPreConnectPool@@YAXXZ ENDP				; EndPreConnectPool
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?StartPreConnectPool@@YAHKK@Z
_TEXT	SEGMENT
_dwMaxConnectNumAtSameTime$ = 8				; size = 4
_dwDefaultItemNum$ = 12					; size = 4
?StartPreConnectPool@@YAHKK@Z PROC			; StartPreConnectPool, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 7
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 10
  00003	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPreConnectPool@@3PAVCPreConnectPool@@A, 0 ; g_pPreConnectPool
  0000a	74 04		 je	 SHORT $LN2@StartPreCo
$LN10@StartPreCo:
; Line 11
  0000c	33 c0		 xor	 eax, eax
; Line 22
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
$LN2@StartPreCo:
  00010	56		 push	 esi
; Line 13
  00011	6a 30		 push	 48			; 00000030H
  00013	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00018	8b f0		 mov	 esi, eax
  0001a	83 c4 04	 add	 esp, 4
  0001d	85 f6		 test	 esi, esi
  0001f	74 35		 je	 SHORT $LN5@StartPreCo
; Line 40
  00021	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00024	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0002a	50		 push	 eax
  0002b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00032	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00039	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00040	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
  00047	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4
; Line 13
  00054	eb 02		 jmp	 SHORT $LN6@StartPreCo
$LN5@StartPreCo:
  00056	33 f6		 xor	 esi, esi
$LN6@StartPreCo:
; Line 14
  00058	ff 75 0c	 push	 DWORD PTR _dwDefaultItemNum$[ebp]
  0005b	8b ce		 mov	 ecx, esi
  0005d	89 35 00 00 00
	00		 mov	 DWORD PTR ?g_pPreConnectPool@@3PAVCPreConnectPool@@A, esi ; g_pPreConnectPool
  00063	e8 00 00 00 00	 call	 ?Initialize@CPreConnectPool@@QAEHK@Z ; CPreConnectPool::Initialize
  00068	5e		 pop	 esi
; Line 16
  00069	85 c0		 test	 eax, eax
  0006b	74 9f		 je	 SHORT $LN10@StartPreCo
; Line 19
  0006d	ff 75 08	 push	 DWORD PTR _dwMaxConnectNumAtSameTime$[ebp]
  00070	e8 00 00 00 00	 call	 ?StartConnectThread@@YAHK@Z ; StartConnectThread
  00075	83 c4 04	 add	 esp, 4
; Line 22
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
?StartPreConnectPool@@YAHKK@Z ENDP			; StartPreConnectPool
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCPreConnectPool@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCPreConnectPool@@QAEPAXI@Z PROC			; CPreConnectPool::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 211
  00006	e8 00 00 00 00	 call	 ?FreeAll@CPreConnectPool@@AAEXXZ ; CPreConnectPool::FreeAll
; Line 212
  0000b	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0000e	50		 push	 eax
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
  00015	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00019	74 09		 je	 SHORT $LN6@scalar
  0001b	56		 push	 esi
  0001c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00021	83 c4 04	 add	 esp, 4
$LN6@scalar:
  00024	8b c6		 mov	 eax, esi
  00026	5e		 pop	 esi
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCPreConnectPool@@QAEPAXI@Z ENDP			; CPreConnectPool::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1CPreConnectPool@@QAE@XZ
_TEXT	SEGMENT
??1CPreConnectPool@@QAE@XZ PROC				; CPreConnectPool::~CPreConnectPool, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 210
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; Line 211
  00003	e8 00 00 00 00	 call	 ?FreeAll@CPreConnectPool@@AAEXXZ ; CPreConnectPool::FreeAll
; Line 212
  00008	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0000b	50		 push	 eax
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
  00012	5e		 pop	 esi
; Line 213
  00013	c3		 ret	 0
??1CPreConnectPool@@QAE@XZ ENDP				; CPreConnectPool::~CPreConnectPool
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CPreConnectPool@@QAE@XZ
_TEXT	SEGMENT
??0CPreConnectPool@@QAE@XZ PROC				; CPreConnectPool::CPreConnectPool, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 33
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; Line 40
  00003	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0000c	50		 push	 eax
  0000d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00014	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0001b	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00022	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
  00029	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4
; Line 42
  00036	8b c6		 mov	 eax, esi
  00038	5e		 pop	 esi
  00039	c3		 ret	 0
??0CPreConnectPool@@QAE@XZ ENDP				; CPreConnectPool::CPreConnectPool
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ProcessPreConnect@CPreConnectPool@@QAEHXZ
_TEXT	SEGMENT
_next$1$ = -4						; size = 4
?ProcessPreConnect@CPreConnectPool@@QAEHXZ PROC		; CPreConnectPool::ProcessPreConnect, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 139
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
; Line 144
  00008	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  0000b	50		 push	 eax
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 146
  00012	8b 37		 mov	 esi, DWORD PTR [edi]
; Line 149
  00014	85 f6		 test	 esi, esi
  00016	0f 84 90 00 00
	00		 je	 $LN6@ProcessPre
  0001c	53		 push	 ebx
  0001d	8d 49 00	 npad	 3
$LL7@ProcessPre:
; Line 152
  00020	8b 06		 mov	 eax, DWORD PTR [esi]
  00022	8b 5e 14	 mov	 ebx, DWORD PTR [esi+20]
  00025	89 5d fc	 mov	 DWORD PTR _next$1$[ebp], ebx
  00028	83 f8 ff	 cmp	 eax, -1
  0002b	74 5a		 je	 SHORT $LN5@ProcessPre
; Line 154
  0002d	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ?AddConnection@CNetwork@@QAEPAVCConnection@@I@Z ; CNetwork::AddConnection
  00036	8b d8		 mov	 ebx, eax
; Line 155
  00038	85 db		 test	 ebx, ebx
  0003a	74 24		 je	 SHORT $LN27@ProcessPre
; Line 157
  0003c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0003f	85 c0		 test	 eax, eax
  00041	75 0d		 jne	 SHORT $LN3@ProcessPre
; File e:\github\mso_code\4dyuchinet_latest\network.h
; Line 87
  00043	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00046	ff 73 08	 push	 DWORD PTR [ebx+8]
  00049	8b 40 58	 mov	 eax, DWORD PTR [eax+88]
  0004c	ff d0		 call	 eax
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 159
  0004e	eb 08		 jmp	 SHORT $LN2@ProcessPre
$LN3@ProcessPre:
; Line 160
  00050	ff 76 10	 push	 DWORD PTR [esi+16]
  00053	ff 73 08	 push	 DWORD PTR [ebx+8]
  00056	ff d0		 call	 eax
$LN2@ProcessPre:
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 51
  00058	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  0005b	e8 00 00 00 00	 call	 ?PrepareRead@COverlappedRecv@@QAEHXZ ; COverlappedRecv::PrepareRead
$LN27@ProcessPre:
  00060	8b 5d fc	 mov	 ebx, DWORD PTR _next$1$[ebp]
$LN1@ProcessPre:
  00063	0f 57 c0	 xorps	 xmm0, xmm0
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 98
  00066	f3 0f 7f 06	 movdqu	 XMMWORD PTR [esi], xmm0
  0006a	66 0f d6 46 10	 movq	 QWORD PTR [esi+16], xmm0
  0006f	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
; Line 101
  00076	ff 47 28	 inc	 DWORD PTR [edi+40]
; Line 102
  00079	ff 4f 2c	 dec	 DWORD PTR [edi+44]
; Line 104
  0007c	83 7f 0c 00	 cmp	 DWORD PTR [edi+12], 0
  00080	75 0f		 jne	 SHORT $LN19@ProcessPre
; Line 106
  00082	89 77 08	 mov	 DWORD PTR [edi+8], esi
; Line 108
  00085	eb 17		 jmp	 SHORT $LN28@ProcessPre
$LN5@ProcessPre:
; Line 168
  00087	ff 76 10	 push	 DWORD PTR [esi+16]
  0008a	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0008d	ff d0		 call	 eax
  0008f	eb d2		 jmp	 SHORT $LN1@ProcessPre
$LN19@ProcessPre:
; Line 110
  00091	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
; Line 111
  00098	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  0009b	89 70 14	 mov	 DWORD PTR [eax+20], esi
$LN28@ProcessPre:
; Line 112
  0009e	89 77 0c	 mov	 DWORD PTR [edi+12], esi
; Line 171
  000a1	8b f3		 mov	 esi, ebx
  000a3	85 db		 test	 ebx, ebx
  000a5	0f 85 75 ff ff
	ff		 jne	 $LL7@ProcessPre
  000ab	5b		 pop	 ebx
$LN6@ProcessPre:
; Line 175
  000ac	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  000af	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  000b6	50		 push	 eax
  000b7	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  000bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
  000c3	5f		 pop	 edi
; Line 176
  000c4	b8 01 00 00 00	 mov	 eax, 1
  000c9	5e		 pop	 esi
; Line 177
  000ca	8b e5		 mov	 esp, ebp
  000cc	5d		 pop	 ebp
  000cd	c3		 ret	 0
?ProcessPreConnect@CPreConnectPool@@QAEHXZ ENDP		; CPreConnectPool::ProcessPreConnect
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?InsertPreConnect@CPreConnectPool@@QAEHPAUCONNECT_ITEM@@@Z
_TEXT	SEGMENT
_pCon$ = 8						; size = 4
?InsertPreConnect@CPreConnectPool@@QAEHPAUCONNECT_ITEM@@@Z PROC ; CPreConnectPool::InsertPreConnect, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 117
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
; Line 119
  00007	8d 7e 10	 lea	 edi, DWORD PTR [esi+16]
  0000a	57		 push	 edi
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 120
  00011	8b ce		 mov	 ecx, esi
  00013	e8 00 00 00 00	 call	 ?Alloc@CPreConnectPool@@AAEPAUPRE_CONNECT@@XZ ; CPreConnectPool::Alloc
; Line 122
  00018	83 3e 00	 cmp	 DWORD PTR [esi], 0
  0001b	8b c8		 mov	 ecx, eax
  0001d	75 04		 jne	 SHORT $LN2@InsertPreC
; Line 123
  0001f	89 0e		 mov	 DWORD PTR [esi], ecx
; Line 124
  00021	eb 06		 jmp	 SHORT $LN5@InsertPreC
$LN2@InsertPreC:
; Line 126
  00023	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00026	89 48 14	 mov	 DWORD PTR [eax+20], ecx
$LN5@InsertPreC:
; Line 131
  00029	8b 45 08	 mov	 eax, DWORD PTR _pCon$[ebp]
  0002c	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
; Line 134
  0002f	57		 push	 edi
  00030	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  00034	f3 0f 7f 01	 movdqu	 XMMWORD PTR [ecx], xmm0
  00038	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0003b	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  0003e	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
  0004b	5f		 pop	 edi
; Line 136
  0004c	b8 01 00 00 00	 mov	 eax, 1
  00051	5e		 pop	 esi
; Line 137
  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
?InsertPreConnect@CPreConnectPool@@QAEHPAUCONNECT_ITEM@@@Z ENDP ; CPreConnectPool::InsertPreConnect
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Initialize@CPreConnectPool@@QAEHK@Z
_TEXT	SEGMENT
_dwDefaultItemNum$ = 8					; size = 4
?Initialize@CPreConnectPool@@QAEHK@Z PROC		; CPreConnectPool::Initialize, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 45
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
; Line 49
  00006	6a 1c		 push	 28			; 0000001cH
  00008	8b d9		 mov	 ebx, ecx
  0000a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; Line 53
  0000f	8b 75 08	 mov	 esi, DWORD PTR _dwDefaultItemNum$[ebp]
  00012	0f 57 c0	 xorps	 xmm0, xmm0
  00015	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  00018	83 c4 04	 add	 esp, 4
  0001b	8b f8		 mov	 edi, eax
  0001d	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
  00021	66 0f d6 40 10	 movq	 QWORD PTR [eax+16], xmm0
  00026	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
  0002d	4e		 dec	 esi
  0002e	74 25		 je	 SHORT $LN1@Initialize
$LL3@Initialize:
; Line 55
  00030	6a 1c		 push	 28			; 0000001cH
  00032	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00037	89 47 14	 mov	 DWORD PTR [edi+20], eax
  0003a	0f 57 c0	 xorps	 xmm0, xmm0
  0003d	83 c4 04	 add	 esp, 4
; Line 57
  00040	8b f8		 mov	 edi, eax
  00042	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
  00046	66 0f d6 40 10	 movq	 QWORD PTR [eax+16], xmm0
  0004b	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
  00052	4e		 dec	 esi
  00053	75 db		 jne	 SHORT $LL3@Initialize
$LN1@Initialize:
; Line 60
  00055	89 43 0c	 mov	 DWORD PTR [ebx+12], eax
; Line 61
  00058	8b 45 08	 mov	 eax, DWORD PTR _dwDefaultItemNum$[ebp]
  0005b	5f		 pop	 edi
  0005c	89 43 28	 mov	 DWORD PTR [ebx+40], eax
; Line 63
  0005f	b8 01 00 00 00	 mov	 eax, 1
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
; Line 64
  00066	5d		 pop	 ebp
  00067	c2 04 00	 ret	 4
?Initialize@CPreConnectPool@@QAEHK@Z ENDP		; CPreConnectPool::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?FreeAll@CPreConnectPool@@AAEXXZ
_TEXT	SEGMENT
?FreeAll@CPreConnectPool@@AAEXXZ PROC			; CPreConnectPool::FreeAll, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 179
  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
; Line 183
  00004	8d 5e 10	 lea	 ebx, DWORD PTR [esi+16]
  00007	53		 push	 ebx
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 185
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
; Line 187
  00010	85 c9		 test	 ecx, ecx
  00012	74 39		 je	 SHORT $LN19@FreeAll
$LL4@FreeAll:
  00014	0f 57 c0	 xorps	 xmm0, xmm0
; Line 98
  00017	f3 0f 7f 01	 movdqu	 XMMWORD PTR [ecx], xmm0
  0001b	66 0f d6 41 10	 movq	 QWORD PTR [ecx+16], xmm0
  00020	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
; Line 101
  00027	ff 46 28	 inc	 DWORD PTR [esi+40]
; Line 102
  0002a	ff 4e 2c	 dec	 DWORD PTR [esi+44]
; Line 104
  0002d	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  00031	75 08		 jne	 SHORT $LN8@FreeAll
; Line 106
  00033	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00036	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
; Line 108
  00039	eb d9		 jmp	 SHORT $LL4@FreeAll
$LN8@FreeAll:
; Line 110
  0003b	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
; Line 111
  00042	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00045	89 48 14	 mov	 DWORD PTR [eax+20], ecx
; Line 112
  00048	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
; Line 187
  0004b	eb c7		 jmp	 SHORT $LL4@FreeAll
$LN19@FreeAll:
  0004d	57		 push	 edi
; Line 196
  0004e	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  00051	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; Line 197
  0005e	85 ff		 test	 edi, edi
  00060	74 1d		 je	 SHORT $LN1@FreeAll
$LL2@FreeAll:
; Line 199
  00062	8b 77 14	 mov	 esi, DWORD PTR [edi+20]
; Line 200
  00065	57		 push	 edi
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NGELNIOI@?$FLRelease?5?$CFp?$FN?5?$AA@
  0006b	e8 00 00 00 00	 call	 _printf
; Line 201
  00070	57		 push	 edi
  00071	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00076	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 202
  00079	8b fe		 mov	 edi, esi
  0007b	85 f6		 test	 esi, esi
  0007d	75 e3		 jne	 SHORT $LL2@FreeAll
$LN1@FreeAll:
; Line 205
  0007f	53		 push	 ebx
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	5b		 pop	 ebx
; Line 208
  00089	c3		 ret	 0
?FreeAll@CPreConnectPool@@AAEXXZ ENDP			; CPreConnectPool::FreeAll
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Free@CPreConnectPool@@AAEXPAUPRE_CONNECT@@@Z
_TEXT	SEGMENT
_pCon$ = 8						; size = 4
?Free@CPreConnectPool@@AAEXPAUPRE_CONNECT@@@Z PROC	; CPreConnectPool::Free, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 96
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 98
  00003	8b 55 08	 mov	 edx, DWORD PTR _pCon$[ebp]
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	f3 0f 7f 02	 movdqu	 XMMWORD PTR [edx], xmm0
  0000d	66 0f d6 42 10	 movq	 QWORD PTR [edx+16], xmm0
  00012	c7 42 18 00 00
	00 00		 mov	 DWORD PTR [edx+24], 0
; Line 99
  00019	85 d2		 test	 edx, edx
  0001b	74 26		 je	 SHORT $LN1@Free
; Line 101
  0001d	ff 41 28	 inc	 DWORD PTR [ecx+40]
; Line 102
  00020	ff 49 2c	 dec	 DWORD PTR [ecx+44]
; Line 104
  00023	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  00027	75 0a		 jne	 SHORT $LN2@Free
; Line 106
  00029	89 51 08	 mov	 DWORD PTR [ecx+8], edx
; Line 112
  0002c	89 51 0c	 mov	 DWORD PTR [ecx+12], edx
; Line 115
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
$LN2@Free:
; Line 110
  00033	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], 0
; Line 111
  0003a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0003d	89 50 14	 mov	 DWORD PTR [eax+20], edx
; Line 112
  00040	89 51 0c	 mov	 DWORD PTR [ecx+12], edx
$LN1@Free:
; Line 115
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?Free@CPreConnectPool@@AAEXPAUPRE_CONNECT@@@Z ENDP	; CPreConnectPool::Free
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Alloc@CPreConnectPool@@AAEPAUPRE_CONNECT@@XZ
_TEXT	SEGMENT
?Alloc@CPreConnectPool@@AAEPAUPRE_CONNECT@@XZ PROC	; CPreConnectPool::Alloc, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\pre_connect.cpp
; Line 67
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; Line 71
  00003	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  00007	75 33		 jne	 SHORT $LN8@Alloc
  00009	8d a4 24 00 00
	00 00		 npad	 7
$lb_start$13:
; Line 87
  00010	6a 1c		 push	 28			; 0000001cH
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00017	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0001a	0f 57 c0	 xorps	 xmm0, xmm0
  0001d	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00020	83 c4 04	 add	 esp, 4
; Line 88
  00023	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
  00027	66 0f d6 40 10	 movq	 QWORD PTR [eax+16], xmm0
  0002c	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
; Line 89
  00033	ff 46 28	 inc	 DWORD PTR [esi+40]
  00036	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0003a	74 d4		 je	 SHORT $lb_start$13
$LN8@Alloc:
; Line 73
  0003c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
; Line 74
  0003f	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00042	89 46 08	 mov	 DWORD PTR [esi+8], eax
; Line 75
  00045	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
; Line 76
  0004c	ff 4e 28	 dec	 DWORD PTR [esi+40]
; Line 77
  0004f	75 0e		 jne	 SHORT $LN2@Alloc
; Line 79
  00051	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
; Line 80
  00058	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN2@Alloc:
; Line 83
  0005f	ff 46 2c	 inc	 DWORD PTR [esi+44]
; Line 92
  00062	8b c1		 mov	 eax, ecx
  00064	5e		 pop	 esi
; Line 94
  00065	c3		 ret	 0
?Alloc@CPreConnectPool@@AAEPAUPRE_CONNECT@@XZ ENDP	; CPreConnectPool::Alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?OnAccept@CNetwork@@QAEXK@Z
_TEXT	SEGMENT
_dwConnectionIndex$ = 8					; size = 4
?OnAccept@CNetwork@@QAEXK@Z PROC			; CNetwork::OnAccept, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.h
; Line 87
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]
  00006	5d		 pop	 ebp
  00007	ff e0		 jmp	 eax
?OnAccept@CNetwork@@QAEXK@Z ENDP			; CNetwork::OnAccept
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?PrepareRead@CConnection@@QAEHXZ
_TEXT	SEGMENT
?PrepareRead@CConnection@@QAEHXZ PROC			; CConnection::PrepareRead, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 51
  00000	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00003	e9 00 00 00 00	 jmp	 ?PrepareRead@COverlappedRecv@@QAEHXZ ; COverlappedRecv::PrepareRead
?PrepareRead@CConnection@@QAEHXZ ENDP			; CConnection::PrepareRead
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetConnectionIndex@CConnection@@QAEKXZ
_TEXT	SEGMENT
?GetConnectionIndex@CConnection@@QAEKXZ PROC		; CConnection::GetConnectionIndex, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 49
  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	c3		 ret	 0
?GetConnectionIndex@CConnection@@QAEKXZ ENDP		; CConnection::GetConnectionIndex
_TEXT	ENDS
END
