; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	E:\GitHub\Mso_Code\4DyuchiNET_Latest\quemanager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_pQueManager@@3PAVCQueManager@@A		; g_pQueManager
_BSS	SEGMENT
?g_pQueManager@@3PAVCQueManager@@A DD 01H DUP (?)	; g_pQueManager
_BSS	ENDS
PUBLIC	??_GCMsgQue@@QAEPAXI@Z				; CMsgQue::`scalar deleting destructor'
PUBLIC	?Initialize@CQueManager@@QAEXKPAX@Z		; CQueManager::Initialize
PUBLIC	?Release@CQueManager@@QAEXXZ			; CQueManager::Release
PUBLIC	??0CQueManager@@QAE@XZ				; CQueManager::CQueManager
PUBLIC	??1CQueManager@@QAE@XZ				; CQueManager::~CQueManager
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__InitializeCriticalSectionAndSpinCount@8:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	??0CMsgQue@@QAE@K@Z:PROC			; CMsgQue::CMsgQue
EXTRN	??1CMsgQue@@QAE@XZ:PROC				; CMsgQue::~CMsgQue
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?g_csWrite@@3U_RTL_CRITICAL_SECTION@@A:BYTE	; g_csWrite
EXTRN	___security_cookie:DWORD
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Initialize@CQueManager@@QAEXKPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize@CQueManager@@QAEXKPAX@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize@CQueManager@@QAEXKPAX@Z$1
__ehfuncinfo$?Initialize@CQueManager@@QAEXKPAX@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Initialize@CQueManager@@QAEXKPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1CQueManager@@QAE@XZ
_TEXT	SEGMENT
??1CQueManager@@QAE@XZ PROC				; CQueManager::~CQueManager, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\quemanager.cpp
; Line 44
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi
; Line 29
  00004	8b 3e		 mov	 edi, DWORD PTR [esi]
  00006	85 ff		 test	 edi, edi
  00008	74 16		 je	 SHORT $LN4@CQueManage
  0000a	8b cf		 mov	 ecx, edi
  0000c	e8 00 00 00 00	 call	 ??1CMsgQue@@QAE@XZ	; CMsgQue::~CMsgQue
  00011	57		 push	 edi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 32
  0001a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN4@CQueManage:
; Line 34
  00020	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00023	85 ff		 test	 edi, edi
  00025	74 17		 je	 SHORT $LN3@CQueManage
  00027	8b cf		 mov	 ecx, edi
  00029	e8 00 00 00 00	 call	 ??1CMsgQue@@QAE@XZ	; CMsgQue::~CMsgQue
  0002e	57		 push	 edi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00034	83 c4 04	 add	 esp, 4
; Line 37
  00037	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
$LN3@CQueManage:
; Line 39
  0003e	68 00 00 00 00	 push	 OFFSET ?g_csWrite@@3U_RTL_CRITICAL_SECTION@@A ; g_csWrite
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
; Line 46
  0004b	c3		 ret	 0
??1CQueManager@@QAE@XZ ENDP				; CQueManager::~CQueManager
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CQueManager@@QAE@XZ
_TEXT	SEGMENT
??0CQueManager@@QAE@XZ PROC				; CQueManager::CQueManager, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\quemanager.cpp
; Line 9
  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 11
  00006	8b c1		 mov	 eax, ecx
  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000f	c3		 ret	 0
??0CQueManager@@QAE@XZ ENDP				; CQueManager::CQueManager
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Release@CQueManager@@QAEXXZ
_TEXT	SEGMENT
?Release@CQueManager@@QAEXXZ PROC			; CQueManager::Release, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\quemanager.cpp
; Line 27
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi
; Line 29
  00004	8b 3e		 mov	 edi, DWORD PTR [esi]
  00006	85 ff		 test	 edi, edi
  00008	74 16		 je	 SHORT $LN2@Release
; Line 32
  0000a	8b cf		 mov	 ecx, edi
  0000c	e8 00 00 00 00	 call	 ??1CMsgQue@@QAE@XZ	; CMsgQue::~CMsgQue
  00011	57		 push	 edi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
  0001a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN2@Release:
; Line 34
  00020	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00023	85 ff		 test	 edi, edi
  00025	74 17		 je	 SHORT $LN1@Release
; Line 37
  00027	8b cf		 mov	 ecx, edi
  00029	e8 00 00 00 00	 call	 ??1CMsgQue@@QAE@XZ	; CMsgQue::~CMsgQue
  0002e	57		 push	 edi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00034	83 c4 04	 add	 esp, 4
  00037	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
$LN1@Release:
; Line 39
  0003e	68 00 00 00 00	 push	 OFFSET ?g_csWrite@@3U_RTL_CRITICAL_SECTION@@A ; g_csWrite
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
; Line 40
  0004b	c3		 ret	 0
?Release@CQueManager@@QAEXXZ ENDP			; CQueManager::Release
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Initialize@CQueManager@@QAEXKPAX@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwQueSize$ = 8						; size = 4
_hMsgHandle$ = 12					; size = 4
?Initialize@CQueManager@@QAEXKPAX@Z PROC		; CQueManager::Initialize, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\quemanager.cpp
; Line 14
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Initialize@CQueManager@@QAEXKPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; Line 16
  00026	6a 18		 push	 24			; 00000018H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T3[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 0c		 je	 SHORT $LN3@Initialize
  0003e	ff 75 08	 push	 DWORD PTR _dwQueSize$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	e8 00 00 00 00	 call	 ??0CMsgQue@@QAE@K@Z	; CMsgQue::CMsgQue
  00048	eb 02		 jmp	 SHORT $LN4@Initialize
$LN3@Initialize:
  0004a	33 c0		 xor	 eax, eax
$LN4@Initialize:
; Line 17
  0004c	6a 18		 push	 24			; 00000018H
  0004e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00055	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00058	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0005d	83 c4 04	 add	 esp, 4
  00060	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00063	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0006a	85 c0		 test	 eax, eax
  0006c	74 0c		 je	 SHORT $LN5@Initialize
  0006e	ff 75 08	 push	 DWORD PTR _dwQueSize$[ebp]
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??0CMsgQue@@QAE@K@Z	; CMsgQue::CMsgQue
  00078	eb 02		 jmp	 SHORT $LN6@Initialize
$LN5@Initialize:
  0007a	33 c0		 xor	 eax, eax
$LN6@Initialize:
; Line 20
  0007c	68 e8 03 00 00	 push	 1000			; 000003e8H
  00081	68 00 00 00 00	 push	 OFFSET ?g_csWrite@@3U_RTL_CRITICAL_SECTION@@A ; g_csWrite
  00086	89 06		 mov	 DWORD PTR [esi], eax
  00088	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionAndSpinCount@8
; Line 22
  0008e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00091	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00098	59		 pop	 ecx
  00099	5e		 pop	 esi
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Initialize@CQueManager@@QAEXKPAX@Z$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T3[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__unwindfunclet$?Initialize@CQueManager@@QAEXKPAX@Z$1:
  0000b	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
__ehhandler$?Initialize@CQueManager@@QAEXKPAX@Z:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Initialize@CQueManager@@QAEXKPAX@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Initialize@CQueManager@@QAEXKPAX@Z ENDP		; CQueManager::Initialize
; Function compile flags: /Ogtp
;	COMDAT ??_GCMsgQue@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMsgQue@@QAEPAXI@Z PROC				; CMsgQue::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CMsgQue@@QAE@XZ	; CMsgQue::~CMsgQue
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCMsgQue@@QAEPAXI@Z ENDP				; CMsgQue::`scalar deleting destructor'
_TEXT	ENDS
END
