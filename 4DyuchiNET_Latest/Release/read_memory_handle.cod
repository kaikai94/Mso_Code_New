; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	E:\GitHub\Mso_Code\4DyuchiNET_Latest\read_memory_handle.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?OnRead@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z ; CReadMemoryHandle::OnRead
PUBLIC	?OnReadC@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z ; CReadMemoryHandle::OnReadC
PUBLIC	?InitializeMemory@CReadMemoryHandle@@QAEXXZ	; CReadMemoryHandle::InitializeMemory
PUBLIC	?ResetMemory@CReadMemoryHandle@@QAEXXZ		; CReadMemoryHandle::ResetMemory
PUBLIC	??0CReadMemoryHandle@@QAE@XZ			; CReadMemoryHandle::CReadMemoryHandle
PUBLIC	??1CReadMemoryHandle@@QAE@XZ			; CReadMemoryHandle::~CReadMemoryHandle
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtp
;	COMDAT ??1CReadMemoryHandle@@QAE@XZ
_TEXT	SEGMENT
??1CReadMemoryHandle@@QAE@XZ PROC			; CReadMemoryHandle::~CReadMemoryHandle, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\read_memory_handle.cpp
; Line 175
  00000	c3		 ret	 0
??1CReadMemoryHandle@@QAE@XZ ENDP			; CReadMemoryHandle::~CReadMemoryHandle
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CReadMemoryHandle@@QAE@XZ
_TEXT	SEGMENT
??0CReadMemoryHandle@@QAE@XZ PROC			; CReadMemoryHandle::CReadMemoryHandle, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\read_memory_handle.cpp
; Line 5
  00000	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
; Line 12
  00007	8b c1		 mov	 eax, ecx
  00009	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0000f	c7 41 04 ff ff
	ff ff		 mov	 DWORD PTR [ecx+4], -1
  00016	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  0001d	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00024	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  0002b	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  00032	c3		 ret	 0
??0CReadMemoryHandle@@QAE@XZ ENDP			; CReadMemoryHandle::CReadMemoryHandle
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ResetMemory@CReadMemoryHandle@@QAEXXZ
_TEXT	SEGMENT
?ResetMemory@CReadMemoryHandle@@QAEXXZ PROC		; CReadMemoryHandle::ResetMemory, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\read_memory_handle.cpp
; Line 162
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; Line 163
  00003	83 7e 10 64	 cmp	 DWORD PTR [esi+16], 100	; 00000064H
  00007	73 26		 jae	 SHORT $LN1@ResetMemor
; Line 165
  00009	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  0000c	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
; Line 166
  0000f	52		 push	 edx
  00010	ff 76 0c	 push	 DWORD PTR [esi+12]
  00013	2b c2		 sub	 eax, edx
  00015	ff 36		 push	 DWORD PTR [esi]
  00017	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0001a	e8 00 00 00 00	 call	 _memcpy
; Line 167
  0001f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 168
  00024	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00027	03 c1		 add	 eax, ecx
  00029	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  0002c	89 46 08	 mov	 DWORD PTR [esi+8], eax
$LN1@ResetMemor:
  0002f	5e		 pop	 esi
; Line 170
  00030	c3		 ret	 0
?ResetMemory@CReadMemoryHandle@@QAEXXZ ENDP		; CReadMemoryHandle::ResetMemory
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?InitializeMemory@CReadMemoryHandle@@QAEXXZ
_TEXT	SEGMENT
?InitializeMemory@CReadMemoryHandle@@QAEXXZ PROC	; CReadMemoryHandle::InitializeMemory, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\read_memory_handle.cpp
; Line 17
  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  00005	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 18
  00008	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0000b	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
  00012	89 41 10	 mov	 DWORD PTR [ecx+16], eax
; Line 19
  00015	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
; Line 20
  0001c	c3		 ret	 0
?InitializeMemory@CReadMemoryHandle@@QAEXXZ ENDP	; CReadMemoryHandle::InitializeMemory
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?OnReadC@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z
_TEXT	SEGMENT
_dwSize$ = 8						; size = 4
_pBuf$ = 12						; size = 4
_dwBufNum$ = 16						; size = 4
_pdwTotalMsgBytes$ = 20					; size = 4
_pdwTotalMsgNum$ = 24					; size = 4
?OnReadC@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z PROC ; CReadMemoryHandle::OnReadC, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\read_memory_handle.cpp
; Line 110
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 118
  00003	8b 45 08	 mov	 eax, DWORD PTR _dwSize$[ebp]
  00006	01 41 1c	 add	 DWORD PTR [ecx+28], eax
; Line 119
  00009	01 41 08	 add	 DWORD PTR [ecx+8], eax
; Line 120
  0000c	01 41 14	 add	 DWORD PTR [ecx+20], eax
; Line 121
  0000f	29 41 10	 sub	 DWORD PTR [ecx+16], eax
; Line 127
  00012	8b 45 18	 mov	 eax, DWORD PTR _pdwTotalMsgNum$[ebp]
  00015	53		 push	 ebx
  00016	8b 5d 14	 mov	 ebx, DWORD PTR _pdwTotalMsgBytes$[ebp]
  00019	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
  0001f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 132
  00025	83 79 14 03	 cmp	 DWORD PTR [ecx+20], 3
  00029	72 3f		 jb	 SHORT $LN12@OnReadC
; Line 118
  0002b	56		 push	 esi
  0002c	8b 75 0c	 mov	 esi, DWORD PTR _pBuf$[ebp]
  0002f	57		 push	 edi
$lb_loop$16:
; Line 136
  00030	8b 79 0c	 mov	 edi, DWORD PTR [ecx+12]
; Line 138
  00033	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00036	83 e8 02	 sub	 eax, 2
  00039	0f b7 17	 movzx	 edx, WORD PTR [edi]
  0003c	3b c2		 cmp	 eax, edx
  0003e	72 28		 jb	 SHORT $LN14@OnReadC
; Line 141
  00040	8d 47 02	 lea	 eax, DWORD PTR [edi+2]
  00043	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 143
  00046	89 46 04	 mov	 DWORD PTR [esi+4], eax
; Line 149
  00049	8b 45 18	 mov	 eax, DWORD PTR _pdwTotalMsgNum$[ebp]
  0004c	89 16		 mov	 DWORD PTR [esi], edx
; Line 154
  0004e	83 c6 08	 add	 esi, 8
  00051	01 51 0c	 add	 DWORD PTR [ecx+12], edx
  00054	01 13		 add	 DWORD PTR [ebx], edx
  00056	ff 00		 inc	 DWORD PTR [eax]
  00058	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  0005d	2b c2		 sub	 eax, edx
  0005f	01 41 14	 add	 DWORD PTR [ecx+20], eax
  00062	83 79 14 03	 cmp	 DWORD PTR [ecx+20], 3
  00066	73 c8		 jae	 SHORT $lb_loop$16
$LN14@OnReadC:
  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
$LN12@OnReadC:
  0006a	5b		 pop	 ebx
; Line 158
  0006b	5d		 pop	 ebp
  0006c	c2 14 00	 ret	 20			; 00000014H
?OnReadC@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z ENDP ; CReadMemoryHandle::OnReadC
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?OnRead@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z
_TEXT	SEGMENT
_const64$ = -12						; size = 8
_this$ = -4						; size = 4
_dwSize$ = 8						; size = 4
_pBuf$ = 12						; size = 4
_dwBufNum$ = 16						; size = 4
_pdwTotalMsgBytes$ = 20					; size = 4
_pdwTotalMsgNum$ = 24					; size = 4
?OnRead@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z PROC ; CReadMemoryHandle::OnRead, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\read_memory_handle.cpp
; Line 23
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 35
  0000c	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _const64$[ebp], 1
  00013	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _const64$[ebp+4], 0
; Line 39
  0001a	0f ef c0	 pxor	 mm0, mm0
; Line 40
  0001d	0f 6f 4d f4	 movq	 mm1, MMWORD PTR _const64$[ebp]
; Line 41
  00021	0f 6e 55 0c	 movd	 mm2, DWORD PTR _pBuf$[ebp]
; Line 43
  00025	8b 5d fc	 mov	 ebx, DWORD PTR _this$[ebp]
; Line 44
  00028	8b 4d 08	 mov	 ecx, DWORD PTR _dwSize$[ebp]
; Line 45
  0002b	01 4b 08	 add	 DWORD PTR [ebx+8], ecx
; Line 46
  0002e	33 d2		 xor	 edx, edx
; Line 47
  00030	29 4b 10	 sub	 DWORD PTR [ebx+16], ecx
; Line 48
  00033	33 c0		 xor	 eax, eax
; Line 49
  00035	01 4b 14	 add	 DWORD PTR [ebx+20], ecx
; Line 50
  00038	ba 02 00 00 00	 mov	 edx, 2
$lb_dispatch$4:
; Line 55
  0003d	8b 4d 10	 mov	 ecx, DWORD PTR _dwBufNum$[ebp]
; Line 56
  00040	0b c9		 or	 ecx, ecx
; Line 57
  00042	74 3e		 je	 SHORT $lb_end$5
; Line 59
  00044	8b 4b 14	 mov	 ecx, DWORD PTR [ebx+20]
; Line 60
  00047	3b ca		 cmp	 ecx, edx
; Line 62
  00049	76 37		 jbe	 SHORT $lb_end$5
$lb_read_length$6:
; Line 65
  0004b	2b ca		 sub	 ecx, edx
; Line 66
  0004d	8b 73 0c	 mov	 esi, DWORD PTR [ebx+12]
; Line 67
  00050	0f b7 3e	 movzx	 edi, WORD PTR [esi]
; Line 69
  00053	3b cf		 cmp	 ecx, edi
; Line 70
  00055	72 2b		 jb	 SHORT $lb_end$5
; Line 72
  00057	03 f2		 add	 esi, edx
; Line 73
  00059	c1 e2 02	 shl	 edx, 2
$lb_read_msg$7:
; Line 76
  0005c	8b cf		 mov	 ecx, edi
; Line 77
  0005e	0f 7e d7	 movd	 edi, mm2
; Line 79
  00061	89 0f		 mov	 DWORD PTR [edi], ecx
; Line 80
  00063	89 77 04	 mov	 DWORD PTR [edi+4], esi
; Line 82
  00066	03 f1		 add	 esi, ecx
; Line 83
  00068	03 fa		 add	 edi, edx
; Line 84
  0006a	0f 6e d7	 movd	 mm2, edi
; Line 87
  0006d	c1 ea 02	 shr	 edx, 2
; Line 88
  00070	03 c1		 add	 eax, ecx
; Line 89
  00072	03 ca		 add	 ecx, edx
; Line 90
  00074	29 4b 14	 sub	 DWORD PTR [ebx+20], ecx
; Line 91
  00077	89 73 0c	 mov	 DWORD PTR [ebx+12], esi
; Line 93
  0007a	0f fe c1	 paddd	 mm0, mm1
; Line 94
  0007d	ff 4d 10	 dec	 DWORD PTR _dwBufNum$[ebp]
; Line 95
  00080	eb bb		 jmp	 SHORT $lb_dispatch$4
$lb_end$5:
; Line 100
  00082	8b 7d 14	 mov	 edi, DWORD PTR _pdwTotalMsgBytes$[ebp]
; Line 101
  00085	89 07		 mov	 DWORD PTR [edi], eax
; Line 102
  00087	8b 75 18	 mov	 esi, DWORD PTR _pdwTotalMsgNum$[ebp]
; Line 103
  0008a	0f 7e 06	 movd	 DWORD PTR [esi], mm0
; Line 104
  0008d	0f 77		 emms
; Line 37
  0008f	5f		 pop	 edi
  00090	5e		 pop	 esi
  00091	5b		 pop	 ebx
; Line 107
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 14 00	 ret	 20			; 00000014H
?OnRead@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z ENDP ; CReadMemoryHandle::OnRead
_TEXT	ENDS
END
