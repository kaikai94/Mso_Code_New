; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	E:\GitHub\Mso_Code\4DyuchiNET_Latest\cpio.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_hCompletionPort@@3PAXA			; g_hCompletionPort
PUBLIC	?dwWorkThreadNum@@3KA				; dwWorkThreadNum
PUBLIC	?g_hWorkerThread@@3PAPAXA			; g_hWorkerThread
PUBLIC	?g_pWsaBuf@@3PAPAU_WSABUF@@A			; g_pWsaBuf
PUBLIC	?endcount@@3KA					; endcount
_BSS	SEGMENT
?g_hCompletionPort@@3PAXA DD 01H DUP (?)		; g_hCompletionPort
?dwWorkThreadNum@@3KA DD 01H DUP (?)			; dwWorkThreadNum
?g_hWorkerThread@@3PAPAXA DD 040H DUP (?)		; g_hWorkerThread
?g_pWsaBuf@@3PAPAU_WSABUF@@A DD 040H DUP (?)		; g_pWsaBuf
?endcount@@3KA DD 01H DUP (?)				; endcount
_BSS	ENDS
PUBLIC	?InitCompletionIO@@YAHKPAX@Z			; InitCompletionIO
PUBLIC	?CloseComplitionIO@@YAXXZ			; CloseComplitionIO
PUBLIC	?CleanSocket@@YAXXZ				; CleanSocket
PUBLIC	?InitSocket@@YAXXZ				; InitSocket
PUBLIC	?GetWorkerThreadNum@@YAKXZ			; GetWorkerThreadNum
PUBLIC	?PostDisconnectEvent@@YAXK@Z			; PostDisconnectEvent
PUBLIC	?SetHeader@HEADER@@QAEXK@Z			; HEADER::SetHeader
PUBLIC	?SetActionType@HEADER@@QAEXW4ACTION_TYPE@@@Z	; HEADER::SetActionType
PUBLIC	?GetActionType@HEADER@@QAE?AW4ACTION_TYPE@@XZ	; HEADER::GetActionType
PUBLIC	?GetWritableQue@CQueManager@@QAEPAVCMsgQue@@XZ	; CQueManager::GetWritableQue
PUBLIC	?GetUsageBytes@CWriteMemoryHandle@@QAEKXZ	; CWriteMemoryHandle::GetUsageBytes
PUBLIC	?SetIOType@COverlapped@@QAEXW4IO_TYPE@@@Z	; COverlapped::SetIOType
PUBLIC	?GetIOType@COverlapped@@QAE?AW4IO_TYPE@@XZ	; COverlapped::GetIOType
PUBLIC	?ResetBuffer@COverlappedRecv@@QAEXXZ		; COverlappedRecv::ResetBuffer
PUBLIC	?OnRead@COverlappedRecv@@QAEXKPAU_WSABUF@@KPAK1@Z ; COverlappedRecv::OnRead
PUBLIC	?GetUsageBytes@COverlappedSend@@QAEKXZ		; COverlappedSend::GetUsageBytes
PUBLIC	?LockSend@COverlappedSend@@QAEXXZ		; COverlappedSend::LockSend
PUBLIC	?UnLockSend@COverlappedSend@@QAEXXZ		; COverlappedSend::UnLockSend
PUBLIC	?OnWrite@COverlappedSend@@QAEXK@Z		; COverlappedSend::OnWrite
PUBLIC	?ServerWorkerThread@@YGIPAX@Z			; ServerWorkerThread
PUBLIC	?ServerWorkerThreadLog@@YGIPAX@Z		; ServerWorkerThreadLog
PUBLIC	??_C@_05NAOIJFC@Error?$AA@			; `string'
PUBLIC	??_C@_0CJ@JJFAELEH@CreateIoCompletionPort?5failed?5wi@ ; `string'
PUBLIC	??_C@_0BM@MICHELDC@Fail?5to?5Create?5WorkerThread?$AA@ ; `string'
PUBLIC	??_C@_0BE@INMNJFJO@MainMsgQue?5Overflow?$AA@	; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__CreateIoCompletionPort@16:PROC
EXTRN	__imp__GetQueuedCompletionStatus@20:PROC
EXTRN	__imp__PostQueuedCompletionStatus@16:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__SetEvent@4:PROC
EXTRN	__imp__GetSystemInfo@4:PROC
EXTRN	__imp__WaitForMultipleObjects@16:PROC
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	__imp__GetActiveWindow@0:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	__imp__WSAStartup@8:PROC
EXTRN	__imp__WSACleanup@0:PROC
EXTRN	?PushMsg@@YAHPAVCMsgQue@@KPAU_WSABUF@@KKKPAK@Z:PROC ; PushMsg
EXTRN	?Initialize@CQueManager@@QAEXKPAX@Z:PROC	; CQueManager::Initialize
EXTRN	??0CQueManager@@QAE@XZ:PROC			; CQueManager::CQueManager
EXTRN	?OnWrite@CWriteMemoryHandle@@QAEXK@Z:PROC	; CWriteMemoryHandle::OnWrite
EXTRN	?OnRead@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z:PROC ; CReadMemoryHandle::OnRead
EXTRN	?ResetMemory@CReadMemoryHandle@@QAEXXZ:PROC	; CReadMemoryHandle::ResetMemory
EXTRN	?PrepareRead@COverlappedRecv@@QAEHXZ:PROC	; COverlappedRecv::PrepareRead
EXTRN	?SendBuffer@COverlappedSend@@QAEHXZ:PROC	; COverlappedSend::SendBuffer
EXTRN	?StartSwitchQueThread@@YAHPAXK@Z:PROC		; StartSwitchQueThread
EXTRN	?WriteLog@CLogManager@@QAEHPADK@Z:PROC		; CLogManager::WriteLog
EXTRN	__beginthreadex:PROC
EXTRN	__endthreadex:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	?g_pQueManager@@3PAVCQueManager@@A:DWORD	; g_pQueManager
EXTRN	?g_hEventMustSwitch@@3PAPAXA:QWORD		; g_hEventMustSwitch
EXTRN	?g_csSwitchQue@@3PAU_RTL_CRITICAL_SECTION@@A:BYTE ; g_csSwitchQue
EXTRN	?g_pLogManager@@3PAVCLogManager@@A:DWORD	; g_pLogManager
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BE@INMNJFJO@MainMsgQue?5Overflow?$AA@
CONST	SEGMENT
??_C@_0BE@INMNJFJO@MainMsgQue?5Overflow?$AA@ DB 'MainMsgQue Overflow', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MICHELDC@Fail?5to?5Create?5WorkerThread?$AA@
CONST	SEGMENT
??_C@_0BM@MICHELDC@Fail?5to?5Create?5WorkerThread?$AA@ DB 'Fail to Create'
	DB	' WorkerThread', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JJFAELEH@CreateIoCompletionPort?5failed?5wi@
CONST	SEGMENT
??_C@_0CJ@JJFAELEH@CreateIoCompletionPort?5failed?5wi@ DB 'CreateIoComple'
	DB	'tionPort failed with error', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NAOIJFC@Error?$AA@
CONST	SEGMENT
??_C@_05NAOIJFC@Error?$AA@ DB 'Error', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitCompletionIO@@YAHKPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitCompletionIO@@YAHKPAX@Z$0
__ehfuncinfo$?InitCompletionIO@@YAHKPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InitCompletionIO@@YAHKPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ServerWorkerThreadLog@@YGIPAX@Z
_TEXT	SEGMENT
_pBuf$1$ = -28						; size = 4
_dwTotalMsgBytes$ = -24					; size = 4
_BytesTransferred$ = -20				; size = 4
_dwTotalMsgNum$ = -16					; size = 4
_dwQueMsgNum$ = -12					; size = 4
_dwHeader$ = -8						; size = 4
_pIO$ = -4						; size = 4
_lpVoid$ = 8						; size = 4
?ServerWorkerThreadLog@@YGIPAX@Z PROC			; ServerWorkerThreadLog, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
; Line 250
  00006	8b 45 08	 mov	 eax, DWORD PTR _lpVoid$[ebp]
  00009	53		 push	 ebx
; Line 256
  0000a	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__SetEvent@4
  00010	56		 push	 esi
  00011	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?g_pWsaBuf@@3PAPAU_WSABUF@@A[eax*4]
  00018	57		 push	 edi
  00019	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__LeaveCriticalSection@4
  0001f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _dwTotalMsgNum$[ebp], 0
  00026	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _dwTotalMsgBytes$[ebp], 0
  0002d	89 45 e4	 mov	 DWORD PTR _pBuf$1$[ebp], eax
  00030	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _BytesTransferred$[ebp], 0
  00037	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _dwQueMsgNum$[ebp], 0
  0003e	8b ff		 npad	 2
$LL24@ServerWork:
; Line 266
  00040	6a ff		 push	 -1
  00042	8d 45 fc	 lea	 eax, DWORD PTR _pIO$[ebp]
  00045	50		 push	 eax
  00046	8d 45 f8	 lea	 eax, DWORD PTR _dwHeader$[ebp]
  00049	50		 push	 eax
  0004a	8d 45 ec	 lea	 eax, DWORD PTR _BytesTransferred$[ebp]
  0004d	50		 push	 eax
  0004e	ff 35 00 00 00
	00		 push	 DWORD PTR ?g_hCompletionPort@@3PAXA ; g_hCompletionPort
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetQueuedCompletionStatus@20
  0005a	85 c0		 test	 eax, eax
  0005c	75 0f		 jne	 SHORT $LN21@ServerWork
; Line 268
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00064	83 f8 40	 cmp	 eax, 64			; 00000040H
  00067	0f 85 ad 01 00
	00		 jne	 $seg_lp$69
$LN21@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 23
  0006d	8b 45 f8	 mov	 eax, DWORD PTR _dwHeader$[ebp]
  00070	8b c8		 mov	 ecx, eax
  00072	81 e1 00 00 00
	70		 and	 ecx, 1879048192		; 70000000H
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 278
  00078	81 f9 00 00 00
	30		 cmp	 ecx, 805306368		; 30000000H
  0007e	0f 84 a2 01 00
	00		 je	 $seg_destroy$70
; Line 281
  00084	8b 75 ec	 mov	 esi, DWORD PTR _BytesTransferred$[ebp]
  00087	85 f6		 test	 esi, esi
  00089	0f 84 3b 01 00
	00		 je	 $LN16@ServerWork
  0008f	81 f9 00 00 00
	20		 cmp	 ecx, 536870912		; 20000000H
  00095	0f 84 2f 01 00
	00		 je	 $LN16@ServerWork
; Line 305
  0009b	8b 55 fc	 mov	 edx, DWORD PTR _pIO$[ebp]
  0009e	85 d2		 test	 edx, edx
  000a0	0f 84 74 01 00
	00		 je	 $seg_lp$69
; Line 308
  000a6	85 c9		 test	 ecx, ecx
  000a8	0f 85 6c 01 00
	00		 jne	 $seg_lp$69
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 76
  000ae	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000b1	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 315
  000b6	83 f8 02	 cmp	 eax, 2
  000b9	0f 85 ac 00 00
	00		 jne	 $LN10@ServerWork
; File e:\github\mso_code\4dyuchinet_latest\overlapped_recv.h
; Line 17
  000bf	8d 45 f0	 lea	 eax, DWORD PTR _dwTotalMsgNum$[ebp]
  000c2	50		 push	 eax
  000c3	8d 45 e8	 lea	 eax, DWORD PTR _dwTotalMsgBytes$[ebp]
  000c6	50		 push	 eax
  000c7	68 e8 03 00 00	 push	 1000			; 000003e8H
  000cc	ff 75 e4	 push	 DWORD PTR _pBuf$1$[ebp]
  000cf	8d 4a 30	 lea	 ecx, DWORD PTR [edx+48]
  000d2	56		 push	 esi
  000d3	e8 00 00 00 00	 call	 ?OnRead@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z ; CReadMemoryHandle::OnRead
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 319
  000d8	83 7d f0 00	 cmp	 DWORD PTR _dwTotalMsgNum$[ebp], 0
  000dc	74 60		 je	 SHORT $LN8@ServerWork
; Line 322
  000de	8b 45 08	 mov	 eax, DWORD PTR _lpVoid$[ebp]
  000e1	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000e4	8d 3c c5 00 00
	00 00		 lea	 edi, DWORD PTR ?g_csSwitchQue@@3PAU_RTL_CRITICAL_SECTION@@A[eax*8]
  000eb	57		 push	 edi
  000ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; File e:\github\mso_code\4dyuchinet_latest\quemanager.h
; Line 19
  000f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pQueManager@@3PAVCQueManager@@A ; g_pQueManager
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 331
  000f7	8d 4d f4	 lea	 ecx, DWORD PTR _dwQueMsgNum$[ebp]
  000fa	51		 push	 ecx
  000fb	6a 00		 push	 0
  000fd	ff 75 e8	 push	 DWORD PTR _dwTotalMsgBytes$[ebp]
  00100	ff 75 f0	 push	 DWORD PTR _dwTotalMsgNum$[ebp]
  00103	ff 75 e4	 push	 DWORD PTR _pBuf$1$[ebp]
  00106	ff 75 f8	 push	 DWORD PTR _dwHeader$[ebp]
  00109	ff 30		 push	 DWORD PTR [eax]
  0010b	e8 00 00 00 00	 call	 ?PushMsg@@YAHPAVCMsgQue@@KPAU_WSABUF@@KKKPAK@Z ; PushMsg
  00110	83 c4 1c	 add	 esp, 28			; 0000001cH
  00113	8b f0		 mov	 esi, eax
; Line 333
  00115	57		 push	 edi
  00116	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__LeaveCriticalSection@4
  0011c	ff d7		 call	 edi
; Line 335
  0011e	85 f6		 test	 esi, esi
  00120	75 1c		 jne	 SHORT $LN8@ServerWork
; Line 337
  00122	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@INMNJFJO@MainMsgQue?5Overflow?$AA@
  00127	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0012d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pLogManager@@3PAVCLogManager@@A ; g_pLogManager
  00133	50		 push	 eax
  00134	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@INMNJFJO@MainMsgQue?5Overflow?$AA@
  00139	e8 00 00 00 00	 call	 ?WriteLog@CLogManager@@QAEHPADK@Z ; CLogManager::WriteLog
$LN8@ServerWork:
; Line 342
  0013e	83 7d f4 00	 cmp	 DWORD PTR _dwQueMsgNum$[ebp], 0
  00142	74 08		 je	 SHORT $LN7@ServerWork
; Line 343
  00144	ff 35 00 00 00
	00		 push	 DWORD PTR ?g_hEventMustSwitch@@3PAPAXA
  0014a	ff d3		 call	 ebx
$LN7@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\overlapped_recv.h
; Line 14
  0014c	8b 4d fc	 mov	 ecx, DWORD PTR _pIO$[ebp]
  0014f	8d 49 30	 lea	 ecx, DWORD PTR [ecx+48]
  00152	e8 00 00 00 00	 call	 ?ResetMemory@CReadMemoryHandle@@QAEXXZ ; CReadMemoryHandle::ResetMemory
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 346
  00157	8b 4d fc	 mov	 ecx, DWORD PTR _pIO$[ebp]
  0015a	e8 00 00 00 00	 call	 ?PrepareRead@COverlappedRecv@@QAEHXZ ; COverlappedRecv::PrepareRead
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 20
  0015f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwHeader$[ebp], 0
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 370
  00166	e9 d5 fe ff ff	 jmp	 $LL24@ServerWork
$LN10@ServerWork:
; Line 350
  0016b	83 f8 01	 cmp	 eax, 1
  0016e	0f 85 a6 00 00
	00		 jne	 $seg_lp$69
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 16
  00174	8d 42 50	 lea	 eax, DWORD PTR [edx+80]
  00177	50		 push	 eax
  00178	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 20
  0017e	8b 4d fc	 mov	 ecx, DWORD PTR _pIO$[ebp]
  00181	ff 75 ec	 push	 DWORD PTR _BytesTransferred$[ebp]
  00184	8d 49 30	 lea	 ecx, DWORD PTR [ecx+48]
  00187	e8 00 00 00 00	 call	 ?OnWrite@CWriteMemoryHandle@@QAEXK@Z ; CWriteMemoryHandle::OnWrite
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 358
  0018c	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  0018f	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  00193	74 1c		 je	 SHORT $LN3@ServerWork
; Line 359
  00195	8b c8		 mov	 ecx, eax
  00197	e8 00 00 00 00	 call	 ?SendBuffer@COverlappedSend@@QAEHXZ ; COverlappedSend::SendBuffer
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 17
  0019c	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  0019f	83 c0 50	 add	 eax, 80			; 00000050H
  001a2	50		 push	 eax
  001a3	ff d7		 call	 edi
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 20
  001a5	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwHeader$[ebp], 0
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 370
  001ac	e9 8f fe ff ff	 jmp	 $LL24@ServerWork
$LN3@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 75
  001b1	c6 40 14 03	 mov	 BYTE PTR [eax+20], 3
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 17
  001b5	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  001b8	83 c0 50	 add	 eax, 80			; 00000050H
  001bb	50		 push	 eax
  001bc	ff d7		 call	 edi
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 20
  001be	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwHeader$[ebp], 0
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 370
  001c5	e9 76 fe ff ff	 jmp	 $LL24@ServerWork
$LN16@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 21
  001ca	25 ff ff ff af	 and	 eax, -1342177281	; afffffffH
  001cf	0d 00 00 00 20	 or	 eax, 536870912		; 20000000H
  001d4	89 45 f8	 mov	 DWORD PTR _dwHeader$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 286
  001d7	8b 45 08	 mov	 eax, DWORD PTR _lpVoid$[ebp]
  001da	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  001dd	8d 34 c5 00 00
	00 00		 lea	 esi, DWORD PTR ?g_csSwitchQue@@3PAU_RTL_CRITICAL_SECTION@@A[eax*8]
  001e4	56		 push	 esi
  001e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 296
  001eb	8d 45 f4	 lea	 eax, DWORD PTR _dwQueMsgNum$[ebp]
  001ee	50		 push	 eax
  001ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pQueManager@@3PAVCQueManager@@A ; g_pQueManager
  001f4	6a 00		 push	 0
  001f6	6a 00		 push	 0
  001f8	6a 01		 push	 1
  001fa	6a 00		 push	 0
  001fc	ff 75 f8	 push	 DWORD PTR _dwHeader$[ebp]
  001ff	ff 30		 push	 DWORD PTR [eax]
  00201	e8 00 00 00 00	 call	 ?PushMsg@@YAHPAVCMsgQue@@KPAU_WSABUF@@KKKPAK@Z ; PushMsg
  00206	83 c4 1c	 add	 esp, 28			; 0000001cH
; Line 298
  00209	56		 push	 esi
  0020a	ff d7		 call	 edi
; Line 299
  0020c	83 7d f4 00	 cmp	 DWORD PTR _dwQueMsgNum$[ebp], 0
  00210	74 08		 je	 SHORT $seg_lp$69
; Line 300
  00212	ff 35 00 00 00
	00		 push	 DWORD PTR ?g_hEventMustSwitch@@3PAPAXA
  00218	ff d3		 call	 ebx
$seg_lp$69:
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 20
  0021a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwHeader$[ebp], 0
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 370
  00221	e9 1a fe ff ff	 jmp	 $LL24@ServerWork
$seg_destroy$70:
; Line 372
  00226	6a 00		 push	 0
  00228	e8 00 00 00 00	 call	 __endthreadex
  0022d	83 c4 04	 add	 esp, 4
; Line 374
  00230	33 c0		 xor	 eax, eax
  00232	5f		 pop	 edi
  00233	5e		 pop	 esi
  00234	5b		 pop	 ebx
; Line 375
  00235	8b e5		 mov	 esp, ebp
  00237	5d		 pop	 ebp
  00238	c2 04 00	 ret	 4
?ServerWorkerThreadLog@@YGIPAX@Z ENDP			; ServerWorkerThreadLog
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ServerWorkerThread@@YGIPAX@Z
_TEXT	SEGMENT
_pBuf$1$ = -28						; size = 4
_dwTotalMsgBytes$ = -24					; size = 4
_BytesTransferred$ = -20				; size = 4
_dwTotalMsgNum$ = -16					; size = 4
_dwQueMsgNum$ = -12					; size = 4
_dwHeader$ = -8						; size = 4
_pIO$ = -4						; size = 4
_lpVoid$ = 8						; size = 4
?ServerWorkerThread@@YGIPAX@Z PROC			; ServerWorkerThread, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 114
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
; Line 121
  00006	8b 45 08	 mov	 eax, DWORD PTR _lpVoid$[ebp]
  00009	53		 push	 ebx
; Line 127
  0000a	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__LeaveCriticalSection@4
  00010	56		 push	 esi
  00011	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?g_pWsaBuf@@3PAPAU_WSABUF@@A[eax*4]
  00018	57		 push	 edi
  00019	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__SetEvent@4
  0001f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _dwTotalMsgNum$[ebp], 0
  00026	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _dwTotalMsgBytes$[ebp], 0
  0002d	89 45 e4	 mov	 DWORD PTR _pBuf$1$[ebp], eax
  00030	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _BytesTransferred$[ebp], 0
  00037	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _dwQueMsgNum$[ebp], 0
  0003e	8b ff		 npad	 2
$LL23@ServerWork:
; Line 136
  00040	6a ff		 push	 -1
  00042	8d 45 fc	 lea	 eax, DWORD PTR _pIO$[ebp]
  00045	50		 push	 eax
  00046	8d 45 f8	 lea	 eax, DWORD PTR _dwHeader$[ebp]
  00049	50		 push	 eax
  0004a	8d 45 ec	 lea	 eax, DWORD PTR _BytesTransferred$[ebp]
  0004d	50		 push	 eax
  0004e	ff 35 00 00 00
	00		 push	 DWORD PTR ?g_hCompletionPort@@3PAXA ; g_hCompletionPort
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetQueuedCompletionStatus@20
  0005a	85 c0		 test	 eax, eax
  0005c	75 0f		 jne	 SHORT $LN20@ServerWork
; Line 138
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00064	83 f8 40	 cmp	 eax, 64			; 00000040H
  00067	0f 85 85 01 00
	00		 jne	 $seg_lp$68
$LN20@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 23
  0006d	8b 45 f8	 mov	 eax, DWORD PTR _dwHeader$[ebp]
  00070	8b c8		 mov	 ecx, eax
  00072	81 e1 00 00 00
	70		 and	 ecx, 1879048192		; 70000000H
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 149
  00078	81 f9 00 00 00
	30		 cmp	 ecx, 805306368		; 30000000H
  0007e	0f 84 7a 01 00
	00		 je	 $seg_destroy$69
; Line 152
  00084	8b 75 ec	 mov	 esi, DWORD PTR _BytesTransferred$[ebp]
  00087	85 f6		 test	 esi, esi
  00089	0f 84 13 01 00
	00		 je	 $LN15@ServerWork
  0008f	81 f9 00 00 00
	20		 cmp	 ecx, 536870912		; 20000000H
  00095	0f 84 07 01 00
	00		 je	 $LN15@ServerWork
; Line 176
  0009b	8b 55 fc	 mov	 edx, DWORD PTR _pIO$[ebp]
  0009e	85 d2		 test	 edx, edx
  000a0	0f 84 4c 01 00
	00		 je	 $seg_lp$68
; Line 179
  000a6	85 c9		 test	 ecx, ecx
  000a8	0f 85 44 01 00
	00		 jne	 $seg_lp$68
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 76
  000ae	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000b1	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 186
  000b6	83 f8 02	 cmp	 eax, 2
  000b9	0f 85 84 00 00
	00		 jne	 $LN9@ServerWork
; File e:\github\mso_code\4dyuchinet_latest\overlapped_recv.h
; Line 17
  000bf	8d 45 f0	 lea	 eax, DWORD PTR _dwTotalMsgNum$[ebp]
  000c2	50		 push	 eax
  000c3	8d 45 e8	 lea	 eax, DWORD PTR _dwTotalMsgBytes$[ebp]
  000c6	50		 push	 eax
  000c7	68 e8 03 00 00	 push	 1000			; 000003e8H
  000cc	ff 75 e4	 push	 DWORD PTR _pBuf$1$[ebp]
  000cf	8d 4a 30	 lea	 ecx, DWORD PTR [edx+48]
  000d2	56		 push	 esi
  000d3	e8 00 00 00 00	 call	 ?OnRead@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z ; CReadMemoryHandle::OnRead
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 191
  000d8	83 7d f0 00	 cmp	 DWORD PTR _dwTotalMsgNum$[ebp], 0
  000dc	74 38		 je	 SHORT $LN8@ServerWork
; Line 194
  000de	8b 45 08	 mov	 eax, DWORD PTR _lpVoid$[ebp]
  000e1	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000e4	8d 34 c5 00 00
	00 00		 lea	 esi, DWORD PTR ?g_csSwitchQue@@3PAU_RTL_CRITICAL_SECTION@@A[eax*8]
  000eb	56		 push	 esi
  000ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 203
  000f2	8d 45 f4	 lea	 eax, DWORD PTR _dwQueMsgNum$[ebp]
  000f5	50		 push	 eax
  000f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pQueManager@@3PAVCQueManager@@A ; g_pQueManager
  000fb	6a 00		 push	 0
  000fd	ff 75 e8	 push	 DWORD PTR _dwTotalMsgBytes$[ebp]
  00100	ff 75 f0	 push	 DWORD PTR _dwTotalMsgNum$[ebp]
  00103	ff 75 e4	 push	 DWORD PTR _pBuf$1$[ebp]
  00106	ff 75 f8	 push	 DWORD PTR _dwHeader$[ebp]
  00109	ff 30		 push	 DWORD PTR [eax]
  0010b	e8 00 00 00 00	 call	 ?PushMsg@@YAHPAVCMsgQue@@KPAU_WSABUF@@KKKPAK@Z ; PushMsg
  00110	83 c4 1c	 add	 esp, 28			; 0000001cH
; Line 205
  00113	56		 push	 esi
  00114	ff d3		 call	 ebx
$LN8@ServerWork:
; Line 208
  00116	83 7d f4 00	 cmp	 DWORD PTR _dwQueMsgNum$[ebp], 0
  0011a	74 08		 je	 SHORT $LN7@ServerWork
; Line 209
  0011c	ff 35 00 00 00
	00		 push	 DWORD PTR ?g_hEventMustSwitch@@3PAPAXA
  00122	ff d7		 call	 edi
$LN7@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\overlapped_recv.h
; Line 14
  00124	8b 4d fc	 mov	 ecx, DWORD PTR _pIO$[ebp]
  00127	8d 49 30	 lea	 ecx, DWORD PTR [ecx+48]
  0012a	e8 00 00 00 00	 call	 ?ResetMemory@CReadMemoryHandle@@QAEXXZ ; CReadMemoryHandle::ResetMemory
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 212
  0012f	8b 4d fc	 mov	 ecx, DWORD PTR _pIO$[ebp]
  00132	e8 00 00 00 00	 call	 ?PrepareRead@COverlappedRecv@@QAEHXZ ; COverlappedRecv::PrepareRead
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 20
  00137	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwHeader$[ebp], 0
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 236
  0013e	e9 fd fe ff ff	 jmp	 $LL23@ServerWork
$LN9@ServerWork:
; Line 216
  00143	83 f8 01	 cmp	 eax, 1
  00146	0f 85 a6 00 00
	00		 jne	 $seg_lp$68
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 16
  0014c	8d 42 50	 lea	 eax, DWORD PTR [edx+80]
  0014f	50		 push	 eax
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 20
  00156	8b 4d fc	 mov	 ecx, DWORD PTR _pIO$[ebp]
  00159	ff 75 ec	 push	 DWORD PTR _BytesTransferred$[ebp]
  0015c	8d 49 30	 lea	 ecx, DWORD PTR [ecx+48]
  0015f	e8 00 00 00 00	 call	 ?OnWrite@CWriteMemoryHandle@@QAEXK@Z ; CWriteMemoryHandle::OnWrite
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 224
  00164	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  00167	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  0016b	74 1c		 je	 SHORT $LN3@ServerWork
; Line 225
  0016d	8b c8		 mov	 ecx, eax
  0016f	e8 00 00 00 00	 call	 ?SendBuffer@COverlappedSend@@QAEHXZ ; COverlappedSend::SendBuffer
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 17
  00174	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  00177	83 c0 50	 add	 eax, 80			; 00000050H
  0017a	50		 push	 eax
  0017b	ff d3		 call	 ebx
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 20
  0017d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwHeader$[ebp], 0
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 236
  00184	e9 b7 fe ff ff	 jmp	 $LL23@ServerWork
$LN3@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 75
  00189	c6 40 14 03	 mov	 BYTE PTR [eax+20], 3
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 17
  0018d	8b 45 fc	 mov	 eax, DWORD PTR _pIO$[ebp]
  00190	83 c0 50	 add	 eax, 80			; 00000050H
  00193	50		 push	 eax
  00194	ff d3		 call	 ebx
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 20
  00196	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwHeader$[ebp], 0
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 236
  0019d	e9 9e fe ff ff	 jmp	 $LL23@ServerWork
$LN15@ServerWork:
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 21
  001a2	25 ff ff ff af	 and	 eax, -1342177281	; afffffffH
  001a7	0d 00 00 00 20	 or	 eax, 536870912		; 20000000H
  001ac	89 45 f8	 mov	 DWORD PTR _dwHeader$[ebp], eax
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 157
  001af	8b 45 08	 mov	 eax, DWORD PTR _lpVoid$[ebp]
  001b2	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  001b5	8d 34 c5 00 00
	00 00		 lea	 esi, DWORD PTR ?g_csSwitchQue@@3PAU_RTL_CRITICAL_SECTION@@A[eax*8]
  001bc	56		 push	 esi
  001bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 167
  001c3	8d 45 f4	 lea	 eax, DWORD PTR _dwQueMsgNum$[ebp]
  001c6	50		 push	 eax
  001c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pQueManager@@3PAVCQueManager@@A ; g_pQueManager
  001cc	6a 00		 push	 0
  001ce	6a 00		 push	 0
  001d0	6a 01		 push	 1
  001d2	6a 00		 push	 0
  001d4	ff 75 f8	 push	 DWORD PTR _dwHeader$[ebp]
  001d7	ff 30		 push	 DWORD PTR [eax]
  001d9	e8 00 00 00 00	 call	 ?PushMsg@@YAHPAVCMsgQue@@KPAU_WSABUF@@KKKPAK@Z ; PushMsg
  001de	83 c4 1c	 add	 esp, 28			; 0000001cH
; Line 169
  001e1	56		 push	 esi
  001e2	ff d3		 call	 ebx
; Line 170
  001e4	83 7d f4 00	 cmp	 DWORD PTR _dwQueMsgNum$[ebp], 0
  001e8	74 08		 je	 SHORT $seg_lp$68
; Line 171
  001ea	ff 35 00 00 00
	00		 push	 DWORD PTR ?g_hEventMustSwitch@@3PAPAXA
  001f0	ff d7		 call	 edi
$seg_lp$68:
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 20
  001f2	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwHeader$[ebp], 0
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 236
  001f9	e9 42 fe ff ff	 jmp	 $LL23@ServerWork
$seg_destroy$69:
; Line 238
  001fe	6a 00		 push	 0
  00200	e8 00 00 00 00	 call	 __endthreadex
  00205	83 c4 04	 add	 esp, 4
; Line 240
  00208	33 c0		 xor	 eax, eax
  0020a	5f		 pop	 edi
  0020b	5e		 pop	 esi
  0020c	5b		 pop	 ebx
; Line 241
  0020d	8b e5		 mov	 esp, ebp
  0020f	5d		 pop	 ebp
  00210	c2 04 00	 ret	 4
?ServerWorkerThread@@YGIPAX@Z ENDP			; ServerWorkerThread
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?OnWrite@COverlappedSend@@QAEXK@Z
_TEXT	SEGMENT
_dwLength$ = 8						; size = 4
?OnWrite@COverlappedSend@@QAEXK@Z PROC			; COverlappedSend::OnWrite, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 20
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 c1 30	 add	 ecx, 48			; 00000030H
  00006	5d		 pop	 ebp
  00007	e9 00 00 00 00	 jmp	 ?OnWrite@CWriteMemoryHandle@@QAEXK@Z ; CWriteMemoryHandle::OnWrite
?OnWrite@COverlappedSend@@QAEXK@Z ENDP			; COverlappedSend::OnWrite
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?UnLockSend@COverlappedSend@@QAEXXZ
_TEXT	SEGMENT
?UnLockSend@COverlappedSend@@QAEXXZ PROC		; COverlappedSend::UnLockSend, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 17
  00000	8d 41 50	 lea	 eax, DWORD PTR [ecx+80]
  00003	50		 push	 eax
  00004	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
  0000a	c3		 ret	 0
?UnLockSend@COverlappedSend@@QAEXXZ ENDP		; COverlappedSend::UnLockSend
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?LockSend@COverlappedSend@@QAEXXZ
_TEXT	SEGMENT
?LockSend@COverlappedSend@@QAEXXZ PROC			; COverlappedSend::LockSend, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 16
  00000	8d 41 50	 lea	 eax, DWORD PTR [ecx+80]
  00003	50		 push	 eax
  00004	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
  0000a	c3		 ret	 0
?LockSend@COverlappedSend@@QAEXXZ ENDP			; COverlappedSend::LockSend
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetUsageBytes@COverlappedSend@@QAEKXZ
_TEXT	SEGMENT
?GetUsageBytes@COverlappedSend@@QAEKXZ PROC		; COverlappedSend::GetUsageBytes, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\overlapped_send.h
; Line 14
  00000	8b 41 44	 mov	 eax, DWORD PTR [ecx+68]
  00003	c3		 ret	 0
?GetUsageBytes@COverlappedSend@@QAEKXZ ENDP		; COverlappedSend::GetUsageBytes
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?OnRead@COverlappedRecv@@QAEXKPAU_WSABUF@@KPAK1@Z
_TEXT	SEGMENT
_dwSize$ = 8						; size = 4
_pBuf$ = 12						; size = 4
_dwBufNum$ = 16						; size = 4
_pdwTotalMsgBytes$ = 20					; size = 4
_pdwMsgNum$ = 24					; size = 4
?OnRead@COverlappedRecv@@QAEXKPAU_WSABUF@@KPAK1@Z PROC	; COverlappedRecv::OnRead, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\overlapped_recv.h
; Line 16
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 17
  00003	83 c1 30	 add	 ecx, 48			; 00000030H
; Line 19
  00006	5d		 pop	 ebp
; Line 17
  00007	e9 00 00 00 00	 jmp	 ?OnRead@CReadMemoryHandle@@QAEXKPAU_WSABUF@@KPAK1@Z ; CReadMemoryHandle::OnRead
?OnRead@COverlappedRecv@@QAEXKPAU_WSABUF@@KPAK1@Z ENDP	; COverlappedRecv::OnRead
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ResetBuffer@COverlappedRecv@@QAEXXZ
_TEXT	SEGMENT
?ResetBuffer@COverlappedRecv@@QAEXXZ PROC		; COverlappedRecv::ResetBuffer, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\overlapped_recv.h
; Line 14
  00000	83 c1 30	 add	 ecx, 48			; 00000030H
  00003	e9 00 00 00 00	 jmp	 ?ResetMemory@CReadMemoryHandle@@QAEXXZ ; CReadMemoryHandle::ResetMemory
?ResetBuffer@COverlappedRecv@@QAEXXZ ENDP		; COverlappedRecv::ResetBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetIOType@COverlapped@@QAE?AW4IO_TYPE@@XZ
_TEXT	SEGMENT
?GetIOType@COverlapped@@QAE?AW4IO_TYPE@@XZ PROC		; COverlapped::GetIOType, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 76
  00000	0f b6 41 14	 movzx	 eax, BYTE PTR [ecx+20]
  00004	c3		 ret	 0
?GetIOType@COverlapped@@QAE?AW4IO_TYPE@@XZ ENDP		; COverlapped::GetIOType
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetIOType@COverlapped@@QAEXW4IO_TYPE@@@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?SetIOType@COverlapped@@QAEXW4IO_TYPE@@@Z PROC		; COverlapped::SetIOType, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 75
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00006	25 00 ff ff ff	 and	 eax, -256		; ffffff00H
  0000b	0b 45 08	 or	 eax, DWORD PTR _type$[ebp]
  0000e	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?SetIOType@COverlapped@@QAEXW4IO_TYPE@@@Z ENDP		; COverlapped::SetIOType
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetUsageBytes@CWriteMemoryHandle@@QAEKXZ
_TEXT	SEGMENT
?GetUsageBytes@CWriteMemoryHandle@@QAEKXZ PROC		; CWriteMemoryHandle::GetUsageBytes, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\write_memory_handle.h
; Line 24
  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00003	c3		 ret	 0
?GetUsageBytes@CWriteMemoryHandle@@QAEKXZ ENDP		; CWriteMemoryHandle::GetUsageBytes
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetWritableQue@CQueManager@@QAEPAVCMsgQue@@XZ
_TEXT	SEGMENT
?GetWritableQue@CQueManager@@QAEPAVCMsgQue@@XZ PROC	; CQueManager::GetWritableQue, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\quemanager.h
; Line 19
  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	c3		 ret	 0
?GetWritableQue@CQueManager@@QAEPAVCMsgQue@@XZ ENDP	; CQueManager::GetWritableQue
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetActionType@HEADER@@QAE?AW4ACTION_TYPE@@XZ
_TEXT	SEGMENT
?GetActionType@HEADER@@QAE?AW4ACTION_TYPE@@XZ PROC	; HEADER::GetActionType, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 23
  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	25 00 00 00 70	 and	 eax, 1879048192		; 70000000H
  00007	c3		 ret	 0
?GetActionType@HEADER@@QAE?AW4ACTION_TYPE@@XZ ENDP	; HEADER::GetActionType
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetActionType@HEADER@@QAEXW4ACTION_TYPE@@@Z
_TEXT	SEGMENT
_acType$ = 8						; size = 4
?SetActionType@HEADER@@QAEXW4ACTION_TYPE@@@Z PROC	; HEADER::SetActionType, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 21
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	25 ff ff ff 8f	 and	 eax, -1879048193	; 8fffffffH
  0000a	0b 45 08	 or	 eax, DWORD PTR _acType$[ebp]
  0000d	89 01		 mov	 DWORD PTR [ecx], eax
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?SetActionType@HEADER@@QAEXW4ACTION_TYPE@@@Z ENDP	; HEADER::SetActionType
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetHeader@HEADER@@QAEXK@Z
_TEXT	SEGMENT
_dwHandle$ = 8						; size = 4
?SetHeader@HEADER@@QAEXK@Z PROC				; HEADER::SetHeader, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 20
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _dwHandle$[ebp]
  00006	89 01		 mov	 DWORD PTR [ecx], eax
  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?SetHeader@HEADER@@QAEXK@Z ENDP				; HEADER::SetHeader
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?PostDisconnectEvent@@YAXK@Z
_TEXT	SEGMENT
_dwHandle$ = 8						; size = 4
?PostDisconnectEvent@@YAXK@Z PROC			; PostDisconnectEvent, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 423
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 21
  00003	8b 45 08	 mov	 eax, DWORD PTR _dwHandle$[ebp]
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 428
  00006	6a 00		 push	 0
; File e:\github\mso_code\4dyuchinet_latest\que.h
; Line 21
  00008	25 ff ff ff af	 and	 eax, -1342177281	; afffffffH
  0000d	0d 00 00 00 20	 or	 eax, 536870912		; 20000000H
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 428
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	ff 35 00 00 00
	00		 push	 DWORD PTR ?g_hCompletionPort@@3PAXA ; g_hCompletionPort
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQueuedCompletionStatus@16
; Line 429
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?PostDisconnectEvent@@YAXK@Z ENDP			; PostDisconnectEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetWorkerThreadNum@@YAKXZ
_TEXT	SEGMENT
?GetWorkerThreadNum@@YAKXZ PROC				; GetWorkerThreadNum, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 33
  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?dwWorkThreadNum@@3KA ; dwWorkThreadNum
; Line 34
  00005	c3		 ret	 0
?GetWorkerThreadNum@@YAKXZ ENDP				; GetWorkerThreadNum
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?InitSocket@@YAXXZ
_TEXT	SEGMENT
_wsaData$ = -404					; size = 400
__$ArrayPad$ = -4					; size = 4
?InitSocket@@YAXXZ PROC					; InitSocket, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 40
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 01 00
	00		 sub	 esp, 404		; 00000194H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 46
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSACleanup@0
; Line 48
  00019	8d 85 6c fe ff
	ff		 lea	 eax, DWORD PTR _wsaData$[ebp]
  0001f	50		 push	 eax
  00020	68 02 02 00 00	 push	 514			; 00000202H
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSAStartup@8
; Line 50
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0002e	33 cd		 xor	 ecx, ebp
  00030	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?InitSocket@@YAXXZ ENDP					; InitSocket
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?CleanSocket@@YAXXZ
_TEXT	SEGMENT
?CleanSocket@@YAXXZ PROC				; CleanSocket, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 418
  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp__WSACleanup@0
?CleanSocket@@YAXXZ ENDP				; CleanSocket
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?CloseComplitionIO@@YAXXZ
_TEXT	SEGMENT
?CloseComplitionIO@@YAXXZ PROC				; CloseComplitionIO, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 386
  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_hCompletionPort@@3PAXA ; g_hCompletionPort
  00005	85 c0		 test	 eax, eax
  00007	0f 84 a9 00 00
	00		 je	 $LN10@CloseCompl
; Line 389
  0000d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?dwWorkThreadNum@@3KA ; dwWorkThreadNum
  00013	56		 push	 esi
  00014	33 f6		 xor	 esi, esi
  00016	57		 push	 edi
  00017	85 c9		 test	 ecx, ecx
  00019	74 24		 je	 SHORT $LN30@CloseCompl
  0001b	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__PostQueuedCompletionStatus@16
$LL9@CloseCompl:
; Line 390
  00021	6a 00		 push	 0
  00023	68 00 00 00 30	 push	 805306368		; 30000000H
  00028	6a 00		 push	 0
  0002a	50		 push	 eax
  0002b	ff d7		 call	 edi
  0002d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?dwWorkThreadNum@@3KA ; dwWorkThreadNum
  00033	46		 inc	 esi
  00034	3b f1		 cmp	 esi, ecx
  00036	73 07		 jae	 SHORT $LN30@CloseCompl
; Line 389
  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_hCompletionPort@@3PAXA ; g_hCompletionPort
  0003d	eb e2		 jmp	 SHORT $LL9@CloseCompl
$LN30@CloseCompl:
; Line 392
  0003f	6a ff		 push	 -1
  00041	6a 01		 push	 1
  00043	68 00 00 00 00	 push	 OFFSET ?g_hWorkerThread@@3PAPAXA ; g_hWorkerThread
  00048	51		 push	 ecx
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForMultipleObjects@16
; Line 395
  0004f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?dwWorkThreadNum@@3KA ; dwWorkThreadNum
  00054	33 f6		 xor	 esi, esi
  00056	85 c0		 test	 eax, eax
  00058	74 1f		 je	 SHORT $LN4@CloseCompl
  0005a	8d 9b 00 00 00
	00		 npad	 6
$LL6@CloseCompl:
; Line 397
  00060	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?g_pWsaBuf@@3PAPAU_WSABUF@@A[esi*4]
  00067	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?dwWorkThreadNum@@3KA ; dwWorkThreadNum
  00071	46		 inc	 esi
  00072	83 c4 04	 add	 esp, 4
  00075	3b f0		 cmp	 esi, eax
  00077	72 e7		 jb	 SHORT $LL6@CloseCompl
$LN4@CloseCompl:
; Line 400
  00079	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__CloseHandle@4
  0007f	33 f6		 xor	 esi, esi
  00081	85 c0		 test	 eax, eax
  00083	74 1d		 je	 SHORT $LN1@CloseCompl
$LL3@CloseCompl:
; Line 402
  00085	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?g_hWorkerThread@@3PAPAXA[esi*4]
  0008c	ff d7		 call	 edi
; Line 403
  0008e	c7 04 b5 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?g_hWorkerThread@@3PAPAXA[esi*4], 0
  00099	46		 inc	 esi
  0009a	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?dwWorkThreadNum@@3KA ; dwWorkThreadNum
  000a0	72 e3		 jb	 SHORT $LL3@CloseCompl
$LN1@CloseCompl:
; Line 407
  000a2	ff 35 00 00 00
	00		 push	 DWORD PTR ?g_hCompletionPort@@3PAXA ; g_hCompletionPort
  000a8	ff d7		 call	 edi
  000aa	5f		 pop	 edi
; Line 408
  000ab	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_hCompletionPort@@3PAXA, 0 ; g_hCompletionPort
  000b5	5e		 pop	 esi
$LN10@CloseCompl:
; Line 413
  000b6	c3		 ret	 0
?CloseComplitionIO@@YAXXZ ENDP				; CloseComplitionIO
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?InitCompletionIO@@YAHKPAX@Z
_TEXT	SEGMENT
_SystemInfo$ = -56					; size = 36
$T2 = -20						; size = 4
_ThreadID$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_size$ = 8						; size = 4
_hMsgHandle$ = 12					; size = 4
?InitCompletionIO@@YAHKPAX@Z PROC			; InitCompletionIO, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\cpio.cpp
; Line 55
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InitCompletionIO@@YAHKPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 56
  00026	68 00 01 00 00	 push	 256			; 00000100H
  0002b	6a 00		 push	 0
  0002d	68 00 00 00 00	 push	 OFFSET ?g_pWsaBuf@@3PAPAU_WSABUF@@A ; g_pWsaBuf
  00032	e8 00 00 00 00	 call	 _memset
; Line 68
  00037	6a 08		 push	 8
  00039	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003e	83 c4 10	 add	 esp, 16			; 00000010H
  00041	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004b	85 c0		 test	 eax, eax
  0004d	74 09		 je	 SHORT $LN10@InitComple
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ??0CQueManager@@QAE@XZ	; CQueManager::CQueManager
  00056	eb 02		 jmp	 SHORT $LN11@InitComple
$LN10@InitComple:
  00058	33 c0		 xor	 eax, eax
$LN11@InitComple:
; Line 69
  0005a	ff 75 0c	 push	 DWORD PTR _hMsgHandle$[ebp]
  0005d	8b c8		 mov	 ecx, eax
  0005f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00066	ff 75 08	 push	 DWORD PTR _size$[ebp]
  00069	a3 00 00 00 00	 mov	 DWORD PTR ?g_pQueManager@@3PAVCQueManager@@A, eax ; g_pQueManager
  0006e	e8 00 00 00 00	 call	 ?Initialize@CQueManager@@QAEXKPAX@Z ; CQueManager::Initialize
; Line 77
  00073	6a 00		 push	 0
  00075	6a 00		 push	 0
  00077	6a 00		 push	 0
  00079	6a ff		 push	 -1
  0007b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _ThreadID$[ebp], 0
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateIoCompletionPort@16
  00088	a3 00 00 00 00	 mov	 DWORD PTR ?g_hCompletionPort@@3PAXA, eax ; g_hCompletionPort
  0008d	85 c0		 test	 eax, eax
  0008f	75 2a		 jne	 SHORT $LN7@InitComple
; Line 79
  00091	50		 push	 eax
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@JJFAELEH@CreateIoCompletionPort?5failed?5wi@
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetActiveWindow@0
  000a2	50		 push	 eax
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
; Line 80
  000a9	33 c0		 xor	 eax, eax
; Line 106
  000ab	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ae	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b5	59		 pop	 ecx
  000b6	5e		 pop	 esi
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c3		 ret	 0
$LN7@InitComple:
; Line 84
  000bb	8d 45 c8	 lea	 eax, DWORD PTR _SystemInfo$[ebp]
  000be	50		 push	 eax
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemInfo@4
; Line 85
  000c5	8b 45 dc	 mov	 eax, DWORD PTR _SystemInfo$[ebp+20]
  000c8	33 f6		 xor	 esi, esi
  000ca	03 c0		 add	 eax, eax
  000cc	0f 84 94 00 00
	00		 je	 $LN18@InitComple
$LL6@InitComple:
; Line 87
  000d2	68 40 1f 00 00	 push	 8000			; 00001f40H
  000d7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; Line 88
  000dc	68 40 1f 00 00	 push	 8000			; 00001f40H
  000e1	6a 00		 push	 0
  000e3	50		 push	 eax
  000e4	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?g_pWsaBuf@@3PAPAU_WSABUF@@A[esi*4], eax
  000eb	e8 00 00 00 00	 call	 _memset
  000f0	83 c4 10	 add	 esp, 16			; 00000010H
; Line 91
  000f3	8d 45 f0	 lea	 eax, DWORD PTR _ThreadID$[ebp]
  000f6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pLogManager@@3PAVCLogManager@@A, 0 ; g_pLogManager
  000fd	50		 push	 eax
  000fe	6a 00		 push	 0
  00100	56		 push	 esi
  00101	74 07		 je	 SHORT $LN3@InitComple
  00103	68 00 00 00 00	 push	 OFFSET ?ServerWorkerThreadLog@@YGIPAX@Z ; ServerWorkerThreadLog
; Line 92
  00108	eb 05		 jmp	 SHORT $LN20@InitComple
$LN3@InitComple:
; Line 93
  0010a	68 00 00 00 00	 push	 OFFSET ?ServerWorkerThread@@YGIPAX@Z ; ServerWorkerThread
$LN20@InitComple:
  0010f	6a 00		 push	 0
  00111	6a 00		 push	 0
  00113	e8 00 00 00 00	 call	 __beginthreadex
  00118	83 c4 18	 add	 esp, 24			; 00000018H
  0011b	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?g_hWorkerThread@@3PAPAXA[esi*4], eax
; Line 96
  00122	83 f8 ff	 cmp	 eax, -1
  00125	74 19		 je	 SHORT $LN14@InitComple
; Line 101
  00127	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?dwWorkThreadNum@@3KA ; dwWorkThreadNum
  0012d	46		 inc	 esi
  0012e	8b 45 dc	 mov	 eax, DWORD PTR _SystemInfo$[ebp+20]
  00131	41		 inc	 ecx
  00132	03 c0		 add	 eax, eax
  00134	89 0d 00 00 00
	00		 mov	 DWORD PTR ?dwWorkThreadNum@@3KA, ecx ; dwWorkThreadNum
  0013a	3b f0		 cmp	 esi, eax
  0013c	72 94		 jb	 SHORT $LL6@InitComple
; Line 96
  0013e	eb 2c		 jmp	 SHORT $LN4@InitComple
$LN14@InitComple:
; Line 98
  00140	6a 00		 push	 0
  00142	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00147	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@MICHELDC@Fail?5to?5Create?5WorkerThread?$AA@
  0014c	6a 00		 push	 0
  0014e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
; Line 99
  00154	33 c0		 xor	 eax, eax
; Line 106
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00160	59		 pop	 ecx
  00161	5e		 pop	 esi
  00162	8b e5		 mov	 esp, ebp
  00164	5d		 pop	 ebp
  00165	c3		 ret	 0
$LN18@InitComple:
; Line 99
  00166	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?dwWorkThreadNum@@3KA ; dwWorkThreadNum
$LN4@InitComple:
; Line 103
  0016c	51		 push	 ecx
  0016d	ff 75 0c	 push	 DWORD PTR _hMsgHandle$[ebp]
  00170	e8 00 00 00 00	 call	 ?StartSwitchQueThread@@YAHPAXK@Z ; StartSwitchQueThread
  00175	83 c4 08	 add	 esp, 8
; Line 105
  00178	b8 01 00 00 00	 mov	 eax, 1
; Line 106
  0017d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00180	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00187	59		 pop	 ecx
  00188	5e		 pop	 esi
  00189	8b e5		 mov	 esp, ebp
  0018b	5d		 pop	 ebp
  0018c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitCompletionIO@@YAHKPAX@Z$0:
  00000	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?InitCompletionIO@@YAHKPAX@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a cc	 mov	 ecx, DWORD PTR [edx-52]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InitCompletionIO@@YAHKPAX@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InitCompletionIO@@YAHKPAX@Z ENDP			; InitCompletionIO
END
