; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	E:\GitHub\Mso_Code\4DyuchiNET_Latest\timer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_dwTimerNum@@3KA				; g_dwTimerNum
PUBLIC	?TimerHandle@@3PAUTIMER_HANDLE@@A		; TimerHandle
PUBLIC	?g_csTimer@@3U_RTL_CRITICAL_SECTION@@A		; g_csTimer
_BSS	SEGMENT
?g_dwTimerNum@@3KA DD 01H DUP (?)			; g_dwTimerNum
?TimerHandle@@3PAUTIMER_HANDLE@@A DB 0480H DUP (?)	; TimerHandle
?g_csTimer@@3U_RTL_CRITICAL_SECTION@@A DB 018H DUP (?)	; g_csTimer
_BSS	ENDS
PUBLIC	?InitializeTimer@@YAXXZ				; InitializeTimer
PUBLIC	?AddTimer@@YAKKPAXK@Z				; AddTimer
PUBLIC	?RemoveTimer@@YAHK@Z				; RemoveTimer
PUBLIC	?RemoveAllTimer@@YAXXZ				; RemoveAllTimer
PUBLIC	?PauseTimer@@YAHK@Z				; PauseTimer
PUBLIC	?ResumeTimer@@YAHK@Z				; ResumeTimer
PUBLIC	?TimerThread@@YGIPAX@Z				; TimerThread
PUBLIC	?OnTimer@@YGXPAXE@Z				; OnTimer
PUBLIC	??_C@_05NAOIJFC@Error?$AA@			; `string'
PUBLIC	??_C@_0BJ@OFAFKFOC@Timer?5Index?5already?5used?$AA@ ; `string'
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__SetEvent@4:PROC
EXTRN	__imp__ResetEvent@4:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__CreateEventA@16:PROC
EXTRN	__imp__SetThreadPriority@8:PROC
EXTRN	__imp__WaitForMultipleObjects@16:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	__beginthreadex:PROC
EXTRN	__endthreadex:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BJ@OFAFKFOC@Timer?5Index?5already?5used?$AA@
CONST	SEGMENT
??_C@_0BJ@OFAFKFOC@Timer?5Index?5already?5used?$AA@ DB 'Timer Index alrea'
	DB	'dy used', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05NAOIJFC@Error?$AA@
CONST	SEGMENT
??_C@_05NAOIJFC@Error?$AA@ DB 'Error', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?OnTimer@@YGXPAXE@Z
_TEXT	SEGMENT
_pvContext$ = 8						; size = 4
_fTimeout$ = 12						; size = 1
?OnTimer@@YGXPAXE@Z PROC				; OnTimer, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\timer.cpp
; Line 93
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 95
  00003	ff 75 08	 push	 DWORD PTR _pvContext$[ebp]
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
; Line 96
  0000c	5d		 pop	 ebp
  0000d	c2 08 00	 ret	 8
?OnTimer@@YGXPAXE@Z ENDP				; OnTimer
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?TimerThread@@YGIPAX@Z
_TEXT	SEGMENT
_hStopper$1$ = -4					; size = 4
_dwTime$1$ = 8						; size = 4
_lpVoid$ = 8						; size = 4
?TimerThread@@YGIPAX@Z PROC				; TimerThread, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\timer.cpp
; Line 35
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; Line 40
  00004	8b 45 08	 mov	 eax, DWORD PTR _lpVoid$[ebp]
  00007	53		 push	 ebx
  00008	56		 push	 esi
; Line 45
  00009	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__SetEvent@4
  0000f	57		 push	 edi
  00010	8d 3c c0	 lea	 edi, DWORD PTR [eax+eax*8]
  00013	8b 04 bd 00 00
	00 00		 mov	 eax, DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[edi*4]
  0001a	8b 1c bd 14 00
	00 00		 mov	 ebx, DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[edi*4+20]
  00021	ff 34 bd 20 00
	00 00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[edi*4+32]
  00028	89 45 08	 mov	 DWORD PTR _dwTime$1$[ebp], eax
  0002b	8b 04 bd 10 00
	00 00		 mov	 eax, DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[edi*4+16]
  00032	89 45 fc	 mov	 DWORD PTR _hStopper$1$[ebp], eax
$LN17@TimerThrea:
  00035	ff d6		 call	 esi
  00037	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$lb_loop$19:
; Line 51
  00040	ff 75 08	 push	 DWORD PTR _dwTime$1$[ebp]
  00043	8d 04 bd 04 00
	00 00		 lea	 eax, DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[edi*4+4]
  0004a	6a 00		 push	 0
  0004c	50		 push	 eax
  0004d	6a 02		 push	 2
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForMultipleObjects@16
; Line 63
  00055	53		 push	 ebx
  00056	83 f8 01	 cmp	 eax, 1
  00059	74 30		 je	 SHORT $LN12@TimerThrea
; Line 60
  0005b	85 c0		 test	 eax, eax
  0005d	75 23		 jne	 SHORT $LN2@TimerThrea
; Line 63
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ResetEvent@4
; Line 65
  00065	ff 34 bd 0c 00
	00 00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[edi*4+12]
  0006c	ff d6		 call	 esi
; Line 68
  0006e	6a ff		 push	 -1
  00070	ff 75 fc	 push	 DWORD PTR _hStopper$1$[ebp]
  00073	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
; Line 72
  00079	ff 34 bd 0c 00
	00 00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[edi*4+12]
; Line 73
  00080	eb b3		 jmp	 SHORT $LN17@TimerThrea
$LN2@TimerThrea:
; Line 76
  00082	ff d6		 call	 esi
  00084	85 c0		 test	 eax, eax
  00086	75 b8		 jne	 SHORT $lb_loop$19
; Line 77
  00088	cc		 int	 3
; Line 78
  00089	eb b5		 jmp	 SHORT $lb_loop$19
$LN12@TimerThrea:
; Line 56
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ResetEvent@4
; Line 81
  00091	6a 00		 push	 0
$seg_finish$20:
  00093	e8 00 00 00 00	 call	 __endthreadex
  00098	83 c4 04	 add	 esp, 4
; Line 82
  0009b	33 c0		 xor	 eax, eax
  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx
; Line 83
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 04 00	 ret	 4
?TimerThread@@YGIPAX@Z ENDP				; TimerThread
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ResumeTimer@@YAHK@Z
_TEXT	SEGMENT
_dwTimerIndex$ = 8					; size = 4
?ResumeTimer@@YAHK@Z PROC				; ResumeTimer, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\timer.cpp
; Line 174
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 176
  00004	8b 75 08	 mov	 esi, DWORD PTR _dwTimerIndex$[ebp]
  00007	57		 push	 edi
  00008	33 ff		 xor	 edi, edi
  0000a	83 fe 20	 cmp	 esi, 32			; 00000020H
  0000d	73 4a		 jae	 SHORT $LN7@ResumeTime
; Line 179
  0000f	68 00 00 00 00	 push	 OFFSET ?g_csTimer@@3U_RTL_CRITICAL_SECTION@@A ; g_csTimer
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 180
  0001a	8d 34 f6	 lea	 esi, DWORD PTR [esi+esi*8]
  0001d	39 3c b5 18 00
	00 00		 cmp	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+24], edi
  00024	74 28		 je	 SHORT $lb_false_and_unlock$9
; Line 183
  00026	ff 34 b5 10 00
	00 00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+16]
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
; Line 184
  00033	6a ff		 push	 -1
  00035	ff 34 b5 0c 00
	00 00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+12]
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
; Line 185
  00042	89 3c b5 18 00
	00 00		 mov	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+24], edi
; Line 186
  00049	bf 01 00 00 00	 mov	 edi, 1
$lb_false_and_unlock$9:
; Line 189
  0004e	68 00 00 00 00	 push	 OFFSET ?g_csTimer@@3U_RTL_CRITICAL_SECTION@@A ; g_csTimer
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
$LN7@ResumeTime:
; Line 192
  00059	8b c7		 mov	 eax, edi
  0005b	5f		 pop	 edi
$lb_return$10:
  0005c	5e		 pop	 esi
; Line 194
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
?ResumeTimer@@YAHK@Z ENDP				; ResumeTimer
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?PauseTimer@@YAHK@Z
_TEXT	SEGMENT
_dwTimerIndex$ = 8					; size = 4
?PauseTimer@@YAHK@Z PROC				; PauseTimer, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\timer.cpp
; Line 146
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 149
  00004	8b 75 08	 mov	 esi, DWORD PTR _dwTimerIndex$[ebp]
  00007	57		 push	 edi
  00008	33 ff		 xor	 edi, edi
  0000a	83 fe 20	 cmp	 esi, 32			; 00000020H
  0000d	73 57		 jae	 SHORT $LN9@PauseTimer
; Line 152
  0000f	68 00 00 00 00	 push	 OFFSET ?g_csTimer@@3U_RTL_CRITICAL_SECTION@@A ; g_csTimer
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 153
  0001a	8d 34 f6	 lea	 esi, DWORD PTR [esi+esi*8]
  0001d	39 3c b5 18 00
	00 00		 cmp	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+24], edi
  00024	75 35		 jne	 SHORT $lb_false_and_unlock$11
; Line 157
  00026	39 3c b5 14 00
	00 00		 cmp	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+20], edi
  0002d	74 2c		 je	 SHORT $lb_false_and_unlock$11
; Line 160
  0002f	ff 34 b5 04 00
	00 00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+4]
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
; Line 161
  0003c	6a ff		 push	 -1
  0003e	ff 34 b5 0c 00
	00 00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+12]
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
; Line 162
  0004b	c7 04 b5 18 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+24], 1
; Line 163
  00056	bf 01 00 00 00	 mov	 edi, 1
$lb_false_and_unlock$11:
; Line 166
  0005b	68 00 00 00 00	 push	 OFFSET ?g_csTimer@@3U_RTL_CRITICAL_SECTION@@A ; g_csTimer
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
$LN9@PauseTimer:
; Line 169
  00066	8b c7		 mov	 eax, edi
  00068	5f		 pop	 edi
$lb_return$12:
  00069	5e		 pop	 esi
; Line 171
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
?PauseTimer@@YAHK@Z ENDP				; PauseTimer
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?RemoveAllTimer@@YAXXZ
_TEXT	SEGMENT
tv463 = -8						; size = 4
tv473 = -4						; size = 4
?RemoveAllTimer@@YAXXZ PROC				; RemoveAllTimer, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\timer.cpp
; Line 237
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
; Line 238
  00007	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__CloseHandle@4
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	bf 20 00 00 00	 mov	 edi, 32			; 00000020H
  00014	be 0c 00 00 00	 mov	 esi, OFFSET ?TimerHandle@@3PAUTIMER_HANDLE@@A+12
  00019	89 7d f8	 mov	 DWORD PTR tv463[ebp], edi
  0001c	8d 64 24 00	 npad	 4
$LL3@RemoveAllT:
; Line 202
  00020	68 00 00 00 00	 push	 OFFSET ?g_csTimer@@3U_RTL_CRITICAL_SECTION@@A ; g_csTimer
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 204
  0002b	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0002f	74 69		 je	 SHORT $lb_return$22
; Line 207
  00031	ff 76 fc	 push	 DWORD PTR [esi-4]
  00034	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__SetEvent@4
  0003a	ff d7		 call	 edi
; Line 210
  0003c	ff 76 04	 push	 DWORD PTR [esi+4]
  0003f	ff d7		 call	 edi
; Line 211
  00041	6a ff		 push	 -1
  00043	ff 76 10	 push	 DWORD PTR [esi+16]
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
; Line 238
  0004c	8d 7e f8	 lea	 edi, DWORD PTR [esi-8]
; Line 207
  0004f	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR tv473[ebp], 2
$LL8@RemoveAllT:
; Line 215
  00056	ff 37		 push	 DWORD PTR [edi]
  00058	ff d3		 call	 ebx
; Line 216
  0005a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; Line 217
  00060	ff 36		 push	 DWORD PTR [esi]
  00062	ff d3		 call	 ebx
  00064	ff 4d fc	 dec	 DWORD PTR tv473[ebp]
  00067	8d 7f 04	 lea	 edi, DWORD PTR [edi+4]
; Line 218
  0006a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00070	75 e4		 jne	 SHORT $LL8@RemoveAllT
; Line 220
  00072	ff 76 04	 push	 DWORD PTR [esi+4]
  00075	ff d3		 call	 ebx
; Line 221
  00077	ff 76 14	 push	 DWORD PTR [esi+20]
  0007a	ff d3		 call	 ebx
; Line 223
  0007c	ff 76 10	 push	 DWORD PTR [esi+16]
  0007f	ff d3		 call	 ebx
; Line 228
  00081	ff 76 08	 push	 DWORD PTR [esi+8]
  00084	ff 0d 00 00 00
	00		 dec	 DWORD PTR ?g_dwTimerNum@@3KA ; g_dwTimerNum
  0008a	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ResetEvent@4
  00097	8b 7d f8	 mov	 edi, DWORD PTR tv463[ebp]
$lb_return$22:
; Line 231
  0009a	68 00 00 00 00	 push	 OFFSET ?g_csTimer@@3U_RTL_CRITICAL_SECTION@@A ; g_csTimer
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
; Line 238
  000a5	83 c6 24	 add	 esi, 36			; 00000024H
  000a8	4f		 dec	 edi
  000a9	89 7d f8	 mov	 DWORD PTR tv463[ebp], edi
  000ac	0f 85 6e ff ff
	ff		 jne	 $LL3@RemoveAllT
  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
; Line 243
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c3		 ret	 0
?RemoveAllTimer@@YAXXZ ENDP				; RemoveAllTimer
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?RemoveTimer@@YAHK@Z
_TEXT	SEGMENT
tv277 = 8						; size = 4
_dwTimerIndex$ = 8					; size = 4
?RemoveTimer@@YAHK@Z PROC				; RemoveTimer, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\timer.cpp
; Line 197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; Line 202
  00005	68 00 00 00 00	 push	 OFFSET ?g_csTimer@@3U_RTL_CRITICAL_SECTION@@A ; g_csTimer
  0000a	33 ff		 xor	 edi, edi
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 204
  00012	8b 45 08	 mov	 eax, DWORD PTR _dwTimerIndex$[ebp]
  00015	8d 34 c0	 lea	 esi, DWORD PTR [eax+eax*8]
  00018	39 3c b5 1c 00
	00 00		 cmp	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+28], edi
  0001f	0f 84 a1 00 00
	00		 je	 $lb_return$13
; Line 207
  00025	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__SetEvent@4
  0002b	53		 push	 ebx
  0002c	ff 34 b5 08 00
	00 00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+8]
  00033	ff d7		 call	 edi
; Line 210
  00035	ff 34 b5 10 00
	00 00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+16]
  0003c	ff d7		 call	 edi
; Line 211
  0003e	6a ff		 push	 -1
  00040	ff 34 b5 1c 00
	00 00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+28]
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  0004d	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__CloseHandle@4
  00053	8d 3c b5 04 00
	00 00		 lea	 edi, DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+4]
  0005a	c7 45 08 02 00
	00 00		 mov	 DWORD PTR tv277[ebp], 2
$LL3@RemoveTime:
; Line 215
  00061	ff 37		 push	 DWORD PTR [edi]
  00063	ff d3		 call	 ebx
; Line 216
  00065	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; Line 217
  0006b	ff 34 b5 0c 00
	00 00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+12]
  00072	ff d3		 call	 ebx
  00074	ff 4d 08	 dec	 DWORD PTR tv277[ebp]
  00077	8d 7f 04	 lea	 edi, DWORD PTR [edi+4]
; Line 218
  0007a	c7 04 b5 0c 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+12], 0
  00085	75 da		 jne	 SHORT $LL3@RemoveTime
; Line 220
  00087	ff 34 b5 10 00
	00 00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+16]
  0008e	ff d3		 call	 ebx
; Line 221
  00090	ff 34 b5 20 00
	00 00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+32]
  00097	ff d3		 call	 ebx
; Line 223
  00099	ff 34 b5 1c 00
	00 00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+28]
  000a0	ff d3		 call	 ebx
; Line 228
  000a2	ff 34 b5 14 00
	00 00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+20]
  000a9	ff 0d 00 00 00
	00		 dec	 DWORD PTR ?g_dwTimerNum@@3KA ; g_dwTimerNum
  000af	bf 01 00 00 00	 mov	 edi, 1
  000b4	c7 04 b5 1c 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi*4+28], 0
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ResetEvent@4
  000c5	5b		 pop	 ebx
$lb_return$13:
; Line 231
  000c6	68 00 00 00 00	 push	 OFFSET ?g_csTimer@@3U_RTL_CRITICAL_SECTION@@A ; g_csTimer
  000cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
; Line 232
  000d1	8b c7		 mov	 eax, edi
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
; Line 233
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
?RemoveTimer@@YAHK@Z ENDP				; RemoveTimer
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?AddTimer@@YAKKPAXK@Z
_TEXT	SEGMENT
_ThreadID$ = -4						; size = 4
_dwPerioedTime$ = 8					; size = 4
_hEvent$ = 12						; size = 4
tv284 = 16						; size = 4
_dwTimerIndex$ = 16					; size = 4
?AddTimer@@YAKKPAXK@Z PROC				; AddTimer, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\timer.cpp
; Line 100
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; Line 106
  00005	8b 5d 10	 mov	 ebx, DWORD PTR _dwTimerIndex$[ebp]
  00008	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _ThreadID$[ebp], 0
  0000f	83 fb 20	 cmp	 ebx, 32			; 00000020H
  00012	0f 83 fa 00 00
	00		 jae	 $LN14@AddTimer
; Line 109
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	68 00 00 00 00	 push	 OFFSET ?g_csTimer@@3U_RTL_CRITICAL_SECTION@@A ; g_csTimer
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 113
  00025	8b 45 08	 mov	 eax, DWORD PTR _dwPerioedTime$[ebp]
  00028	8d 0c db	 lea	 ecx, DWORD PTR [ebx+ebx*8]
  0002b	c1 e1 02	 shl	 ecx, 2
  0002e	bf 02 00 00 00	 mov	 edi, 2
  00033	89 4d 10	 mov	 DWORD PTR tv284[ebp], ecx
  00036	89 81 00 00 00
	00		 mov	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[ecx], eax
  0003c	8d b1 04 00 00
	00		 lea	 esi, DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[ecx+4]
$LL5@AddTimer:
; Line 118
  00042	6a 00		 push	 0
  00044	6a 00		 push	 0
  00046	6a 00		 push	 0
  00048	6a 00		 push	 0
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  00050	89 06		 mov	 DWORD PTR [esi], eax
  00052	8d 76 04	 lea	 esi, DWORD PTR [esi+4]
  00055	4f		 dec	 edi
  00056	75 ea		 jne	 SHORT $LL5@AddTimer
; Line 120
  00058	8b 75 10	 mov	 esi, DWORD PTR tv284[ebp]
; Line 121
  0005b	57		 push	 edi
  0005c	57		 push	 edi
  0005d	57		 push	 edi
  0005e	89 be 18 00 00
	00		 mov	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi+24], edi
  00064	57		 push	 edi
  00065	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__CreateEventA@16
  0006b	ff d7		 call	 edi
; Line 123
  0006d	6a 00		 push	 0
  0006f	6a 00		 push	 0
  00071	6a 00		 push	 0
  00073	89 86 10 00 00
	00		 mov	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi+16], eax
  00079	8b 45 0c	 mov	 eax, DWORD PTR _hEvent$[ebp]
  0007c	6a 00		 push	 0
  0007e	89 86 14 00 00
	00		 mov	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi+20], eax
  00084	ff d7		 call	 edi
; Line 124
  00086	6a 00		 push	 0
  00088	6a 00		 push	 0
  0008a	6a 00		 push	 0
  0008c	6a 00		 push	 0
  0008e	89 86 0c 00 00
	00		 mov	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi+12], eax
  00094	ff d7		 call	 edi
  00096	89 86 20 00 00
	00		 mov	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi+32], eax
; Line 125
  0009c	8d 45 fc	 lea	 eax, DWORD PTR _ThreadID$[ebp]
  0009f	50		 push	 eax
  000a0	6a 00		 push	 0
  000a2	53		 push	 ebx
  000a3	68 00 00 00 00	 push	 OFFSET ?TimerThread@@YGIPAX@Z ; TimerThread
  000a8	6a 00		 push	 0
  000aa	6a 00		 push	 0
  000ac	e8 00 00 00 00	 call	 __beginthreadex
  000b1	83 c4 18	 add	 esp, 24			; 00000018H
  000b4	89 86 1c 00 00
	00		 mov	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi+28], eax
; Line 127
  000ba	83 f8 ff	 cmp	 eax, -1
  000bd	75 28		 jne	 SHORT $LN2@AddTimer
; Line 129
  000bf	6a 00		 push	 0
  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@OFAFKFOC@Timer?5Index?5already?5used?$AA@
  000cb	6a 00		 push	 0
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
; Line 139
  000d3	68 00 00 00 00	 push	 OFFSET ?g_csTimer@@3U_RTL_CRITICAL_SECTION@@A ; g_csTimer
  000d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
; Line 142
  000e0	8b c3		 mov	 eax, ebx
$lb_return$16:
  000e2	5b		 pop	 ebx
; Line 143
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c3		 ret	 0
$LN2@AddTimer:
; Line 133
  000e7	6a 0f		 push	 15			; 0000000fH
  000e9	6a 00		 push	 0
  000eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetThreadPriority@8
; Line 135
  000f1	ff 05 00 00 00
	00		 inc	 DWORD PTR ?g_dwTimerNum@@3KA ; g_dwTimerNum
; Line 136
  000f7	6a ff		 push	 -1
  000f9	ff b6 20 00 00
	00		 push	 DWORD PTR ?TimerHandle@@3PAUTIMER_HANDLE@@A[esi+32]
  000ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
; Line 139
  00105	68 00 00 00 00	 push	 OFFSET ?g_csTimer@@3U_RTL_CRITICAL_SECTION@@A ; g_csTimer
$lb_exit$17:
  0010a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
  00110	5f		 pop	 edi
  00111	5e		 pop	 esi
$LN14@AddTimer:
; Line 142
  00112	8b c3		 mov	 eax, ebx
$lb_return_1$18:
  00114	5b		 pop	 ebx
; Line 143
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c3		 ret	 0
?AddTimer@@YAKKPAXK@Z ENDP				; AddTimer
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?InitializeTimer@@YAXXZ
_TEXT	SEGMENT
?InitializeTimer@@YAXXZ PROC				; InitializeTimer, COMDAT
; File e:\github\mso_code\4dyuchinet_latest\timer.cpp
; Line 87
  00000	68 80 04 00 00	 push	 1152			; 00000480H
  00005	6a 00		 push	 0
  00007	68 00 00 00 00	 push	 OFFSET ?TimerHandle@@3PAUTIMER_HANDLE@@A ; TimerHandle
  0000c	e8 00 00 00 00	 call	 _memset
  00011	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 88
  00014	68 00 00 00 00	 push	 OFFSET ?g_csTimer@@3U_RTL_CRITICAL_SECTION@@A ; g_csTimer
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4
; Line 89
  0001f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_dwTimerNum@@3KA, 0 ; g_dwTimerNum
; Line 90
  00029	c3		 ret	 0
?InitializeTimer@@YAXXZ ENDP				; InitializeTimer
_TEXT	ENDS
END
