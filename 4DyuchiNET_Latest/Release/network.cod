; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	E:\GitHub\Mso_Code\4DyuchiNET_Latest\network.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_pNetworkForUser@@3PAVCNetwork@@A		; g_pNetworkForUser
PUBLIC	?g_pNetworkForServer@@3PAVCNetwork@@A		; g_pNetworkForServer
_BSS	SEGMENT
?g_pNetworkForUser@@3PAVCNetwork@@A DD 01H DUP (?)	; g_pNetworkForUser
?g_pNetworkForServer@@3PAVCNetwork@@A DD 01H DUP (?)	; g_pNetworkForServer
_BSS	ENDS
PUBLIC	??_GCDynamicMemoryContainer@@QAEPAXI@Z		; CDynamicMemoryContainer::`scalar deleting destructor'
PUBLIC	?SetHandleID@COverlapped@@QAEXW4NETWORK_ID@@KW4ACTION_TYPE@@@Z ; COverlapped::SetHandleID
PUBLIC	?GetHandleID@COverlapped@@QAEKXZ		; COverlapped::GetHandleID
PUBLIC	?SetBlockMethod@COverlapped@@QAEXW4BLOCK_METHOD@@@Z ; COverlapped::SetBlockMethod
PUBLIC	?GetOverlappedSend@CConnection@@QAEPAVCOverlappedSend@@XZ ; CConnection::GetOverlappedSend
PUBLIC	?GetOverlappedRecv@CConnection@@QAEPAVCOverlappedRecv@@XZ ; CConnection::GetOverlappedRecv
PUBLIC	?AddNextConnection@CConnection@@QAEXPAV1@@Z	; CConnection::AddNextConnection
PUBLIC	?GetNextConnection@CConnection@@QAEPAV1@XZ	; CConnection::GetNextConnection
PUBLIC	?SetHandleID@CConnection@@QAEXW4NETWORK_ID@@KW4ACTION_TYPE@@@Z ; CConnection::SetHandleID
PUBLIC	?GetHandleID@CConnection@@QAEKXZ		; CConnection::GetHandleID
PUBLIC	?GetConnectionIndex@CConnection@@QAEKXZ		; CConnection::GetConnectionIndex
PUBLIC	?SetConnectionIndex@CConnection@@QAEXK@Z	; CConnection::SetConnectionIndex
PUBLIC	?SetConnectionStatus@CConnection@@QAEXW4CONNECTION_STATUS@@@Z ; CConnection::SetConnectionStatus
PUBLIC	?SetAddress@CConnection@@QAEXPAUsockaddr_in@@@Z	; CConnection::SetAddress
PUBLIC	?SetNetwork@CConnection@@QAEXPAVCNetwork@@@Z	; CConnection::SetNetwork
PUBLIC	??_GCConnection@@QAEPAXI@Z			; CConnection::`scalar deleting destructor'
PUBLIC	?AllocConnection@CNetwork@@AAEPAVCConnection@@XZ ; CNetwork::AllocConnection
PUBLIC	?FreeConnection@CNetwork@@AAEXPAVCConnection@@@Z ; CNetwork::FreeConnection
PUBLIC	?SetAcceptTHreadHandle@CNetwork@@QAEXPAX@Z	; CNetwork::SetAcceptTHreadHandle
PUBLIC	?ReleaseListenSocket@CNetwork@@QAEXXZ		; CNetwork::ReleaseListenSocket
PUBLIC	?EnableEncryptionSend@CNetwork@@QAEXXZ		; CNetwork::EnableEncryptionSend
PUBLIC	?DisableEncryptionSend@CNetwork@@QAEXXZ		; CNetwork::DisableEncryptionSend
PUBLIC	?AddConnection@CNetwork@@QAEPAVCConnection@@I@Z	; CNetwork::AddConnection
PUBLIC	?CompulsiveDisconnect@CNetwork@@QAEXK@Z		; CNetwork::CompulsiveDisconnect
PUBLIC	?GetMaxTransferRecvSize@CNetwork@@QAEHXZ	; CNetwork::GetMaxTransferRecvSize
PUBLIC	?GetMaxTransferSendSize@CNetwork@@QAEHXZ	; CNetwork::GetMaxTransferSendSize
PUBLIC	?Broadcast@CNetwork@@QAEXPADKK@Z		; CNetwork::Broadcast
PUBLIC	?SetConnectionType@CNetwork@@QAEXPAVCConnection@@W4NETWORK_ID@@@Z ; CNetwork::SetConnectionType
PUBLIC	?Send@CNetwork@@QAEHKPADKK@Z			; CNetwork::Send
PUBLIC	?Send@CNetwork@@QAEHKPAU_WSABUF@@KK@Z		; CNetwork::Send
PUBLIC	?Send@CNetwork@@QAEHKPAUPACKET_LIST@@K@Z	; CNetwork::Send
PUBLIC	?GetConnection@CNetwork@@QAEXPAPAVCConnection@@K@Z ; CNetwork::GetConnection
PUBLIC	?SetBufferSizePerConnection@CNetwork@@QAEXK@Z	; CNetwork::SetBufferSizePerConnection
PUBLIC	?ConnectToServer@CNetwork@@QAEHPADGP6GXKPAX@ZP6GX1@Z1@Z ; CNetwork::ConnectToServer
PUBLIC	?StartServer@CNetwork@@QAEHPADG@Z		; CNetwork::StartServer
PUBLIC	?CloseAllConnection@CNetwork@@QAEXXZ		; CNetwork::CloseAllConnection
PUBLIC	?CloseConnection@CNetwork@@QAEXK@Z		; CNetwork::CloseConnection
PUBLIC	??0CNetwork@@QAE@W4NETWORK_ID@@KKK@Z		; CNetwork::CNetwork
PUBLIC	??1CNetwork@@QAE@XZ				; CNetwork::~CNetwork
PUBLIC	??_C@_05NAOIJFC@Error?$AA@			; `string'
PUBLIC	??_C@_0BG@DCLEMDOP@Fail?5to?5create?5socket?$AA@ ; `string'
PUBLIC	??_C@_0BD@ILDGKGAE@Socket?5Listen?5Fail?$AA@	; `string'
PUBLIC	??_C@_0P@EDMFONCD@disconnectd?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0CJ@JJFAELEH@CreateIoCompletionPort?5failed?5wi@ ; `string'
PUBLIC	??_C@_0BB@DKMJILCA@AddConnection?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BD@BFHDGKNC@Network?5ID?5illegal?$AA@	; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__CreateIoCompletionPort@16:PROC
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	__imp__wsprintfA:PROC
EXTRN	__imp__GetActiveWindow@0:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	__imp__bind@12:PROC
EXTRN	__imp__closesocket@4:PROC
EXTRN	__imp__getpeername@12:PROC
EXTRN	__imp__htons@4:PROC
EXTRN	__imp__inet_addr@4:PROC
EXTRN	__imp__listen@8:PROC
EXTRN	__imp__setsockopt@20:PROC
EXTRN	__imp__socket@12:PROC
EXTRN	__imp__WSAIoctl@36:PROC
EXTRN	?Initialize@CDynamicMemoryContainer@@QAEHKKKW4MEMORY_TYPE@@@Z:PROC ; CDynamicMemoryContainer::Initialize
EXTRN	??0CDynamicMemoryContainer@@QAE@XZ:PROC		; CDynamicMemoryContainer::CDynamicMemoryContainer
EXTRN	??1CDynamicMemoryContainer@@QAE@XZ:PROC		; CDynamicMemoryContainer::~CDynamicMemoryContainer
EXTRN	?CloseSocket@CConnection@@QAEXXZ:PROC		; CConnection::CloseSocket
EXTRN	?Send@CConnection@@QAEHPADKK@Z:PROC		; CConnection::Send
EXTRN	?Send@CConnection@@QAEHPADK@Z:PROC		; CConnection::Send
EXTRN	?Send@CConnection@@QAEHPAU_WSABUF@@K@Z:PROC	; CConnection::Send
EXTRN	?Send@CConnection@@QAEHPAUPACKET_LIST@@@Z:PROC	; CConnection::Send
EXTRN	?Initialize@CConnection@@QAEHIKHH@Z:PROC	; CConnection::Initialize
EXTRN	??0CConnection@@QAE@XZ:PROC			; CConnection::CConnection
EXTRN	??1CConnection@@QAE@XZ:PROC			; CConnection::~CConnection
EXTRN	?Initialize@CIndexCreator@@QAEHK@Z:PROC		; CIndexCreator::Initialize
EXTRN	??0CIndexCreator@@QAE@XZ:PROC			; CIndexCreator::CIndexCreator
EXTRN	??1CIndexCreator@@QAE@XZ:PROC			; CIndexCreator::~CIndexCreator
EXTRN	?ICAllocIndex@@YGKPAVCIndexCreator@@@Z:PROC	; ICAllocIndex
EXTRN	?ICFreeIndex@@YGXPAVCIndexCreator@@K@Z:PROC	; ICFreeIndex
EXTRN	?PostDisconnectEvent@@YAXK@Z:PROC		; PostDisconnectEvent
EXTRN	?WriteLog@CLogManager@@QAEHPADK@Z:PROC		; CLogManager::WriteLog
EXTRN	?StartAcceptThread@@YAHPAVCNetwork@@@Z:PROC	; StartAcceptThread
EXTRN	?EndAcceptThread@@YAHIPAX@Z:PROC		; EndAcceptThread
EXTRN	?Connect@@YAHPADGP6GXKPAX@ZP6GX1@ZPAVCNetwork@@1@Z:PROC ; Connect
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	?g_hCompletionPort@@3PAXA:DWORD			; g_hCompletionPort
EXTRN	?g_pLogManager@@3PAVCLogManager@@A:DWORD	; g_pLogManager
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BD@BFHDGKNC@Network?5ID?5illegal?$AA@
CONST	SEGMENT
??_C@_0BD@BFHDGKNC@Network?5ID?5illegal?$AA@ DB 'Network ID illegal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DKMJILCA@AddConnection?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BB@DKMJILCA@AddConnection?5?$CFd?$AA@ DB 'AddConnection %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JJFAELEH@CreateIoCompletionPort?5failed?5wi@
CONST	SEGMENT
??_C@_0CJ@JJFAELEH@CreateIoCompletionPort?5failed?5wi@ DB 'CreateIoComple'
	DB	'tionPort failed with error', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EDMFONCD@disconnectd?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0P@EDMFONCD@disconnectd?5?$CFd?$AA@ DB 'disconnectd %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ILDGKGAE@Socket?5Listen?5Fail?$AA@
CONST	SEGMENT
??_C@_0BD@ILDGKGAE@Socket?5Listen?5Fail?$AA@ DB 'Socket Listen Fail', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DCLEMDOP@Fail?5to?5create?5socket?$AA@
CONST	SEGMENT
??_C@_0BG@DCLEMDOP@Fail?5to?5create?5socket?$AA@ DB 'Fail to create socke'
	DB	't', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05NAOIJFC@Error?$AA@
CONST	SEGMENT
??_C@_05NAOIJFC@Error?$AA@ DB 'Error', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CNetwork@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CNetwork@@QAE@XZ$0
__ehfuncinfo$??1CNetwork@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CNetwork@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CNetwork@@QAE@W4NETWORK_ID@@KKK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNetwork@@QAE@W4NETWORK_ID@@KKK@Z$0
__ehfuncinfo$??0CNetwork@@QAE@W4NETWORK_ID@@KKK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CNetwork@@QAE@W4NETWORK_ID@@KKK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetBufferSizePerConnection@CNetwork@@QAEXK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetBufferSizePerConnection@CNetwork@@QAEXK@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetBufferSizePerConnection@CNetwork@@QAEXK@Z$1
__ehfuncinfo$?SetBufferSizePerConnection@CNetwork@@QAEXK@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetBufferSizePerConnection@CNetwork@@QAEXK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AllocConnection@CNetwork@@AAEPAVCConnection@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AllocConnection@CNetwork@@AAEPAVCConnection@@XZ$1
__ehfuncinfo$?AllocConnection@CNetwork@@AAEPAVCConnection@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AllocConnection@CNetwork@@AAEPAVCConnection@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1CNetwork@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CNetwork@@QAE@XZ PROC				; CNetwork::~CNetwork, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 436
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CNetwork@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b d9		 mov	 ebx, ecx
  00028	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx
  0002b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 438
  00032	e8 00 00 00 00	 call	 ?CloseAllConnection@CNetwork@@QAEXXZ ; CNetwork::CloseAllConnection
; Line 441
  00037	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0003a	85 c0		 test	 eax, eax
  0003c	74 10		 je	 SHORT $LN6@CNetwork
; Line 443
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00044	83 c4 04	 add	 esp, 4
; Line 444
  00047	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
$LN6@CNetwork:
; Line 448
  0004e	8b 7b 20	 mov	 edi, DWORD PTR [ebx+32]
; Line 451
  00051	85 ff		 test	 edi, edi
  00053	74 19		 je	 SHORT $LN4@CNetwork
$LL5@CNetwork:
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 38
  00055	8b 77 24	 mov	 esi, DWORD PTR [edi+36]
  00058	8b cf		 mov	 ecx, edi
  0005a	e8 00 00 00 00	 call	 ??1CConnection@@QAE@XZ	; CConnection::~CConnection
  0005f	57		 push	 edi
  00060	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00065	83 c4 04	 add	 esp, 4
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 455
  00068	8b fe		 mov	 edi, esi
  0006a	85 f6		 test	 esi, esi
  0006c	75 e7		 jne	 SHORT $LL5@CNetwork
$LN4@CNetwork:
; Line 458
  0006e	8b 73 6c	 mov	 esi, DWORD PTR [ebx+108]
  00071	85 f6		 test	 esi, esi
  00073	74 17		 je	 SHORT $LN3@CNetwork
; Line 461
  00075	8b ce		 mov	 ecx, esi
  00077	e8 00 00 00 00	 call	 ??1CDynamicMemoryContainer@@QAE@XZ ; CDynamicMemoryContainer::~CDynamicMemoryContainer
  0007c	56		 push	 esi
  0007d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00082	83 c4 04	 add	 esp, 4
  00085	c7 43 6c 00 00
	00 00		 mov	 DWORD PTR [ebx+108], 0
$LN3@CNetwork:
; Line 464
  0008c	8b 73 68	 mov	 esi, DWORD PTR [ebx+104]
  0008f	85 f6		 test	 esi, esi
  00091	74 17		 je	 SHORT $LN2@CNetwork
; Line 467
  00093	8b ce		 mov	 ecx, esi
  00095	e8 00 00 00 00	 call	 ??1CDynamicMemoryContainer@@QAE@XZ ; CDynamicMemoryContainer::~CDynamicMemoryContainer
  0009a	56		 push	 esi
  0009b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000a0	83 c4 04	 add	 esp, 4
  000a3	c7 43 68 00 00
	00 00		 mov	 DWORD PTR [ebx+104], 0
$LN2@CNetwork:
; Line 469
  000aa	8b 43 74	 mov	 eax, DWORD PTR [ebx+116]
  000ad	85 c0		 test	 eax, eax
  000af	74 0c		 je	 SHORT $LN1@CNetwork
  000b1	83 f8 ff	 cmp	 eax, -1
  000b4	74 07		 je	 SHORT $LN1@CNetwork
; Line 470
  000b6	50		 push	 eax
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
$LN1@CNetwork:
; Line 472
  000bd	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	e8 00 00 00 00	 call	 ??1CIndexCreator@@QAE@XZ ; CIndexCreator::~CIndexCreator
  000cc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d6	59		 pop	 ecx
  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi
  000d9	5b		 pop	 ebx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CNetwork@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 08	 add	 ecx, 8
  00006	e9 00 00 00 00	 jmp	 ??1CIndexCreator@@QAE@XZ ; CIndexCreator::~CIndexCreator
__ehhandler$??1CNetwork@@QAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CNetwork@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CNetwork@@QAE@XZ ENDP				; CNetwork::~CNetwork
; Function compile flags: /Ogtp
;	COMDAT ??0CNetwork@@QAE@W4NETWORK_ID@@KKK@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_id$ = 8						; size = 4
_num$ = 12						; size = 4
_dwAcceptInterval$ = 16					; size = 4
_dwFlag$ = 20						; size = 4
??0CNetwork@@QAE@W4NETWORK_ID@@KKK@Z PROC		; CNetwork::CNetwork, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 17
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CNetwork@@QAE@W4NETWORK_ID@@KKK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  0002a	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]
  0002d	e8 00 00 00 00	 call	 ??0CIndexCreator@@QAE@XZ ; CIndexCreator::CIndexCreator
; Line 30
  00032	8b 45 0c	 mov	 eax, DWORD PTR _num$[ebp]
  00035	0f 57 c0	 xorps	 xmm0, xmm0
; Line 40
  00038	8b 4d 14	 mov	 ecx, DWORD PTR _dwFlag$[ebp]
; Line 48
  0003b	ba 08 00 00 00	 mov	 edx, 8
  00040	89 47 34	 mov	 DWORD PTR [edi+52], eax
  00043	80 e1 0f	 and	 cl, 15			; 0000000fH
  00046	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  00049	89 07		 mov	 DWORD PTR [edi], eax
  0004b	33 c0		 xor	 eax, eax
  0004d	66 89 47 2c	 mov	 WORD PTR [edi+44], ax
  00051	8b 45 10	 mov	 eax, DWORD PTR _dwAcceptInterval$[ebp]
  00054	89 47 64	 mov	 DWORD PTR [edi+100], eax
  00057	33 c0		 xor	 eax, eax
  00059	80 f9 01	 cmp	 cl, 1
  0005c	c7 47 70 00 00
	00 00		 mov	 DWORD PTR [edi+112], 0
  00063	c7 47 68 00 00
	00 00		 mov	 DWORD PTR [edi+104], 0
  0006a	0f 94 c0	 sete	 al
  0006d	c7 47 6c 00 00
	00 00		 mov	 DWORD PTR [edi+108], 0
  00074	89 47 70	 mov	 DWORD PTR [edi+112], eax
  00077	33 c9		 xor	 ecx, ecx
  00079	c7 47 20 00 00
	00 00		 mov	 DWORD PTR [edi+32], 0
  00080	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0
  00087	c7 47 28 00 00
	00 00		 mov	 DWORD PTR [edi+40], 0
  0008e	c7 47 50 00 20
	00 00		 mov	 DWORD PTR [edi+80], 8192 ; 00002000H
  00095	c7 47 54 00 20
	00 00		 mov	 DWORD PTR [edi+84], 8192 ; 00002000H
  0009c	c7 47 4c 00 00
	00 00		 mov	 DWORD PTR [edi+76], 0
  000a3	c7 47 38 ff ff
	ff ff		 mov	 DWORD PTR [edi+56], -1
  000aa	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  000b1	c7 47 30 00 00
	00 00		 mov	 DWORD PTR [edi+48], 0
  000b8	f3 0f 7f 47 3c	 movdqu	 XMMWORD PTR [edi+60], xmm0
  000bd	8b 47 34	 mov	 eax, DWORD PTR [edi+52]
  000c0	40		 inc	 eax
  000c1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000c8	f7 e2		 mul	 edx
  000ca	0f 90 c1	 seto	 cl
  000cd	f7 d9		 neg	 ecx
  000cf	0b c8		 or	 ecx, eax
  000d1	51		 push	 ecx
  000d2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; Line 49
  000d7	8b 57 34	 mov	 edx, DWORD PTR [edi+52]
  000da	89 47 04	 mov	 DWORD PTR [edi+4], eax
  000dd	8d 14 d5 08 00
	00 00		 lea	 edx, DWORD PTR [edx*8+8]
  000e4	52		 push	 edx
  000e5	6a 00		 push	 0
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 _memset
  000ed	83 c4 10	 add	 esp, 16			; 00000010H
; Line 51
  000f0	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]
  000f3	ff 77 34	 push	 DWORD PTR [edi+52]
  000f6	e8 00 00 00 00	 call	 ?Initialize@CIndexCreator@@QAEHK@Z ; CIndexCreator::Initialize
; Line 52
  000fb	8b c7		 mov	 eax, edi
  000fd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00100	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00107	59		 pop	 ecx
  00108	5f		 pop	 edi
  00109	5e		 pop	 esi
  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CNetwork@@QAE@W4NETWORK_ID@@KKK@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 08	 add	 ecx, 8
  00006	e9 00 00 00 00	 jmp	 ??1CIndexCreator@@QAE@XZ ; CIndexCreator::~CIndexCreator
__ehhandler$??0CNetwork@@QAE@W4NETWORK_ID@@KKK@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CNetwork@@QAE@W4NETWORK_ID@@KKK@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CNetwork@@QAE@W4NETWORK_ID@@KKK@Z ENDP		; CNetwork::CNetwork
; Function compile flags: /Ogtp
;	COMDAT ?CloseConnection@CNetwork@@QAEXK@Z
_TEXT	SEGMENT
_txt$1 = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_dwConnectionIndex$ = 8					; size = 4
?CloseConnection@CNetwork@@QAEXK@Z PROC			; CNetwork::CloseConnection, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 267
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _dwConnectionIndex$[ebp]
  00014	56		 push	 esi
  00015	8b f1		 mov	 esi, ecx
; Line 276
  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	81 7c d8 04 f5
	03 00 00	 cmp	 DWORD PTR [eax+ebx*8+4], 1013 ; 000003f5H
  00022	0f 85 95 00 00
	00		 jne	 $lb_return$23
; Line 284
  00028	57		 push	 edi
  00029	8b 3c d8	 mov	 edi, DWORD PTR [eax+ebx*8]
; Line 285
  0002c	c7 04 d8 00 00
	00 00		 mov	 DWORD PTR [eax+ebx*8], 0
; Line 286
  00033	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00036	c7 44 d8 04 00
	00 00 00	 mov	 DWORD PTR [eax+ebx*8+4], 0
; Line 290
  0003e	85 ff		 test	 edi, edi
  00040	74 44		 je	 SHORT $LN3@CloseConne
; Line 293
  00042	39 5f 08	 cmp	 DWORD PTR [edi+8], ebx
  00045	74 01		 je	 SHORT $LN2@CloseConne
; Line 294
  00047	cc		 int	 3
$LN2@CloseConne:
; Line 296
  00048	ff 77 08	 push	 DWORD PTR [edi+8]
  0004b	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?ICFreeIndex@@YGXPAVCIndexCreator@@K@Z ; ICFreeIndex
; Line 299
  00054	8b cf		 mov	 ecx, edi
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 55
  00056	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 299
  0005d	e8 00 00 00 00	 call	 ?CloseSocket@CConnection@@QAEXXZ ; CConnection::CloseSocket
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 37
  00062	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 99
  00069	83 7e 28 00	 cmp	 DWORD PTR [esi+40], 0
  0006d	75 08		 jne	 SHORT $LN15@CloseConne
; Line 100
  0006f	89 7e 20	 mov	 DWORD PTR [esi+32], edi
  00072	89 7e 24	 mov	 DWORD PTR [esi+36], edi
; Line 101
  00075	eb 06		 jmp	 SHORT $LN20@CloseConne
$LN15@CloseConne:
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 37
  00077	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0007a	89 78 24	 mov	 DWORD PTR [eax+36], edi
$LN20@CloseConne:
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 105
  0007d	ff 46 28	 inc	 DWORD PTR [esi+40]
; Line 301
  00080	ff 4e 30	 dec	 DWORD PTR [esi+48]
; Line 104
  00083	89 7e 24	 mov	 DWORD PTR [esi+36], edi
$LN3@CloseConne:
; Line 304
  00086	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pLogManager@@3PAVCLogManager@@A, 0 ; g_pLogManager
  0008d	5f		 pop	 edi
  0008e	74 2d		 je	 SHORT $lb_return$23
; Line 307
  00090	53		 push	 ebx
  00091	8d 45 dc	 lea	 eax, DWORD PTR _txt$1[ebp]
  00094	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EDMFONCD@disconnectd?5?$CFd?$AA@
  00099	50		 push	 eax
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  000a0	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 308
  000a3	8d 45 dc	 lea	 eax, DWORD PTR _txt$1[ebp]
  000a6	50		 push	 eax
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  000ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pLogManager@@3PAVCLogManager@@A ; g_pLogManager
  000b3	50		 push	 eax
  000b4	8d 45 dc	 lea	 eax, DWORD PTR _txt$1[ebp]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?WriteLog@CLogManager@@QAEHPADK@Z ; CLogManager::WriteLog
$lb_return$23:
; Line 312
  000bd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c0	5e		 pop	 esi
  000c1	33 cd		 xor	 ecx, ebp
  000c3	5b		 pop	 ebx
  000c4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c2 04 00	 ret	 4
?CloseConnection@CNetwork@@QAEXK@Z ENDP			; CNetwork::CloseConnection
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?CloseAllConnection@CNetwork@@QAEXXZ
_TEXT	SEGMENT
?CloseAllConnection@CNetwork@@QAEXXZ PROC		; CNetwork::CloseAllConnection, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 240
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; Line 244
  00003	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  00007	74 64		 je	 SHORT $lb_return$22
; Line 248
  00009	57		 push	 edi
  0000a	bf 01 00 00 00	 mov	 edi, 1
  0000f	39 7e 34	 cmp	 DWORD PTR [esi+52], edi
  00012	72 51		 jb	 SHORT $LN2@CloseAllCo
$LL4@CloseAllCo:
; Line 250
  00014	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00017	8b 0c f8	 mov	 ecx, DWORD PTR [eax+edi*8]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 41		 je	 SHORT $LN3@CloseAllCo
; Line 254
  0001e	e8 00 00 00 00	 call	 ?CloseSocket@CConnection@@QAEXXZ ; CConnection::CloseSocket
; Line 255
  00023	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00026	8b 0c f8	 mov	 ecx, DWORD PTR [eax+edi*8]
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 37
  00029	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 99
  00030	83 7e 28 00	 cmp	 DWORD PTR [esi+40], 0
  00034	75 08		 jne	 SHORT $LN10@CloseAllCo
; Line 100
  00036	89 4e 20	 mov	 DWORD PTR [esi+32], ecx
  00039	89 4e 24	 mov	 DWORD PTR [esi+36], ecx
; Line 101
  0003c	eb 06		 jmp	 SHORT $LN15@CloseAllCo
$LN10@CloseAllCo:
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 37
  0003e	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  00041	89 48 24	 mov	 DWORD PTR [eax+36], ecx
$LN15@CloseAllCo:
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 256
  00044	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; Line 105
  00047	ff 46 28	 inc	 DWORD PTR [esi+40]
  0004a	89 4e 24	 mov	 DWORD PTR [esi+36], ecx
; Line 256
  0004d	c7 04 f8 00 00
	00 00		 mov	 DWORD PTR [eax+edi*8], 0
; Line 257
  00054	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00057	c7 44 f8 04 00
	00 00 00	 mov	 DWORD PTR [eax+edi*8+4], 0
$LN3@CloseAllCo:
; Line 248
  0005f	47		 inc	 edi
  00060	3b 7e 34	 cmp	 edi, DWORD PTR [esi+52]
  00063	76 af		 jbe	 SHORT $LL4@CloseAllCo
$LN2@CloseAllCo:
; Line 261
  00065	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0
  0006c	5f		 pop	 edi
$lb_return$22:
  0006d	5e		 pop	 esi
; Line 264
  0006e	c3		 ret	 0
?CloseAllConnection@CNetwork@@QAEXXZ ENDP		; CNetwork::CloseAllConnection
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?StartServer@CNetwork@@QAEHPADG@Z
_TEXT	SEGMENT
_ip$ = 8						; size = 4
_port$ = 12						; size = 2
?StartServer@CNetwork@@QAEHPADG@Z PROC			; CNetwork::StartServer, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 182
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
; Line 190
  00004	6a 00		 push	 0
  00006	6a 01		 push	 1
  00008	6a 02		 push	 2
  0000a	8b f9		 mov	 edi, ecx
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__socket@12
  00012	89 47 38	 mov	 DWORD PTR [edi+56], eax
; Line 192
  00015	83 f8 ff	 cmp	 eax, -1
  00018	75 20		 jne	 SHORT $LN3@StartServe
; Line 194
  0001a	6a 00		 push	 0
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DCLEMDOP@Fail?5to?5create?5socket?$AA@
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetActiveWindow@0
  0002c	50		 push	 eax
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
; Line 195
  00033	33 c0		 xor	 eax, eax
  00035	5f		 pop	 edi
; Line 226
  00036	5d		 pop	 ebp
  00037	c2 08 00	 ret	 8
$LN3@StartServe:
  0003a	56		 push	 esi
; Line 200
  0003b	ff 75 0c	 push	 DWORD PTR _port$[ebp]
  0003e	b8 02 00 00 00	 mov	 eax, 2
  00043	8d 77 3c	 lea	 esi, DWORD PTR [edi+60]
  00046	66 89 06	 mov	 WORD PTR [esi], ax
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__htons@4
; Line 201
  0004f	ff 75 08	 push	 DWORD PTR _ip$[ebp]
  00052	66 89 47 3e	 mov	 WORD PTR [edi+62], ax
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__inet_addr@4
; Line 205
  0005c	6a 10		 push	 16			; 00000010H
  0005e	56		 push	 esi
  0005f	ff 77 38	 push	 DWORD PTR [edi+56]
  00062	89 47 40	 mov	 DWORD PTR [edi+64], eax
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__bind@12
  0006b	5e		 pop	 esi
  0006c	85 c0		 test	 eax, eax
  0006e	78 2b		 js	 SHORT $LN6@StartServe
; Line 214
  00070	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00075	ff 77 38	 push	 DWORD PTR [edi+56]
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__listen@8
  0007e	85 c0		 test	 eax, eax
  00080	79 30		 jns	 SHORT $LN1@StartServe
; Line 216
  00082	6a 00		 push	 0
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@ILDGKGAE@Socket?5Listen?5Fail?$AA@
  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetActiveWindow@0
  00094	50		 push	 eax
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
$LN6@StartServe:
; Line 217
  0009b	ff 77 38	 push	 DWORD PTR [edi+56]
  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__closesocket@4
; Line 218
  000a4	c7 47 38 ff ff
	ff ff		 mov	 DWORD PTR [edi+56], -1
; Line 220
  000ab	33 c0		 xor	 eax, eax
  000ad	5f		 pop	 edi
; Line 226
  000ae	5d		 pop	 ebp
  000af	c2 08 00	 ret	 8
$LN1@StartServe:
; Line 223
  000b2	57		 push	 edi
  000b3	e8 00 00 00 00	 call	 ?StartAcceptThread@@YAHPAVCNetwork@@@Z ; StartAcceptThread
  000b8	83 c4 04	 add	 esp, 4
; Line 225
  000bb	b8 01 00 00 00	 mov	 eax, 1
  000c0	5f		 pop	 edi
; Line 226
  000c1	5d		 pop	 ebp
  000c2	c2 08 00	 ret	 8
?StartServer@CNetwork@@QAEHPADG@Z ENDP			; CNetwork::StartServer
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ConnectToServer@CNetwork@@QAEHPADGP6GXKPAX@ZP6GX1@Z1@Z
_TEXT	SEGMENT
_szIP$ = 8						; size = 4
_wPort$ = 12						; size = 2
_SuccessFunc$ = 16					; size = 4
_FailFunc$ = 20						; size = 4
_pExt$ = 24						; size = 4
?ConnectToServer@CNetwork@@QAEHPADGP6GXKPAX@ZP6GX1@Z1@Z PROC ; CNetwork::ConnectToServer, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 383
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 384
  00003	ff 75 18	 push	 DWORD PTR _pExt$[ebp]
  00006	51		 push	 ecx
  00007	ff 75 14	 push	 DWORD PTR _FailFunc$[ebp]
  0000a	ff 75 10	 push	 DWORD PTR _SuccessFunc$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR _wPort$[ebp]
  00010	ff 75 08	 push	 DWORD PTR _szIP$[ebp]
  00013	e8 00 00 00 00	 call	 ?Connect@@YAHPADGP6GXKPAX@ZP6GX1@ZPAVCNetwork@@1@Z ; Connect
  00018	83 c4 18	 add	 esp, 24			; 00000018H
; Line 386
  0001b	5d		 pop	 ebp
  0001c	c2 14 00	 ret	 20			; 00000014H
?ConnectToServer@CNetwork@@QAEHPADGP6GXKPAX@ZP6GX1@Z1@Z ENDP ; CNetwork::ConnectToServer
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetBufferSizePerConnection@CNetwork@@QAEXK@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_size$ = 8						; size = 4
?SetBufferSizePerConnection@CNetwork@@QAEXK@Z PROC	; CNetwork::SetBufferSizePerConnection, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 421
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetBufferSizePerConnection@CNetwork@@QAEXK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
; Line 422
  00027	83 7f 68 00	 cmp	 DWORD PTR [edi+104], 0
  0002b	0f 85 8a 00 00
	00		 jne	 $LN1@SetBufferS
  00031	83 7f 6c 00	 cmp	 DWORD PTR [edi+108], 0
  00035	0f 85 80 00 00
	00		 jne	 $LN1@SetBufferS
; Line 426
  0003b	6a 24		 push	 36			; 00000024H
  0003d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00042	83 c4 04	 add	 esp, 4
  00045	89 45 f0	 mov	 DWORD PTR $T3[ebp], eax
  00048	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004f	85 c0		 test	 eax, eax
  00051	74 09		 je	 SHORT $LN5@SetBufferS
  00053	8b c8		 mov	 ecx, eax
  00055	e8 00 00 00 00	 call	 ??0CDynamicMemoryContainer@@QAE@XZ ; CDynamicMemoryContainer::CDynamicMemoryContainer
  0005a	eb 02		 jmp	 SHORT $LN6@SetBufferS
$LN5@SetBufferS:
  0005c	33 c0		 xor	 eax, eax
$LN6@SetBufferS:
; Line 427
  0005e	6a 24		 push	 36			; 00000024H
  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00067	89 47 6c	 mov	 DWORD PTR [edi+108], eax
  0006a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0006f	83 c4 04	 add	 esp, 4
  00072	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00075	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0007c	85 c0		 test	 eax, eax
  0007e	74 09		 je	 SHORT $LN7@SetBufferS
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??0CDynamicMemoryContainer@@QAE@XZ ; CDynamicMemoryContainer::CDynamicMemoryContainer
  00087	eb 02		 jmp	 SHORT $LN8@SetBufferS
$LN7@SetBufferS:
  00089	33 c0		 xor	 eax, eax
$LN8@SetBufferS:
; Line 428
  0008b	8b 75 08	 mov	 esi, DWORD PTR _size$[ebp]
  0008e	8b 4f 6c	 mov	 ecx, DWORD PTR [edi+108]
  00091	6a 00		 push	 0
  00093	ff 77 34	 push	 DWORD PTR [edi+52]
  00096	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009d	6a 03		 push	 3
  0009f	56		 push	 esi
  000a0	89 47 68	 mov	 DWORD PTR [edi+104], eax
  000a3	e8 00 00 00 00	 call	 ?Initialize@CDynamicMemoryContainer@@QAEHKKKW4MEMORY_TYPE@@@Z ; CDynamicMemoryContainer::Initialize
; Line 429
  000a8	8b 4f 68	 mov	 ecx, DWORD PTR [edi+104]
  000ab	6a 01		 push	 1
  000ad	ff 77 34	 push	 DWORD PTR [edi+52]
  000b0	6a 03		 push	 3
  000b2	56		 push	 esi
  000b3	e8 00 00 00 00	 call	 ?Initialize@CDynamicMemoryContainer@@QAEHKKKW4MEMORY_TYPE@@@Z ; CDynamicMemoryContainer::Initialize
; Line 431
  000b8	89 77 4c	 mov	 DWORD PTR [edi+76], esi
$LN1@SetBufferS:
; Line 432
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000be	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c5	59		 pop	 ecx
  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetBufferSizePerConnection@CNetwork@@QAEXK@Z$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T3[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__unwindfunclet$?SetBufferSizePerConnection@CNetwork@@QAEXK@Z$1:
  0000b	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
__ehhandler$?SetBufferSizePerConnection@CNetwork@@QAEXK@Z:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetBufferSizePerConnection@CNetwork@@QAEXK@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetBufferSizePerConnection@CNetwork@@QAEXK@Z ENDP	; CNetwork::SetBufferSizePerConnection
; Function compile flags: /Ogtp
;	COMDAT ?GetConnection@CNetwork@@QAEXPAPAVCConnection@@K@Z
_TEXT	SEGMENT
_ppCon$ = 8						; size = 4
_dwConnectionIndex$ = 12				; size = 4
?GetConnection@CNetwork@@QAEXPAPAVCConnection@@K@Z PROC	; CNetwork::GetConnection, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 229
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 231
  00003	8b 55 0c	 mov	 edx, DWORD PTR _dwConnectionIndex$[ebp]
  00006	3b 51 34	 cmp	 edx, DWORD PTR [ecx+52]
  00009	76 0d		 jbe	 SHORT $LN2@GetConnect
; Line 232
  0000b	8b 45 08	 mov	 eax, DWORD PTR _ppCon$[ebp]
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 237
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
$LN2@GetConnect:
; Line 234
  00018	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0001b	8b 0c d0	 mov	 ecx, DWORD PTR [eax+edx*8]
  0001e	8b 45 08	 mov	 eax, DWORD PTR _ppCon$[ebp]
  00021	89 08		 mov	 DWORD PTR [eax], ecx
; Line 237
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?GetConnection@CNetwork@@QAEXPAPAVCConnection@@K@Z ENDP	; CNetwork::GetConnection
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Send@CNetwork@@QAEHKPAUPACKET_LIST@@K@Z
_TEXT	SEGMENT
_index$ = 8						; size = 4
_pList$ = 12						; size = 4
_flag$ = 16						; size = 4
?Send@CNetwork@@QAEHKPAUPACKET_LIST@@K@Z PROC		; CNetwork::Send, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 157
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 164
  00003	8b 55 08	 mov	 edx, DWORD PTR _index$[ebp]
  00006	3b 51 34	 cmp	 edx, DWORD PTR [ecx+52]
  00009	77 20		 ja	 SHORT $LN9@Send
; Line 167
  0000b	85 d2		 test	 edx, edx
  0000d	74 1c		 je	 SHORT $LN9@Send
; Line 170
  0000f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00012	81 7c d0 04 f5
	03 00 00	 cmp	 DWORD PTR [eax+edx*8+4], 1013 ; 000003f5H
  0001a	75 0f		 jne	 SHORT $LN9@Send
; Line 173
  0001c	ff 75 0c	 push	 DWORD PTR _pList$[ebp]
  0001f	8b 0c d0	 mov	 ecx, DWORD PTR [eax+edx*8]
  00022	e8 00 00 00 00	 call	 ?Send@CConnection@@QAEHPAUPACKET_LIST@@@Z ; CConnection::Send
; Line 177
  00027	5d		 pop	 ebp
  00028	c2 0c 00	 ret	 12			; 0000000cH
$LN9@Send:
; Line 176
  0002b	33 c0		 xor	 eax, eax
$lb_return$14:
; Line 177
  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
?Send@CNetwork@@QAEHKPAUPACKET_LIST@@K@Z ENDP		; CNetwork::Send
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Send@CNetwork@@QAEHKPAU_WSABUF@@KK@Z
_TEXT	SEGMENT
_index$ = 8						; size = 4
_pBuf$ = 12						; size = 4
_dwNum$ = 16						; size = 4
_flag$ = 20						; size = 4
?Send@CNetwork@@QAEHKPAU_WSABUF@@KK@Z PROC		; CNetwork::Send, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 134
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 141
  00003	8b 55 08	 mov	 edx, DWORD PTR _index$[ebp]
  00006	3b 51 34	 cmp	 edx, DWORD PTR [ecx+52]
  00009	77 23		 ja	 SHORT $LN9@Send
; Line 144
  0000b	85 d2		 test	 edx, edx
  0000d	74 1f		 je	 SHORT $LN9@Send
; Line 147
  0000f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00012	81 7c d0 04 f5
	03 00 00	 cmp	 DWORD PTR [eax+edx*8+4], 1013 ; 000003f5H
  0001a	75 12		 jne	 SHORT $LN9@Send
; Line 150
  0001c	ff 75 10	 push	 DWORD PTR _dwNum$[ebp]
  0001f	8b 0c d0	 mov	 ecx, DWORD PTR [eax+edx*8]
  00022	ff 75 0c	 push	 DWORD PTR _pBuf$[ebp]
  00025	e8 00 00 00 00	 call	 ?Send@CConnection@@QAEHPAU_WSABUF@@K@Z ; CConnection::Send
; Line 155
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
$LN9@Send:
; Line 154
  0002e	33 c0		 xor	 eax, eax
$lb_return$14:
; Line 155
  00030	5d		 pop	 ebp
  00031	c2 10 00	 ret	 16			; 00000010H
?Send@CNetwork@@QAEHKPAU_WSABUF@@KK@Z ENDP		; CNetwork::Send
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Send@CNetwork@@QAEHKPADKK@Z
_TEXT	SEGMENT
_index$ = 8						; size = 4
_msg$ = 12						; size = 4
_length$ = 16						; size = 4
_flag$ = 20						; size = 4
?Send@CNetwork@@QAEHKPADKK@Z PROC			; CNetwork::Send, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 112
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 118
  00003	8b 55 08	 mov	 edx, DWORD PTR _index$[ebp]
  00006	3b 51 34	 cmp	 edx, DWORD PTR [ecx+52]
  00009	77 23		 ja	 SHORT $LN9@Send
; Line 121
  0000b	85 d2		 test	 edx, edx
  0000d	74 1f		 je	 SHORT $LN9@Send
; Line 124
  0000f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00012	81 7c d0 04 f5
	03 00 00	 cmp	 DWORD PTR [eax+edx*8+4], 1013 ; 000003f5H
  0001a	75 12		 jne	 SHORT $LN9@Send
; Line 128
  0001c	ff 75 10	 push	 DWORD PTR _length$[ebp]
  0001f	8b 0c d0	 mov	 ecx, DWORD PTR [eax+edx*8]
  00022	ff 75 0c	 push	 DWORD PTR _msg$[ebp]
  00025	e8 00 00 00 00	 call	 ?Send@CConnection@@QAEHPADK@Z ; CConnection::Send
; Line 132
  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
$LN9@Send:
; Line 131
  0002e	33 c0		 xor	 eax, eax
$lb_return$14:
; Line 132
  00030	5d		 pop	 ebp
  00031	c2 10 00	 ret	 16			; 00000010H
?Send@CNetwork@@QAEHKPADKK@Z ENDP			; CNetwork::Send
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetConnectionType@CNetwork@@QAEXPAVCConnection@@W4NETWORK_ID@@@Z
_TEXT	SEGMENT
_con$ = 8						; size = 4
_net_id$ = 12						; size = 4
?SetConnectionType@CNetwork@@QAEXPAVCConnection@@W4NETWORK_ID@@@Z PROC ; CNetwork::SetConnectionType, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 388
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 389
  00003	8b 45 0c	 mov	 eax, DWORD PTR _net_id$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN23@SetConnect
; Line 394
  0000a	3d 00 00 00 80	 cmp	 eax, -2147483648	; 80000000H
  0000f	75 15		 jne	 SHORT $LN2@SetConnect
$LN23@SetConnect:
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 73
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _con$[ebp]
  00014	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00017	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0001b	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  0001e	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 405
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
$LN2@SetConnect:
; Line 403
  00026	6a 00		 push	 0
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@BFHDGKNC@Network?5ID?5illegal?$AA@
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetActiveWindow@0
  00038	50		 push	 eax
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
; Line 405
  0003f	5d		 pop	 ebp
  00040	c2 08 00	 ret	 8
?SetConnectionType@CNetwork@@QAEXPAVCConnection@@W4NETWORK_ID@@@Z ENDP ; CNetwork::SetConnectionType
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Broadcast@CNetwork@@QAEXPADKK@Z
_TEXT	SEGMENT
_pMsg$ = 8						; size = 4
_len$ = 12						; size = 4
_flag$ = 16						; size = 4
?Broadcast@CNetwork@@QAEXPADKK@Z PROC			; CNetwork::Broadcast, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 408
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx
; Line 409
  00007	be 01 00 00 00	 mov	 esi, 1
  0000c	39 77 34	 cmp	 DWORD PTR [edi+52], esi
  0000f	72 34		 jb	 SHORT $LN4@Broadcast
  00011	8b 55 08	 mov	 edx, DWORD PTR _pMsg$[ebp]
  00014	53		 push	 ebx
  00015	8b 5d 0c	 mov	 ebx, DWORD PTR _len$[ebp]
$LL6@Broadcast:
; Line 411
  00018	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0001b	8b 0c f0	 mov	 ecx, DWORD PTR [eax+esi*8]
  0001e	85 c9		 test	 ecx, ecx
  00020	74 1c		 je	 SHORT $LN5@Broadcast
; Line 413
  00022	83 7f 70 00	 cmp	 DWORD PTR [edi+112], 0
  00026	74 0c		 je	 SHORT $LN2@Broadcast
; Line 414
  00028	ff 75 10	 push	 DWORD PTR _flag$[ebp]
  0002b	53		 push	 ebx
  0002c	52		 push	 edx
  0002d	e8 00 00 00 00	 call	 ?Send@CConnection@@QAEHPADKK@Z ; CConnection::Send
; Line 415
  00032	eb 07		 jmp	 SHORT $LN13@Broadcast
$LN2@Broadcast:
; Line 416
  00034	53		 push	 ebx
  00035	52		 push	 edx
  00036	e8 00 00 00 00	 call	 ?Send@CConnection@@QAEHPADK@Z ; CConnection::Send
$LN13@Broadcast:
  0003b	8b 55 08	 mov	 edx, DWORD PTR _pMsg$[ebp]
$LN5@Broadcast:
; Line 409
  0003e	46		 inc	 esi
  0003f	3b 77 34	 cmp	 esi, DWORD PTR [edi+52]
  00042	76 d4		 jbe	 SHORT $LL6@Broadcast
  00044	5b		 pop	 ebx
$LN4@Broadcast:
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
; Line 419
  00047	5d		 pop	 ebp
  00048	c2 0c 00	 ret	 12			; 0000000cH
?Broadcast@CNetwork@@QAEXPADKK@Z ENDP			; CNetwork::Broadcast
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetMaxTransferSendSize@CNetwork@@QAEHXZ
_TEXT	SEGMENT
?GetMaxTransferSendSize@CNetwork@@QAEHXZ PROC		; CNetwork::GetMaxTransferSendSize, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.h
; Line 80
  00000	8b 41 54	 mov	 eax, DWORD PTR [ecx+84]
  00003	c3		 ret	 0
?GetMaxTransferSendSize@CNetwork@@QAEHXZ ENDP		; CNetwork::GetMaxTransferSendSize
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetMaxTransferRecvSize@CNetwork@@QAEHXZ
_TEXT	SEGMENT
?GetMaxTransferRecvSize@CNetwork@@QAEHXZ PROC		; CNetwork::GetMaxTransferRecvSize, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.h
; Line 79
  00000	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]
  00003	c3		 ret	 0
?GetMaxTransferRecvSize@CNetwork@@QAEHXZ ENDP		; CNetwork::GetMaxTransferRecvSize
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?CompulsiveDisconnect@CNetwork@@QAEXK@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?CompulsiveDisconnect@CNetwork@@QAEXK@Z PROC		; CNetwork::CompulsiveDisconnect, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 63
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 64
  00003	8b 55 08	 mov	 edx, DWORD PTR _dwIndex$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	74 1d		 je	 SHORT $LN1@Compulsive
; Line 231
  0000a	3b 51 34	 cmp	 edx, DWORD PTR [ecx+52]
  0000d	77 18		 ja	 SHORT $LN1@Compulsive
; Line 234
  0000f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00012	8b 04 d0	 mov	 eax, DWORD PTR [eax+edx*8]
; Line 70
  00015	85 c0		 test	 eax, eax
  00017	74 0e		 je	 SHORT $LN1@Compulsive
; Line 72
  00019	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  0001c	ff 70 2c	 push	 DWORD PTR [eax+44]
  0001f	e8 00 00 00 00	 call	 ?PostDisconnectEvent@@YAXK@Z ; PostDisconnectEvent
  00024	83 c4 04	 add	 esp, 4
$LN1@Compulsive:
; Line 75
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?CompulsiveDisconnect@CNetwork@@QAEXK@Z ENDP		; CNetwork::CompulsiveDisconnect
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?AddConnection@CNetwork@@QAEPAVCConnection@@I@Z
_TEXT	SEGMENT
_dwConnectionIndex$1$ = -80				; size = 4
_len$ = -76						; size = 4
_alive$ = -72						; size = 4
_dwBytes$ = -68						; size = 4
_addr$ = -64						; size = 16
_keep_alive$ = -48					; size = 12
_txt$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_socket$ = 8						; size = 4
?AddConnection@CNetwork@@QAEPAVCConnection@@I@Z PROC	; CNetwork::AddConnection, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 315
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _socket$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b f9		 mov	 edi, ecx
; Line 318
  00018	33 f6		 xor	 esi, esi
; Line 320
  0001a	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?ICAllocIndex@@YGKPAVCIndexCreator@@@Z ; ICAllocIndex
  00023	89 45 b0	 mov	 DWORD PTR _dwConnectionIndex$1$[ebp], eax
; Line 321
  00026	85 c0		 test	 eax, eax
  00028	0f 84 90 01 00
	00		 je	 $lb_return$56
; Line 325
  0002e	8b cf		 mov	 ecx, edi
  00030	e8 00 00 00 00	 call	 ?AllocConnection@CNetwork@@AAEPAVCConnection@@XZ ; CNetwork::AllocConnection
  00035	8b f0		 mov	 esi, eax
; Line 327
  00037	8b ce		 mov	 ecx, esi
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 68
  00039	89 7e 28	 mov	 DWORD PTR [esi+40], edi
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 327
  0003c	ff 77 54	 push	 DWORD PTR [edi+84]
  0003f	ff 77 50	 push	 DWORD PTR [edi+80]
  00042	ff 77 4c	 push	 DWORD PTR [edi+76]
  00045	53		 push	 ebx
  00046	e8 00 00 00 00	 call	 ?Initialize@CConnection@@QAEHIKHH@Z ; CConnection::Initialize
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 50
  0004b	8b 4d b0	 mov	 ecx, DWORD PTR _dwConnectionIndex$1$[ebp]
  0004e	0f 57 c0	 xorps	 xmm0, xmm0
  00051	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 330
  00054	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00057	89 34 c8	 mov	 DWORD PTR [eax+ecx*8], esi
; Line 331
  0005a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0005d	c7 44 c8 04 f5
	03 00 00	 mov	 DWORD PTR [eax+ecx*8+4], 1013 ; 000003f5H
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 68
  00065	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 55
  00068	c7 46 04 f5 03
	00 00		 mov	 DWORD PTR [esi+4], 1013	; 000003f5H
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 334
  0006f	8b 0f		 mov	 ecx, DWORD PTR [edi]
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 68
  00071	0b 4e 08	 or	 ecx, DWORD PTR [esi+8]
  00074	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
  00077	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  0007a	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 344
  0007d	8d 45 b4	 lea	 eax, DWORD PTR _len$[ebp]
  00080	50		 push	 eax
  00081	8d 45 c0	 lea	 eax, DWORD PTR _addr$[ebp]
  00084	c7 45 b4 10 00
	00 00		 mov	 DWORD PTR _len$[ebp], 16 ; 00000010H
  0008b	50		 push	 eax
  0008c	53		 push	 ebx
  0008d	f3 0f 7f 45 c0	 movdqu	 XMMWORD PTR _addr$[ebp], xmm0
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__getpeername@12
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 59
  00098	f3 0f 6f 45 c0	 movdqu	 xmm0, XMMWORD PTR _addr$[ebp]
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 351
  0009d	6a 04		 push	 4
  0009f	8d 45 b8	 lea	 eax, DWORD PTR _alive$[ebp]
  000a2	50		 push	 eax
  000a3	6a 08		 push	 8
  000a5	68 ff ff 00 00	 push	 65535			; 0000ffffH
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 59
  000aa	f3 0f 7f 46 0c	 movdqu	 XMMWORD PTR [esi+12], xmm0
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 351
  000af	53		 push	 ebx
  000b0	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR _alive$[ebp], 1
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__setsockopt@20
; Line 361
  000bd	6a 00		 push	 0
  000bf	6a 00		 push	 0
  000c1	8d 45 bc	 lea	 eax, DWORD PTR _dwBytes$[ebp]
  000c4	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _keep_alive$[ebp], 1
  000cb	50		 push	 eax
  000cc	6a 0c		 push	 12			; 0000000cH
  000ce	8d 45 d0	 lea	 eax, DWORD PTR _keep_alive$[ebp]
  000d1	c7 45 d4 b8 0b
	00 00		 mov	 DWORD PTR _keep_alive$[ebp+4], 3000 ; 00000bb8H
  000d8	50		 push	 eax
  000d9	6a 0c		 push	 12			; 0000000cH
  000db	50		 push	 eax
  000dc	68 04 00 00 98	 push	 -1744830460		; 98000004H
  000e1	53		 push	 ebx
  000e2	c7 45 d8 e8 03
	00 00		 mov	 DWORD PTR _keep_alive$[ebp+8], 1000 ; 000003e8H
  000e9	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _dwBytes$[ebp], 0
  000f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSAIoctl@36
; Line 363
  000f6	8b 0f		 mov	 ecx, DWORD PTR [edi]
; Line 389
  000f8	85 c9		 test	 ecx, ecx
  000fa	75 10		 jne	 SHORT $LN30@AddConnect
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 73
  000fc	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  000ff	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  00103	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00106	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0010a	eb 31		 jmp	 SHORT $LN27@AddConnect
$LN30@AddConnect:
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 394
  0010c	81 f9 00 00 00
	80		 cmp	 ecx, -2147483648	; 80000000H
  00112	75 10		 jne	 SHORT $LN28@AddConnect
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 73
  00114	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00117	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0011b	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  0011e	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 402
  00122	eb 19		 jmp	 SHORT $LN27@AddConnect
$LN28@AddConnect:
; Line 403
  00124	6a 00		 push	 0
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  0012b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@BFHDGKNC@Network?5ID?5illegal?$AA@
  00130	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetActiveWindow@0
  00136	50		 push	 eax
  00137	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
$LN27@AddConnect:
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 69
  0013d	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 365
  00140	6a 00		 push	 0
  00142	ff 70 2c	 push	 DWORD PTR [eax+44]
  00145	ff 35 00 00 00
	00		 push	 DWORD PTR ?g_hCompletionPort@@3PAXA ; g_hCompletionPort
  0014b	53		 push	 ebx
  0014c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateIoCompletionPort@16
  00152	85 c0		 test	 eax, eax
  00154	75 2d		 jne	 SHORT $LN2@AddConnect
; Line 367
  00156	50		 push	 eax
  00157	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  0015c	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@JJFAELEH@CreateIoCompletionPort?5failed?5wi@
  00161	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetActiveWindow@0
  00167	50		 push	 eax
  00168	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
  0016e	5f		 pop	 edi
  0016f	5e		 pop	 esi
; Line 368
  00170	33 c0		 xor	 eax, eax
  00172	5b		 pop	 ebx
; Line 381
  00173	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00176	33 cd		 xor	 ecx, ebp
  00178	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0017d	8b e5		 mov	 esp, ebp
  0017f	5d		 pop	 ebp
  00180	c2 04 00	 ret	 4
$LN2@AddConnect:
; Line 371
  00183	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pLogManager@@3PAVCLogManager@@A, 0 ; g_pLogManager
  0018a	74 2f		 je	 SHORT $LN1@AddConnect
; Line 374
  0018c	ff 76 08	 push	 DWORD PTR [esi+8]
  0018f	8d 45 dc	 lea	 eax, DWORD PTR _txt$[ebp]
  00192	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@DKMJILCA@AddConnection?5?$CFd?$AA@
  00197	50		 push	 eax
  00198	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  0019e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 375
  001a1	8d 45 dc	 lea	 eax, DWORD PTR _txt$[ebp]
  001a4	50		 push	 eax
  001a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  001ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pLogManager@@3PAVCLogManager@@A ; g_pLogManager
  001b1	50		 push	 eax
  001b2	8d 45 dc	 lea	 eax, DWORD PTR _txt$[ebp]
  001b5	50		 push	 eax
  001b6	e8 00 00 00 00	 call	 ?WriteLog@CLogManager@@QAEHPADK@Z ; CLogManager::WriteLog
$LN1@AddConnect:
; Line 377
  001bb	ff 47 30	 inc	 DWORD PTR [edi+48]
$lb_return$56:
; Line 381
  001be	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001c1	8b c6		 mov	 eax, esi
  001c3	5f		 pop	 edi
  001c4	5e		 pop	 esi
  001c5	33 cd		 xor	 ecx, ebp
  001c7	5b		 pop	 ebx
  001c8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001cd	8b e5		 mov	 esp, ebp
  001cf	5d		 pop	 ebp
  001d0	c2 04 00	 ret	 4
?AddConnection@CNetwork@@QAEPAVCConnection@@I@Z ENDP	; CNetwork::AddConnection
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?DisableEncryptionSend@CNetwork@@QAEXXZ
_TEXT	SEGMENT
?DisableEncryptionSend@CNetwork@@QAEXXZ PROC		; CNetwork::DisableEncryptionSend, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.h
; Line 76
  00000	c7 41 70 00 00
	00 00		 mov	 DWORD PTR [ecx+112], 0
  00007	c3		 ret	 0
?DisableEncryptionSend@CNetwork@@QAEXXZ ENDP		; CNetwork::DisableEncryptionSend
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?EnableEncryptionSend@CNetwork@@QAEXXZ
_TEXT	SEGMENT
?EnableEncryptionSend@CNetwork@@QAEXXZ PROC		; CNetwork::EnableEncryptionSend, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.h
; Line 75
  00000	c7 41 70 01 00
	00 00		 mov	 DWORD PTR [ecx+112], 1
  00007	c3		 ret	 0
?EnableEncryptionSend@CNetwork@@QAEXXZ ENDP		; CNetwork::EnableEncryptionSend
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ReleaseListenSocket@CNetwork@@QAEXXZ
_TEXT	SEGMENT
?ReleaseListenSocket@CNetwork@@QAEXXZ PROC		; CNetwork::ReleaseListenSocket, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 57
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; Line 58
  00003	ff 76 74	 push	 DWORD PTR [esi+116]
  00006	ff 76 38	 push	 DWORD PTR [esi+56]
  00009	e8 00 00 00 00	 call	 ?EndAcceptThread@@YAHIPAX@Z ; EndAcceptThread
  0000e	83 c4 08	 add	 esp, 8
; File e:\github\mso_code\4dyuchinet_latest\network.h
; Line 71
  00011	c7 46 74 00 00
	00 00		 mov	 DWORD PTR [esi+116], 0
  00018	5e		 pop	 esi
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 60
  00019	c3		 ret	 0
?ReleaseListenSocket@CNetwork@@QAEXXZ ENDP		; CNetwork::ReleaseListenSocket
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetAcceptTHreadHandle@CNetwork@@QAEXPAX@Z
_TEXT	SEGMENT
_hAcceptThread$ = 8					; size = 4
?SetAcceptTHreadHandle@CNetwork@@QAEXPAX@Z PROC		; CNetwork::SetAcceptTHreadHandle, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.h
; Line 71
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _hAcceptThread$[ebp]
  00006	89 41 74	 mov	 DWORD PTR [ecx+116], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetAcceptTHreadHandle@CNetwork@@QAEXPAX@Z ENDP		; CNetwork::SetAcceptTHreadHandle
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?FreeConnection@CNetwork@@AAEXPAVCConnection@@@Z
_TEXT	SEGMENT
_pCon$ = 8						; size = 4
?FreeConnection@CNetwork@@AAEXPAVCConnection@@@Z PROC	; CNetwork::FreeConnection, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 96
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 37
  00003	8b 55 08	 mov	 edx, DWORD PTR _pCon$[ebp]
  00006	c7 42 24 00 00
	00 00		 mov	 DWORD PTR [edx+36], 0
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 99
  0000d	83 79 28 00	 cmp	 DWORD PTR [ecx+40], 0
  00011	75 0d		 jne	 SHORT $LN2@FreeConnec
; Line 105
  00013	ff 41 28	 inc	 DWORD PTR [ecx+40]
  00016	89 51 20	 mov	 DWORD PTR [ecx+32], edx
  00019	89 51 24	 mov	 DWORD PTR [ecx+36], edx
; Line 106
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
$LN2@FreeConnec:
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 37
  00020	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  00023	89 50 24	 mov	 DWORD PTR [eax+36], edx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 105
  00026	ff 41 28	 inc	 DWORD PTR [ecx+40]
  00029	89 51 24	 mov	 DWORD PTR [ecx+36], edx
; Line 106
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?FreeConnection@CNetwork@@AAEXPAVCConnection@@@Z ENDP	; CNetwork::FreeConnection
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?AllocConnection@CNetwork@@AAEPAVCConnection@@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?AllocConnection@CNetwork@@AAEPAVCConnection@@XZ PROC	; CNetwork::AllocConnection, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\network.cpp
; Line 77
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AllocConnection@CNetwork@@AAEPAVCConnection@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b d1		 mov	 edx, ecx
; Line 80
  00026	8b 72 28	 mov	 esi, DWORD PTR [edx+40]
  00029	85 f6		 test	 esi, esi
  0002b	75 3d		 jne	 SHORT $LN2@AllocConne
; Line 82
  0002d	6a 2c		 push	 44			; 0000002cH
  0002f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00034	83 c4 04	 add	 esp, 4
  00037	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  0003a	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  0003d	85 c0		 test	 eax, eax
  0003f	74 17		 je	 SHORT $LN5@AllocConne
  00041	8b c8		 mov	 ecx, eax
  00043	e8 00 00 00 00	 call	 ??0CConnection@@QAE@XZ	; CConnection::CConnection
; Line 94
  00048	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00052	59		 pop	 ecx
  00053	5e		 pop	 esi
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN5@AllocConne:
; Line 82
  00058	33 c0		 xor	 eax, eax
; Line 94
  0005a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00064	59		 pop	 ecx
  00065	5e		 pop	 esi
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
$LN2@AllocConne:
; Line 86
  0006a	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
; Line 87
  0006d	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00070	89 4a 20	 mov	 DWORD PTR [edx+32], ecx
; Line 89
  00073	8d 4e ff	 lea	 ecx, DWORD PTR [esi-1]
  00076	89 4a 28	 mov	 DWORD PTR [edx+40], ecx
$lb_return$11:
; Line 94
  00079	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00083	59		 pop	 ecx
  00084	5e		 pop	 esi
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AllocConnection@CNetwork@@AAEPAVCConnection@@XZ$1:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?AllocConnection@CNetwork@@AAEPAVCConnection@@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AllocConnection@CNetwork@@AAEPAVCConnection@@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AllocConnection@CNetwork@@AAEPAVCConnection@@XZ ENDP	; CNetwork::AllocConnection
; Function compile flags: /Ogtp
;	COMDAT ??_GCConnection@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCConnection@@QAEPAXI@Z PROC				; CConnection::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CConnection@@QAE@XZ	; CConnection::~CConnection
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCConnection@@QAEPAXI@Z ENDP				; CConnection::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetNetwork@CConnection@@QAEXPAVCNetwork@@@Z
_TEXT	SEGMENT
_pNet$ = 8						; size = 4
?SetNetwork@CConnection@@QAEXPAVCNetwork@@@Z PROC	; CConnection::SetNetwork, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 68
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _pNet$[ebp]
  00006	89 41 28	 mov	 DWORD PTR [ecx+40], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetNetwork@CConnection@@QAEXPAVCNetwork@@@Z ENDP	; CConnection::SetNetwork
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetAddress@CConnection@@QAEXPAUsockaddr_in@@@Z
_TEXT	SEGMENT
_addr$ = 8						; size = 4
?SetAddress@CConnection@@QAEXPAUsockaddr_in@@@Z PROC	; CConnection::SetAddress, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 59
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _addr$[ebp]
  00006	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  0000a	f3 0f 7f 41 0c	 movdqu	 XMMWORD PTR [ecx+12], xmm0
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?SetAddress@CConnection@@QAEXPAUsockaddr_in@@@Z ENDP	; CConnection::SetAddress
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetConnectionStatus@CConnection@@QAEXW4CONNECTION_STATUS@@@Z
_TEXT	SEGMENT
_st$ = 8						; size = 4
?SetConnectionStatus@CConnection@@QAEXW4CONNECTION_STATUS@@@Z PROC ; CConnection::SetConnectionStatus, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 55
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _st$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetConnectionStatus@CConnection@@QAEXW4CONNECTION_STATUS@@@Z ENDP ; CConnection::SetConnectionStatus
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetConnectionIndex@CConnection@@QAEXK@Z
_TEXT	SEGMENT
_index$ = 8						; size = 4
?SetConnectionIndex@CConnection@@QAEXK@Z PROC		; CConnection::SetConnectionIndex, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 50
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  00006	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetConnectionIndex@CConnection@@QAEXK@Z ENDP		; CConnection::SetConnectionIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetConnectionIndex@CConnection@@QAEKXZ
_TEXT	SEGMENT
?GetConnectionIndex@CConnection@@QAEKXZ PROC		; CConnection::GetConnectionIndex, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 49
  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	c3		 ret	 0
?GetConnectionIndex@CConnection@@QAEKXZ ENDP		; CConnection::GetConnectionIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetHandleID@CConnection@@QAEKXZ
_TEXT	SEGMENT
?GetHandleID@CConnection@@QAEKXZ PROC			; CConnection::GetHandleID, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 47
  00000	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  00003	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  00006	c3		 ret	 0
?GetHandleID@CConnection@@QAEKXZ ENDP			; CConnection::GetHandleID
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetHandleID@CConnection@@QAEXW4NETWORK_ID@@KW4ACTION_TYPE@@@Z
_TEXT	SEGMENT
_apType$ = 8						; size = 4
_dwIndex$ = 12						; size = 4
_acType$ = 16						; size = 4
?SetHandleID@CConnection@@QAEXW4NETWORK_ID@@KW4ACTION_TYPE@@@Z PROC ; CConnection::SetHandleID, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 43
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 68
  00003	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00006	8b 55 08	 mov	 edx, DWORD PTR _apType$[ebp]
  00009	0b 55 0c	 or	 edx, DWORD PTR _dwIndex$[ebp]
  0000c	0b 55 10	 or	 edx, DWORD PTR _acType$[ebp]
  0000f	89 50 2c	 mov	 DWORD PTR [eax+44], edx
  00012	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  00015	89 50 2c	 mov	 DWORD PTR [eax+44], edx
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 46
  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
?SetHandleID@CConnection@@QAEXW4NETWORK_ID@@KW4ACTION_TYPE@@@Z ENDP ; CConnection::SetHandleID
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetNextConnection@CConnection@@QAEPAV1@XZ
_TEXT	SEGMENT
?GetNextConnection@CConnection@@QAEPAV1@XZ PROC		; CConnection::GetNextConnection, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 38
  00000	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  00003	c3		 ret	 0
?GetNextConnection@CConnection@@QAEPAV1@XZ ENDP		; CConnection::GetNextConnection
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?AddNextConnection@CConnection@@QAEXPAV1@@Z
_TEXT	SEGMENT
_pCon$ = 8						; size = 4
?AddNextConnection@CConnection@@QAEXPAV1@@Z PROC	; CConnection::AddNextConnection, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 37
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _pCon$[ebp]
  00006	89 41 24	 mov	 DWORD PTR [ecx+36], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?AddNextConnection@CConnection@@QAEXPAV1@@Z ENDP	; CConnection::AddNextConnection
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetOverlappedRecv@CConnection@@QAEPAVCOverlappedRecv@@XZ
_TEXT	SEGMENT
?GetOverlappedRecv@CConnection@@QAEPAVCOverlappedRecv@@XZ PROC ; CConnection::GetOverlappedRecv, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 36
  00000	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  00003	c3		 ret	 0
?GetOverlappedRecv@CConnection@@QAEPAVCOverlappedRecv@@XZ ENDP ; CConnection::GetOverlappedRecv
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetOverlappedSend@CConnection@@QAEPAVCOverlappedSend@@XZ
_TEXT	SEGMENT
?GetOverlappedSend@CConnection@@QAEPAVCOverlappedSend@@XZ PROC ; CConnection::GetOverlappedSend, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\connection.h
; Line 35
  00000	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00003	c3		 ret	 0
?GetOverlappedSend@CConnection@@QAEPAVCOverlappedSend@@XZ ENDP ; CConnection::GetOverlappedSend
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetBlockMethod@COverlapped@@QAEXW4BLOCK_METHOD@@@Z
_TEXT	SEGMENT
_bm$ = 8						; size = 4
?SetBlockMethod@COverlapped@@QAEXW4BLOCK_METHOD@@@Z PROC ; COverlapped::SetBlockMethod, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 73
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00006	25 ff 00 ff ff	 and	 eax, -65281		; ffff00ffH
  0000b	0b 45 08	 or	 eax, DWORD PTR _bm$[ebp]
  0000e	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?SetBlockMethod@COverlapped@@QAEXW4BLOCK_METHOD@@@Z ENDP ; COverlapped::SetBlockMethod
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetHandleID@COverlapped@@QAEKXZ
_TEXT	SEGMENT
?GetHandleID@COverlapped@@QAEKXZ PROC			; COverlapped::GetHandleID, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 69
  00000	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  00003	c3		 ret	 0
?GetHandleID@COverlapped@@QAEKXZ ENDP			; COverlapped::GetHandleID
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetHandleID@COverlapped@@QAEXW4NETWORK_ID@@KW4ACTION_TYPE@@@Z
_TEXT	SEGMENT
_apType$ = 8						; size = 4
_dwIndex$ = 12						; size = 4
_acType$ = 16						; size = 4
?SetHandleID@COverlapped@@QAEXW4NETWORK_ID@@KW4ACTION_TYPE@@@Z PROC ; COverlapped::SetHandleID, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\overlapped.h
; Line 68
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _apType$[ebp]
  00006	0b 45 0c	 or	 eax, DWORD PTR _dwIndex$[ebp]
  00009	0b 45 10	 or	 eax, DWORD PTR _acType$[ebp]
  0000c	89 41 2c	 mov	 DWORD PTR [ecx+44], eax
  0000f	5d		 pop	 ebp
  00010	c2 0c 00	 ret	 12			; 0000000cH
?SetHandleID@COverlapped@@QAEXW4NETWORK_ID@@KW4ACTION_TYPE@@@Z ENDP ; COverlapped::SetHandleID
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCDynamicMemoryContainer@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDynamicMemoryContainer@@QAEPAXI@Z PROC		; CDynamicMemoryContainer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CDynamicMemoryContainer@@QAE@XZ ; CDynamicMemoryContainer::~CDynamicMemoryContainer
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCDynamicMemoryContainer@@QAEPAXI@Z ENDP		; CDynamicMemoryContainer::`scalar deleting destructor'
_TEXT	ENDS
END
