; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	E:\GitHub\Mso_Code\4DyuchiNET_Latest\dynamic_memory.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?AddMemory@CDynamicMemoryContainer@@AAEHK@Z	; CDynamicMemoryContainer::AddMemory
PUBLIC	?Alloc@CDynamicMemoryContainer@@QAEPADXZ	; CDynamicMemoryContainer::Alloc
PUBLIC	?Free@CDynamicMemoryContainer@@QAEXPAD@Z	; CDynamicMemoryContainer::Free
PUBLIC	?Initialize@CDynamicMemoryContainer@@QAEHKKKW4MEMORY_TYPE@@@Z ; CDynamicMemoryContainer::Initialize
PUBLIC	?Release@CDynamicMemoryContainer@@QAEHXZ	; CDynamicMemoryContainer::Release
PUBLIC	??0CDynamicMemoryContainer@@QAE@XZ		; CDynamicMemoryContainer::CDynamicMemoryContainer
PUBLIC	??1CDynamicMemoryContainer@@QAE@XZ		; CDynamicMemoryContainer::~CDynamicMemoryContainer
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
;	COMDAT ??1CDynamicMemoryContainer@@QAE@XZ
_TEXT	SEGMENT
??1CDynamicMemoryContainer@@QAE@XZ PROC			; CDynamicMemoryContainer::~CDynamicMemoryContainer, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\dynamic_memory.cpp
; Line 96
  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx
; Line 99
  00003	83 3f 00	 cmp	 DWORD PTR [edi], 0
  00006	74 3a		 je	 SHORT $LN5@CDynamicMe
; Line 101
  00008	56		 push	 esi
  00009	33 f6		 xor	 esi, esi
  0000b	39 77 04	 cmp	 DWORD PTR [edi+4], esi
  0000e	76 21		 jbe	 SHORT $LN2@CDynamicMe
$LL4@CDynamicMe:
; Line 103
  00010	8b 07		 mov	 eax, DWORD PTR [edi]
  00012	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  00015	85 c0		 test	 eax, eax
  00017	74 12		 je	 SHORT $LN3@CDynamicMe
; Line 105
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; Line 106
  0001f	8b 07		 mov	 eax, DWORD PTR [edi]
  00021	83 c4 04	 add	 esp, 4
  00024	c7 04 b0 00 00
	00 00		 mov	 DWORD PTR [eax+esi*4], 0
$LN3@CDynamicMe:
; Line 101
  0002b	46		 inc	 esi
  0002c	3b 77 04	 cmp	 esi, DWORD PTR [edi+4]
  0002f	72 df		 jb	 SHORT $LL4@CDynamicMe
$LN2@CDynamicMe:
; Line 111
  00031	ff 37		 push	 DWORD PTR [edi]
  00033	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00038	83 c4 04	 add	 esp, 4
; Line 112
  0003b	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00041	5e		 pop	 esi
$LN5@CDynamicMe:
  00042	5f		 pop	 edi
; Line 115
  00043	c3		 ret	 0
??1CDynamicMemoryContainer@@QAE@XZ ENDP			; CDynamicMemoryContainer::~CDynamicMemoryContainer
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CDynamicMemoryContainer@@QAE@XZ
_TEXT	SEGMENT
??0CDynamicMemoryContainer@@QAE@XZ PROC			; CDynamicMemoryContainer::CDynamicMemoryContainer, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\dynamic_memory.cpp
; Line 6
  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 14
  00006	8b c1		 mov	 eax, ecx
  00008	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  0000f	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
  00016	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  0001d	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00024	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  0002b	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
  00032	c7 41 10 01 00
	00 00		 mov	 DWORD PTR [ecx+16], 1
  00039	c3		 ret	 0
??0CDynamicMemoryContainer@@QAE@XZ ENDP			; CDynamicMemoryContainer::CDynamicMemoryContainer
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Release@CDynamicMemoryContainer@@QAEHXZ
_TEXT	SEGMENT
?Release@CDynamicMemoryContainer@@QAEHXZ PROC		; CDynamicMemoryContainer::Release, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\dynamic_memory.cpp
; Line 92
  00000	b8 01 00 00 00	 mov	 eax, 1
; Line 93
  00005	c3		 ret	 0
?Release@CDynamicMemoryContainer@@QAEHXZ ENDP		; CDynamicMemoryContainer::Release
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Initialize@CDynamicMemoryContainer@@QAEHKKKW4MEMORY_TYPE@@@Z
_TEXT	SEGMENT
_dwSize$ = 8						; size = 4
_dwDefaultNum$ = 12					; size = 4
_dwMaxNum$ = 16						; size = 4
_type$ = 20						; size = 4
?Initialize@CDynamicMemoryContainer@@QAEHKKKW4MEMORY_TYPE@@@Z PROC ; CDynamicMemoryContainer::Initialize, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\dynamic_memory.cpp
; Line 46
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 47
  00003	8b 45 14	 mov	 eax, DWORD PTR _type$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	57		 push	 edi
; Line 48
  0000a	8b 7d 10	 mov	 edi, DWORD PTR _dwMaxNum$[ebp]
  0000d	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00010	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
; Line 51
  00013	83 e8 00	 sub	 eax, 0
  00016	74 1b		 je	 SHORT $LN1@Initialize
  00018	48		 dec	 eax
  00019	75 28		 jne	 SHORT $LN3@Initialize
; Line 55
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _dwSize$[ebp]
  0001e	49		 dec	 ecx
  0001f	c1 e9 06	 shr	 ecx, 6
  00022	41		 inc	 ecx
; Line 56
  00023	8b c1		 mov	 eax, ecx
  00025	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  00028	c1 e0 06	 shl	 eax, 6
  0002b	89 46 18	 mov	 DWORD PTR [esi+24], eax
; Line 57
  0002e	6b c1 4c	 imul	 eax, ecx, 76
; Line 59
  00031	eb 0d		 jmp	 SHORT $LN7@Initialize
$LN1@Initialize:
; Line 63
  00033	8b 45 08	 mov	 eax, DWORD PTR _dwSize$[ebp]
  00036	c7 46 14 01 00
	00 00		 mov	 DWORD PTR [esi+20], 1
  0003d	89 46 18	 mov	 DWORD PTR [esi+24], eax
$LN7@Initialize:
; Line 64
  00040	89 46 1c	 mov	 DWORD PTR [esi+28], eax
$LN3@Initialize:
; Line 70
  00043	33 c9		 xor	 ecx, ecx
  00045	8b c7		 mov	 eax, edi
  00047	ba 04 00 00 00	 mov	 edx, 4
  0004c	f7 e2		 mul	 edx
  0004e	0f 90 c1	 seto	 cl
  00051	f7 d9		 neg	 ecx
  00053	0b c8		 or	 ecx, eax
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; Line 71
  0005b	8d 0c bd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*4]
  00062	89 06		 mov	 DWORD PTR [esi], eax
  00064	51		 push	 ecx
  00065	6a 00		 push	 0
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 _memset
  0006d	83 c4 10	 add	 esp, 16			; 00000010H
; Line 73
  00070	8b ce		 mov	 ecx, esi
  00072	ff 75 0c	 push	 DWORD PTR _dwDefaultNum$[ebp]
  00075	e8 00 00 00 00	 call	 ?AddMemory@CDynamicMemoryContainer@@AAEHK@Z ; CDynamicMemoryContainer::AddMemory
  0007a	5f		 pop	 edi
; Line 74
  0007b	b8 01 00 00 00	 mov	 eax, 1
  00080	5e		 pop	 esi
; Line 75
  00081	5d		 pop	 ebp
  00082	c2 10 00	 ret	 16			; 00000010H
?Initialize@CDynamicMemoryContainer@@QAEHKKKW4MEMORY_TYPE@@@Z ENDP ; CDynamicMemoryContainer::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Free@CDynamicMemoryContainer@@QAEXPAD@Z
_TEXT	SEGMENT
_pMemory$ = 8						; size = 4
?Free@CDynamicMemoryContainer@@QAEXPAD@Z PROC		; CDynamicMemoryContainer::Free, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\dynamic_memory.cpp
; Line 36
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 39
  00003	8b 11		 mov	 edx, DWORD PTR [ecx]
  00005	8b 45 08	 mov	 eax, DWORD PTR _pMemory$[ebp]
  00008	56		 push	 esi
  00009	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  0000c	89 04 b2	 mov	 DWORD PTR [edx+esi*4], eax
; Line 40
  0000f	ff 49 08	 dec	 DWORD PTR [ecx+8]
; Line 41
  00012	ff 41 04	 inc	 DWORD PTR [ecx+4]
  00015	5e		 pop	 esi
; Line 43
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?Free@CDynamicMemoryContainer@@QAEXPAD@Z ENDP		; CDynamicMemoryContainer::Free
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Alloc@CDynamicMemoryContainer@@QAEPADXZ
_TEXT	SEGMENT
?Alloc@CDynamicMemoryContainer@@QAEPADXZ PROC		; CDynamicMemoryContainer::Alloc, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\dynamic_memory.cpp
; Line 18
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; Line 21
  00003	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  00007	75 0e		 jne	 SHORT $LN1@Alloc
; Line 23
  00009	ff 76 10	 push	 DWORD PTR [esi+16]
  0000c	e8 00 00 00 00	 call	 ?AddMemory@CDynamicMemoryContainer@@AAEHK@Z ; CDynamicMemoryContainer::AddMemory
  00011	85 c0		 test	 eax, eax
  00013	75 02		 jne	 SHORT $LN1@Alloc
  00015	5e		 pop	 esi
; Line 34
  00016	c3		 ret	 0
$LN1@Alloc:
; Line 26
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	8b 06		 mov	 eax, DWORD PTR [esi]
  0001c	8b 54 88 fc	 mov	 edx, DWORD PTR [eax+ecx*4-4]
; Line 27
  00020	c7 44 88 fc 00
	00 00 00	 mov	 DWORD PTR [eax+ecx*4-4], 0
; Line 32
  00028	8b c2		 mov	 eax, edx
  0002a	ff 4e 04	 dec	 DWORD PTR [esi+4]
  0002d	ff 46 08	 inc	 DWORD PTR [esi+8]
  00030	5e		 pop	 esi
; Line 34
  00031	c3		 ret	 0
?Alloc@CDynamicMemoryContainer@@QAEPADXZ ENDP		; CDynamicMemoryContainer::Alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?AddMemory@CDynamicMemoryContainer@@AAEHK@Z
_TEXT	SEGMENT
_dwNum$ = 8						; size = 4
?AddMemory@CDynamicMemoryContainer@@AAEHK@Z PROC	; CDynamicMemoryContainer::AddMemory, COMDAT
; _this$ = ecx
; File e:\github\mso_code\4dyuchinet_latest\dynamic_memory.cpp
; Line 78
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
; Line 79
  00007	8b 7d 08	 mov	 edi, DWORD PTR _dwNum$[ebp]
  0000a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000d	03 c7		 add	 eax, edi
  0000f	3b 46 0c	 cmp	 eax, DWORD PTR [esi+12]
  00012	72 08		 jb	 SHORT $LN4@AddMemory
; Line 80
  00014	5f		 pop	 edi
  00015	33 c0		 xor	 eax, eax
  00017	5e		 pop	 esi
; Line 89
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN4@AddMemory:
; Line 82
  0001c	85 ff		 test	 edi, edi
  0001e	74 19		 je	 SHORT $LN1@AddMemory
$LL3@AddMemory:
; Line 84
  00020	ff 76 1c	 push	 DWORD PTR [esi+28]
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0002b	83 c4 04	 add	 esp, 4
  0002e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00030	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
; Line 85
  00033	ff 46 04	 inc	 DWORD PTR [esi+4]
  00036	4f		 dec	 edi
  00037	75 e7		 jne	 SHORT $LL3@AddMemory
$LN1@AddMemory:
  00039	5f		 pop	 edi
; Line 87
  0003a	b8 01 00 00 00	 mov	 eax, 1
  0003f	5e		 pop	 esi
; Line 89
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?AddMemory@CDynamicMemoryContainer@@AAEHK@Z ENDP	; CDynamicMemoryContainer::AddMemory
_TEXT	ENDS
END
